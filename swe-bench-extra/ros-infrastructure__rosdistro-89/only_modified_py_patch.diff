diff --git a/src/rosdistro/manifest_provider/git.py b/src/rosdistro/manifest_provider/git.py
index 8951983..3eca46f 100644
--- a/src/rosdistro/manifest_provider/git.py
+++ b/src/rosdistro/manifest_provider/git.py
@@ -65,14 +65,16 @@ def git_source_manifest_provider(repo):
             cache = { '_ref': result['output'] }
 
             # Find package.xml files inside the repo.
-            for package_path in catkin_pkg.packages.find_package_paths(git_repo_path):
+            for package_path in find_package_paths(git_repo_path):
+                if package_path == '.':
+                    package_path = ''
                 with open(os.path.join(git_repo_path, package_path, 'package.xml'), 'r') as f:
                     package_xml = f.read()
                 try:
                     name = parse_package_string(package_xml).name
                 except InvalidPackage:
                     raise RuntimeError('Unable to parse package.xml file found in %s' % repo.url)
-                cache[name] = [ path[len(git_repo_path)+1:], package_xml ]
+                cache[name] = [ package_path, package_xml ]
 
     except Exception as e:
         raise RuntimeError('Unable to fetch source package.xml files: %s' % e)
diff --git a/src/rosdistro/manifest_provider/github.py b/src/rosdistro/manifest_provider/github.py
index 7960c3d..6305d47 100644
--- a/src/rosdistro/manifest_provider/github.py
+++ b/src/rosdistro/manifest_provider/github.py
@@ -83,7 +83,7 @@ def github_source_manifest_provider(repo):
         authheader = 'Basic %s' % base64.b64encode('%s:%s' % (GITHUB_USER, GITHUB_PASSWORD))
         req.add_header('Authorization', authheader)
     try:
-        tree_json = json.load(urlopen(req))
+        tree_json = json.loads(urlopen(req).read().decode('utf-8'))
         logger.debug('- load repo tree from %s' % tree_url)
     except URLError as e:
         raise RuntimeError('Unable to fetch JSON tree from %s: %s' % (tree_url, e))
@@ -107,14 +107,14 @@ def github_source_manifest_provider(repo):
                 return False
             if parent == '':
                 return True
-    package_xml_paths = filter(package_xml_in_parent, package_xml_paths)
+    package_xml_paths = list(filter(package_xml_in_parent, package_xml_paths))
 
     cache = { '_ref': tree_json['sha'] }
     for package_xml_path in package_xml_paths:
         url = 'https://raw.githubusercontent.com/%s/%s/%s' % \
             (path, cache['_ref'], package_xml_path + '/package.xml' if package_xml_path else 'package.xml')
         logger.debug('- load package.xml from %s' % url)
-        package_xml = urlopen(url).read()
+        package_xml = urlopen(url).read().decode('utf-8')
         name = parse_package_string(package_xml).name
         cache[name] = [ package_xml_path, package_xml ]
 

