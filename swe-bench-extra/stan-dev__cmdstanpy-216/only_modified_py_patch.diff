diff --git a/cmdstanpy/__init__.py b/cmdstanpy/__init__.py
index 9f1dbbb..45dc8e6 100644
--- a/cmdstanpy/__init__.py
+++ b/cmdstanpy/__init__.py
@@ -5,7 +5,7 @@ import atexit
 import shutil
 import tempfile
 
-STANSUMMARY_STATS = [
+_STANSUMMARY_STATS = [
     'Mean',
     'MCSE',
     'StdDev',
@@ -17,20 +17,24 @@ STANSUMMARY_STATS = [
     'R_hat',
 ]
 
-TMPDIR = tempfile.mkdtemp()
+_TMPDIR = tempfile.mkdtemp()
 
 
-def cleanup_tmpdir():
-    """Force deletion of TMPDIR."""
-    print('deleting tmpfiles dir: {}'.format(TMPDIR))
-    shutil.rmtree(TMPDIR, ignore_errors=True)
+def _cleanup_tmpdir():
+    """Force deletion of _TMPDIR."""
+    print('deleting tmpfiles dir: {}'.format(_TMPDIR))
+    shutil.rmtree(_TMPDIR, ignore_errors=True)
     print('done')
 
 
-atexit.register(cleanup_tmpdir)
+atexit.register(_cleanup_tmpdir)
 
 
 from .utils import set_cmdstan_path, cmdstan_path, set_make_env, install_cmdstan # noqa
 from .stanfit import CmdStanMCMC, CmdStanMLE, CmdStanGQ, CmdStanVB # noqa
 from .model import CmdStanModel # noqa
 from ._version import __version__ # noqa
+
+__all__ = ['set_cmdstan_path', 'cmdstan_path', 'set_make_env',
+            'install_cmdstan', 'CmdStanMCMC', 'CmdStanMLE',
+            'CmdStanGQ', 'CmdStanVB', 'CmdStanModel']
diff --git a/cmdstanpy/stanfit.py b/cmdstanpy/stanfit.py
index 9ca97d5..33cb70e 100644
--- a/cmdstanpy/stanfit.py
+++ b/cmdstanpy/stanfit.py
@@ -11,7 +11,7 @@ from time import time
 import numpy as np
 import pandas as pd
 
-from cmdstanpy import TMPDIR
+from cmdstanpy import _TMPDIR
 from cmdstanpy.utils import (
     check_sampler_csv,
     scan_optimize_csv,
@@ -54,7 +54,7 @@ class RunSet:
         if args.output_dir is not None:
             output_dir = args.output_dir
         else:
-            output_dir = TMPDIR
+            output_dir = _TMPDIR
 
         self._csv_files = []
         self._diagnostic_files = [None for _ in range(chains)]
@@ -77,7 +77,7 @@ class RunSet:
             if args.save_diagnostics:
                 if args.output_dir is None:
                     diag_file = create_named_text_file(
-                        dir=TMPDIR,
+                        dir=_TMPDIR,
                         prefix='{}-diagnostic-{}-'.format(file_basename, i + 1),
                         suffix='.csv',
                     )
@@ -202,7 +202,7 @@ class RunSet:
                 )
 
             path, filename = os.path.split(self._csv_files[i])
-            if path == TMPDIR:  # cleanup tmpstr in filename
+            if path == _TMPDIR:  # cleanup tmpstr in filename
                 root, ext = os.path.splitext(filename)
                 rlist = root.split('-')
                 root = '-'.join(rlist[:-1])
@@ -431,7 +431,7 @@ class CmdStanMCMC:
             self.runset._args.model_name, self.runset.chains
         )
         tmp_csv_path = create_named_text_file(
-            dir=TMPDIR, prefix=tmp_csv_file, suffix='.csv'
+            dir=_TMPDIR, prefix=tmp_csv_file, suffix='.csv'
         )
         cmd = [
             cmd_path,
diff --git a/cmdstanpy/utils.py b/cmdstanpy/utils.py
index 5f80dac..e7dd555 100644
--- a/cmdstanpy/utils.py
+++ b/cmdstanpy/utils.py
@@ -24,7 +24,7 @@ import numpy as np
 import pandas as pd
 
 
-from cmdstanpy import TMPDIR
+from cmdstanpy import _TMPDIR
 
 EXTENSION = '.exe' if platform.system() == 'Windows' else ''
 
@@ -66,7 +66,7 @@ class MaybeDictToFilePath():
         for obj in objs:
             if isinstance(obj, dict):
                 data_file = create_named_text_file(
-                    dir=TMPDIR, prefix='', suffix='.json'
+                    dir=_TMPDIR, prefix='', suffix='.json'
                 )
                 self._logger.debug('input tempfile: %s', data_file)
                 if any(
@@ -192,6 +192,7 @@ def cmdstan_path() -> str:
                 'run command line script "install_cmdstan"'
             )
         cmdstan = os.path.join(cmdstan_dir, latest_cmdstan)
+        os.environ['CMDSTAN'] = cmdstan
     validate_cmdstan_path(cmdstan)
     return cmdstan
 

