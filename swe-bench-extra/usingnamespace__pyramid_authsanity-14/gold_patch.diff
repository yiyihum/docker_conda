diff --git a/setup.py b/setup.py
index e386efb..2c1f362 100644
--- a/setup.py
+++ b/setup.py
@@ -9,7 +9,7 @@ except IOError:
     README = CHANGES = ''
 
 requires = [
-    'pyramid',
+    'pyramid>=2.0',
     'zope.interface',
     'pyramid_services>=0.3'
 ]
@@ -27,7 +27,7 @@ docs_require = requires + [
 
 setup(
     name='pyramid_authsanity',
-    version='1.1.0',
+    version='2.0.0',
     description='An auth policy for the Pyramid Web Framework with sane defaults.',
     long_description=README + '\n\n' + CHANGES,
     classifiers=[
@@ -36,11 +36,10 @@ setup(
         'Intended Audience :: Developers',
         'License :: OSI Approved :: ISC License (ISCL)',
         'Programming Language :: Python',
-        'Programming Language :: Python :: 2.6',
-        'Programming Language :: Python :: 2.7',
-        'Programming Language :: Python :: 3.4',
-        'Programming Language :: Python :: 3.5',
         'Programming Language :: Python :: 3.6',
+        'Programming Language :: Python :: 3.7',
+        'Programming Language :: Python :: 3.8',
+        'Programming Language :: Python :: 3.9',
         'Programming Language :: Python :: Implementation :: CPython',
         'Programming Language :: Python :: Implementation :: PyPy',
     ],
diff --git a/src/pyramid_authsanity/policy.py b/src/pyramid_authsanity/policy.py
index d30d392..96b6d0f 100644
--- a/src/pyramid_authsanity/policy.py
+++ b/src/pyramid_authsanity/policy.py
@@ -6,7 +6,7 @@ from pyramid.interfaces import (
     IDebugLogger,
     )
 
-from pyramid.security import (
+from pyramid.authorization import (
     Authenticated,
     Everyone,
     )
diff --git a/src/pyramid_authsanity/sources.py b/src/pyramid_authsanity/sources.py
index 48d392b..ff9a047 100644
--- a/src/pyramid_authsanity/sources.py
+++ b/src/pyramid_authsanity/sources.py
@@ -1,5 +1,3 @@
-from pyramid.compat import native_
-
 from webob.cookies import (
     JSONSerializer,
     SignedCookieProfile,
@@ -129,6 +127,13 @@ def HeaderAuthSourceInitializer(
                 serializer=serializer,
                 )
 
+        def _native(s, encoding='latin-1', errors='strict'):
+            """If ``s`` is an instance of ``str``, return
+            ``s``, otherwise return ``str(s, encoding, errors)``"""
+            if isinstance(s, str):
+                return s
+            return str(s, encoding, errors)
+
         def _get_authorization(self):
             try:
                 type, token = self.request.authorization
@@ -154,7 +159,7 @@ def HeaderAuthSourceInitializer(
                 self.cur_val = None
 
             token = self._create_authorization(value)
-            auth_info = native_(b'Bearer ' + token, 'latin-1', 'strict')
+            auth_info = self._native(b'Bearer ' + token, 'latin-1', 'strict')
             return [('Authorization', auth_info)]
 
         def headers_forget(self):
diff --git a/tox.ini b/tox.ini
index a0e4462..a197356 100644
--- a/tox.ini
+++ b/tox.ini
@@ -1,54 +1,79 @@
 [tox]
 envlist =
     lint,
-    py27,py34,py35,py36,pypy,
-    docs,coverage
+    py36,py37,py38,py39,pypy3
+    py39-cover,coverage,
+    docs
 
 [testenv]
-basepython =
-    py27: python2.7
-    py34: python3.4
-    py35: python3.5
-    py36: python3.6
-    py37: python3.7
-    pypy: pypy
-    pypy3: pypy3
-
 commands =
-    pip install pyramid_authsanity[testing]
-    py.test --cov --cov-report= {posargs:}
-
+    python --version
+    pytest {posargs:}
+extras =
+    testing
 setenv =
     COVERAGE_FILE=.coverage.{envname}
 
+[testenv:py39-cover]
+commands =
+    python --version
+    pytest --cov {posargs:}
+
 [testenv:coverage]
 skip_install = True
-basepython = python3.6
 commands =
     coverage combine
+    coverage xml
     coverage report --fail-under=100
 deps =
     coverage
 setenv =
     COVERAGE_FILE=.coverage
+depends = py39-cover
 
 [testenv:docs]
-basepython = python3.6
 whitelist_externals =
     make
 commands =
     pip install pyramid_authsanity[docs]
-    make -C docs html BUILDDIR={envdir} SPHINXOPTS="-W -E"
+    make -C docs html BUILDDIR={envdir} "SPHINXOPTS=-W -E -D suppress_warnings=ref.term"
+extras =
+    docs
 
 [testenv:lint]
 skip_install = True
-basepython = python3.6
 commands =
-    flake8 src/pyramid_authsanity/
+    flake8 src/pyramid_authsanity/ tests setup.py
+    isort --check-only --df  src/pyramid tests setup.py
+    black --check --diff src/pyramid tests setup.py
     python setup.py check -r -s -m
     check-manifest
 deps =
+    black
+    check-manifest
     flake8
+    isort
     readme_renderer
-    check-manifest
 
+[testenv:format]
+skip_install = true
+commands =
+    isort src/pyramid tests setup.py
+    black src/pyramid tests setup.py
+deps =
+    black
+    isort
+
+[testenv:build]
+skip_install = true
+commands =
+    # clean up build/ and dist/ folders
+    python -c 'import shutil; shutil.rmtree("dist", ignore_errors=True)'
+    python setup.py clean --all
+    # build sdist
+    python setup.py sdist --dist-dir {toxinidir}/dist
+    # build wheel from sdist
+    pip wheel -v --no-deps --no-index --no-build-isolation --wheel-dir {toxinidir}/dist --find-links {toxinidir}/dist pyramid_authsanity
+deps =
+    setuptools
+    wheel
