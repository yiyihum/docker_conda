diff --git a/heudiconv/bids.py b/heudiconv/bids.py
index e07c347..fc630aa 100644
--- a/heudiconv/bids.py
+++ b/heudiconv/bids.py
@@ -47,6 +47,36 @@ class BIDSError(Exception):
 BIDS_VERSION = "1.4.1"
 
 
+def maybe_na(val):
+    """Return 'n/a' if non-None value represented as str is not empty
+
+    Primarily for the consistent use of lower case 'n/a' so 'N/A' and 'NA'
+    are also treated as 'n/a'
+    """
+    if val is not None:
+        val = str(val)
+        val = val.strip()
+    return 'n/a' if (not val or val in ('N/A', 'NA')) else val
+
+
+def treat_age(age):
+    """Age might encounter 'Y' suffix or be a float"""
+    age = str(age)
+    if age.endswith('M'):
+        age = age.rstrip('M')
+        age = float(age) / 12
+        age = ('%.2f' if age != int(age) else '%d') % age
+    else:
+        age = age.rstrip('Y')
+    if age:
+        # strip all leading 0s but allow to scan a newborn (age 0Y)
+        age = '0' if not age.lstrip('0') else age.lstrip('0')
+        if age.startswith('.'):
+            # we had float point value, let's prepend 0
+            age = '0' + age
+    return age
+
+
 def populate_bids_templates(path, defaults={}):
     """Premake BIDS text files with templates"""
 
@@ -278,12 +308,13 @@ def add_participant_record(studydir, subject, age, sex):
                             "control group)")])),
                 ]),
                 sort_keys=False)
+
     # Add a new participant
     with open(participants_tsv, 'a') as f:
         f.write(
           '\t'.join(map(str, [participant_id,
-                              age.lstrip('0').rstrip('Y') if age else 'N/A',
-                              sex if sex else 'n/a',
+                              maybe_na(treat_age(age)),
+                              maybe_na(sex),
                               'control'])) + '\n')
 
 

