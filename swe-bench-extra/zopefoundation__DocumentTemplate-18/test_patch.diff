diff --git a/src/DocumentTemplate/tests/test_DT_In.py b/src/DocumentTemplate/tests/test_DT_In.py
new file mode 100644
index 0000000..ba517d2
--- /dev/null
+++ b/src/DocumentTemplate/tests/test_DT_In.py
@@ -0,0 +1,34 @@
+import unittest
+
+
+class DummySection(object):
+    blocks = ['dummy']
+
+
+class TestIn(unittest.TestCase):
+    """Testing ..DT_in.InClass."""
+
+    def _getTargetClass(self):
+        from DocumentTemplate.DT_In import InClass
+        return InClass
+
+    def _makeOne(self, *args):
+        blocks = [('in', ' '.join(args), DummySection())]
+        return self._getTargetClass()(blocks)
+
+    def test_sort_sequence(self):
+        """It does not break on duplicate sort keys at a list of dicts."""
+        stmt = self._makeOne('seq', 'mapping', 'sort=key')
+        seq = [
+            {'key': 'c', 'data': '3'},
+            {'key': 'a', 'data': '1'},
+            {'key': 'b', 'data': '2'},
+            {'key': 'a', 'data': '2'},
+        ]
+        result = stmt.sort_sequence(seq, 'key')
+        self.assertEqual([
+            {'key': 'a', 'data': '1'},
+            {'key': 'a', 'data': '2'},
+            {'key': 'b', 'data': '2'},
+            {'key': 'c', 'data': '3'},
+        ], result)
diff --git a/src/DocumentTemplate/tests/test_DT_Var.py b/src/DocumentTemplate/tests/test_DT_Var.py
index 3270824..c81051f 100644
--- a/src/DocumentTemplate/tests/test_DT_Var.py
+++ b/src/DocumentTemplate/tests/test_DT_Var.py
@@ -73,11 +73,11 @@ class TestUrlQuoting(unittest.TestCase):
         utf8_value = unicode_value.encode('UTF-8')
         quoted_utf8_value = b'G%C3%BCnther%20M%C3%BCller'
 
-        self.assertEquals(url_quote(unicode_value), quoted_unicode_value)
-        self.assertEquals(url_quote(utf8_value), quoted_utf8_value)
+        self.assertEqual(url_quote(unicode_value), quoted_unicode_value)
+        self.assertEqual(url_quote(utf8_value), quoted_utf8_value)
 
-        self.assertEquals(url_unquote(quoted_unicode_value), unicode_value)
-        self.assertEquals(url_unquote(quoted_utf8_value), utf8_value)
+        self.assertEqual(url_unquote(quoted_unicode_value), unicode_value)
+        self.assertEqual(url_unquote(quoted_utf8_value), utf8_value)
 
     def test_url_quoting_plus(self):
         from DocumentTemplate.DT_Var import url_quote_plus
@@ -87,10 +87,10 @@ class TestUrlQuoting(unittest.TestCase):
         utf8_value = unicode_value.encode('UTF-8')
         quoted_utf8_value = b'G%C3%BCnther+M%C3%BCller'
 
-        self.assertEquals(url_quote_plus(unicode_value), quoted_unicode_value)
-        self.assertEquals(url_quote_plus(utf8_value), quoted_utf8_value)
+        self.assertEqual(url_quote_plus(unicode_value), quoted_unicode_value)
+        self.assertEqual(url_quote_plus(utf8_value), quoted_utf8_value)
 
-        self.assertEquals(
+        self.assertEqual(
             url_unquote_plus(quoted_unicode_value), unicode_value)
-        self.assertEquals(
+        self.assertEqual(
             url_unquote_plus(quoted_utf8_value), utf8_value)
