diff --git a/cfn_flip/__init__.py b/cfn_flip/__init__.py
index 34e9257..d5b112a 100644
--- a/cfn_flip/__init__.py
+++ b/cfn_flip/__init__.py
@@ -10,19 +10,11 @@ or in the "license" file accompanying this file. This file is distributed on an
 
 from .clean import clean
 from .custom_json import DateTimeAwareJsonEncoder
-from .custom_yaml import custom_yaml
+from .custom_yaml import CustomDumper, CustomLoader
 import collections
 import json
+import yaml
 
-class MyDumper(custom_yaml.Dumper):
-  """
-  Indent block sequences from parent using more common style
-  ("  - entry"  vs "- entry").  
-  Causes fewer problems with validation and tools.
-  """
-  
-  def increase_indent(self,flow=False, indentless=False):
-    return super(MyDumper,self).increase_indent(flow, False)
 
 def to_json(template, clean_up=False):
     """
@@ -30,7 +22,7 @@ def to_json(template, clean_up=False):
     undoing yaml short syntax where detected
     """
 
-    data = custom_yaml.load(template)
+    data = yaml.load(template, Loader=CustomLoader)
 
     if clean_up:
         data = clean(data)
@@ -48,7 +40,7 @@ def to_yaml(template, clean_up=False):
     if clean_up:
         data = clean(data)
 
-    return custom_yaml.dump(data, Dumper=MyDumper, default_flow_style=False)
+    return yaml.dump(data, Dumper=CustomDumper, default_flow_style=False)
 
 def flip(template, clean_up=False):
     """
diff --git a/cfn_flip/clean.py b/cfn_flip/clean.py
index 318e445..2b731b2 100644
--- a/cfn_flip/clean.py
+++ b/cfn_flip/clean.py
@@ -1,11 +1,11 @@
-"""                                                                                                      
-Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                  
-                                                                                                         
-Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with the License. A copy of the License is located at                                              
-                                                                                                         
-    http://aws.amazon.com/apache2.0/                                                                     
-                                                                                                         
-or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.                                                 
+"""
+Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+
+Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with the License. A copy of the License is located at
+
+    http://aws.amazon.com/apache2.0/
+
+or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 """
 
 import json
@@ -27,7 +27,7 @@ def convert_join(sep, parts):
                 parts[i] = "${{{}}}".format(part["Ref"])
             elif "Fn::GetAtt" in part:
                 params = part["Fn::GetAtt"]
-                parts[i] = "${{{}.{}}}".format(params[0], params[1])
+                parts[i] = "${{{}}}".format(".".join(params))
             else:
                 param_name = "Param{}".format(len(args) + 1)
                 args[param_name] = part
@@ -42,7 +42,7 @@ def convert_join(sep, parts):
         return {
             "Fn::Sub": [source, args],
         }
-    
+
     return {
         "Fn::Sub": source,
     }
diff --git a/cfn_flip/custom_yaml.py b/cfn_flip/custom_yaml.py
index a2ff89c..6ddb14c 100644
--- a/cfn_flip/custom_yaml.py
+++ b/cfn_flip/custom_yaml.py
@@ -1,23 +1,37 @@
-"""                                                                                                      
-Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                  
-                                                                                                         
-Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with the License. A copy of the License is located at                                              
-                                                                                                         
-    http://aws.amazon.com/apache2.0/                                                                     
-                                                                                                         
-or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.                                                 
+"""
+Copyright 2016-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+
+Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with the License. A copy of the License is located at
+
+    http://aws.amazon.com/apache2.0/
+
+or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 """
 
-import imp
 import six
 import collections
+import yaml
 
-custom_yaml = imp.load_module("custom_yaml", *imp.find_module("yaml"))
 
 TAG_MAP = "tag:yaml.org,2002:map"
 TAG_STRING = "tag:yaml.org,2002:str"
 UNCONVERTED_SUFFIXES = ["Ref", "Condition"]
 
+class CustomDumper(yaml.Dumper):
+  """
+  Indent block sequences from parent using more common style
+  ("  - entry"  vs "- entry").
+  Causes fewer problems with validation and tools.
+  """
+
+  def increase_indent(self,flow=False, indentless=False):
+    return super(CustomDumper,self).increase_indent(flow, False)
+
+
+class CustomLoader(yaml.Loader):
+    pass
+
+
 def multi_constructor(loader, tag_suffix, node):
     """
     Deal with !Ref style function format
@@ -30,11 +44,11 @@ def multi_constructor(loader, tag_suffix, node):
 
     if tag_suffix == "Fn::GetAtt":
         constructor = construct_getatt
-    elif isinstance(node, custom_yaml.ScalarNode):
+    elif isinstance(node, yaml.ScalarNode):
         constructor = loader.construct_scalar
-    elif isinstance(node, custom_yaml.SequenceNode):
+    elif isinstance(node, yaml.SequenceNode):
         constructor = loader.construct_sequence
-    elif isinstance(node, custom_yaml.MappingNode):
+    elif isinstance(node, yaml.MappingNode):
         constructor = loader.construct_mapping
     else:
         raise "Bad tag: !{}".format(tag_suffix)
@@ -116,7 +130,7 @@ def representer(dumper, data):
     data = data[key]
 
     if tag == "!GetAtt":
-        data = "{}.{}".format(data[0], data[1])
+        data = ".".join(data)
 
     if isinstance(data, dict):
         return dumper.represent_mapping(tag, data, flow_style=False)
@@ -126,8 +140,8 @@ def representer(dumper, data):
     return dumper.represent_scalar(tag, data)
 
 # Customise our yaml
-custom_yaml.add_representer(six.text_type, lambda dumper, value: dumper.represent_scalar(TAG_STRING, value))
-custom_yaml.add_constructor(TAG_MAP, construct_mapping)
-custom_yaml.add_multi_constructor("!", multi_constructor)
-custom_yaml.add_representer(collections.OrderedDict, representer)
-custom_yaml.add_representer(dict, representer)
+CustomDumper.add_representer(six.text_type, lambda dumper, value: dumper.represent_scalar(TAG_STRING, value))
+CustomLoader.add_constructor(TAG_MAP, construct_mapping)
+CustomLoader.add_multi_constructor("!", multi_constructor)
+CustomDumper.add_representer(collections.OrderedDict, representer)
+CustomDumper.add_representer(dict, representer)
diff --git a/setup.py b/setup.py
index 52de37c..e6acc7c 100644
--- a/setup.py
+++ b/setup.py
@@ -24,6 +24,7 @@ setup(
         "six",
     ],
     zip_safe=False,
+    test_suite="tests",
     entry_points={
         "console_scripts": ["cfn-flip=cfn_flip.main:main"],
     },

