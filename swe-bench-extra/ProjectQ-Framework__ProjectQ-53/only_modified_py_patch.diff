diff --git a/projectq/cengines/_replacer/__init__.py b/projectq/cengines/_replacer/__init__.py
index e55b34f..b35d31e 100755
--- a/projectq/cengines/_replacer/__init__.py
+++ b/projectq/cengines/_replacer/__init__.py
@@ -15,4 +15,3 @@ from ._decomposition_rule_set import DecompositionRuleSet
 from ._replacer import (AutoReplacer,
                         InstructionFilter,
                         NoGateDecompositionError)
-
diff --git a/projectq/ops/_basics.py b/projectq/ops/_basics.py
index bf0c225..8a37f4f 100755
--- a/projectq/ops/_basics.py
+++ b/projectq/ops/_basics.py
@@ -416,7 +416,8 @@ class BasicMathGate(BasicGate):
         gate, given the input to the gate (a tuple of quantum registers).
 
         Args:
-            qubits (tuple<Qureg>): Qubits to which the math gate is being applied.
+            qubits (tuple<Qureg>): Qubits to which the math gate is being
+                applied.
 
         Returns:
             math_fun (function): Python function describing the action of this
diff --git a/projectq/ops/_metagates.py b/projectq/ops/_metagates.py
index b3841c7..975483a 100755
--- a/projectq/ops/_metagates.py
+++ b/projectq/ops/_metagates.py
@@ -203,9 +203,9 @@ class ControlledGate(BasicGate):
             raise ControlQubitError("Wrong number of control qubits. "
                                     "First qureg(s) need to contain exactly "
                                     "the required number of control qubits.")
-        cmd = BasicGate.generate_command(self._gate, tuple(gate_quregs))
-        cmd.add_control_qubits(ctrl)
-        apply_command(cmd)
+        import projectq.meta
+        with projectq.meta.Control(gate_quregs[0][0].engine, ctrl):
+            self._gate | tuple(gate_quregs)
 
     def __eq__(self, other):
         """ Compare two ControlledGate objects (return True if equal). """

