diff --git a/tests/test_query_schema.py b/tests/test_query_schema.py
index db37f0c..fca70c0 100644
--- a/tests/test_query_schema.py
+++ b/tests/test_query_schema.py
@@ -1,6 +1,7 @@
 from datetime import datetime
 from enum import IntEnum
 
+import pytest
 from pydantic import Field
 
 from ninja import NinjaAPI, Query, Schema, files
@@ -20,6 +21,11 @@ class Filter(Schema):
     range: Range = Range.TWENTY
 
 
+class Data(Schema):
+    an_int: int = Field(alias="int", default=0)
+    a_float: float = Field(alias="float", default=1.5)
+
+
 api = NinjaAPI()
 
 
@@ -28,6 +34,17 @@ def query_params_schema(request, filters: Filter = Query(...)):
     return filters.dict()
 
 
+@api.get("/test-mixed")
+def query_params_mixed_schema(
+    request,
+    query1: int,
+    query2: int = 5,
+    filters: Filter = Query(...),
+    data: Data = Query(...),
+):
+    return dict(query1=query1, query2=query2, filters=filters.dict(), data=data.dict())
+
+
 def test_request():
     client = TestClient(api)
     response = client.get("/test?from=1&to=2&range=20&foo=1&range2=50")
@@ -42,6 +59,42 @@ def test_request():
     assert response.status_code == 422
 
 
+def test_request_mixed():
+    client = TestClient(api)
+    response = client.get(
+        "/test-mixed?from=1&to=2&range=20&foo=1&range2=50&query1=2&int=3&float=1.6"
+    )
+    print(response.json())
+    assert response.json() == {
+        "data": {"a_float": 1.6, "an_int": 3},
+        "filters": {
+            "from_datetime": "1970-01-01T00:00:01Z",
+            "range": 20,
+            "to_datetime": "1970-01-01T00:00:02Z",
+        },
+        "query1": 2,
+        "query2": 5,
+    }
+
+    response = client.get(
+        "/test-mixed?from=1&to=2&range=20&foo=1&range2=50&query1=2&query2=10"
+    )
+    print(response.json())
+    assert response.json() == {
+        "data": {"a_float": 1.5, "an_int": 0},
+        "filters": {
+            "from_datetime": "1970-01-01T00:00:01Z",
+            "range": 20,
+            "to_datetime": "1970-01-01T00:00:02Z",
+        },
+        "query1": 2,
+        "query2": 10,
+    }
+
+    response = client.get("/test-mixed?from=1&to=2")
+    assert response.status_code == 422
+
+
 def test_schema():
     schema = api.get_openapi_schema()
     params = schema["paths"]["/api/test"]["get"]["parameters"]
