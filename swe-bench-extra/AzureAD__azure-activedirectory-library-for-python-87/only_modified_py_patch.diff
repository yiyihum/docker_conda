diff --git a/adal/cache_driver.py b/adal/cache_driver.py
index fba053b..9683dca 100644
--- a/adal/cache_driver.py
+++ b/adal/cache_driver.py
@@ -164,11 +164,19 @@ class CacheDriver(object):
         now_plus_buffer = now + timedelta(minutes=Misc.CLOCK_BUFFER)
 
         if is_resource_specific and now_plus_buffer > expiry_date:
-            self._log.info('Cached token is expired.  Refreshing: %s', expiry_date)
-            return self._refresh_expired_entry(entry)
+            if TokenResponseFields.REFRESH_TOKEN in entry:
+                self._log.info('Cached token is expired.  Refreshing: %s', expiry_date)
+                return self._refresh_expired_entry(entry)
+            else:
+                self.remove(entry)
+                return None
         elif not is_resource_specific and entry.get(TokenResponseFields.IS_MRRT):
-            self._log.info('Acquiring new access token from MRRT token.')
-            return self._acquire_new_token_from_mrrt(entry)
+            if TokenResponseFields.REFRESH_TOKEN in entry:
+                self._log.info('Acquiring new access token from MRRT token.')
+                return self._acquire_new_token_from_mrrt(entry)
+            else:
+                self.remove(entry)
+                return None
         else:
             return entry
 
diff --git a/adal/oauth2_client.py b/adal/oauth2_client.py
index dd26c4a..979a292 100644
--- a/adal/oauth2_client.py
+++ b/adal/oauth2_client.py
@@ -191,10 +191,10 @@ class OAuth2Client(object):
             wire_response[OAuth2.ResponseParameters.CREATED_ON] = str(temp_date)
 
         if not wire_response.get(OAuth2.ResponseParameters.TOKEN_TYPE):
-            raise AdalError('wire_response is missing token_type')
+            raise AdalError('wire_response is missing token_type', wire_response)
 
         if not wire_response.get(OAuth2.ResponseParameters.ACCESS_TOKEN):
-            raise AdalError('wire_response is missing access_token')
+            raise AdalError('wire_response is missing access_token', wire_response)
 
         token_response = map_fields(wire_response, TOKEN_RESPONSE_MAP)
 

