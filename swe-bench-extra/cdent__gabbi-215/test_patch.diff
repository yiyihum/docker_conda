diff --git a/gabbi/tests/gabbits_intercept/cat.json b/gabbi/tests/gabbits_intercept/cat.json
new file mode 100644
index 0000000..d27c320
--- /dev/null
+++ b/gabbi/tests/gabbits_intercept/cat.json
@@ -0,0 +1,4 @@
+{
+    "type": "cat",
+    "sound": "meow"
+}
diff --git a/gabbi/tests/gabbits_intercept/data.yaml b/gabbi/tests/gabbits_intercept/data.yaml
index 7bd1a7f..fbe832d 100644
--- a/gabbi/tests/gabbits_intercept/data.yaml
+++ b/gabbi/tests/gabbits_intercept/data.yaml
@@ -49,3 +49,26 @@ tests:
       request_headers:
           content-type: text/plain
       data: <@utf8.txt
+
+    - name: json value from disk
+      POST: /
+      request_headers:
+          content-type: application/json
+      data: <@data.json
+      response_json_paths:
+          foo['bÃ¡r']: 1
+          $: <@data.json
+
+    - name: partial json from disk
+      POST: /
+      request_headers:
+          content-type: application/json
+      data:
+          pets:
+              - type: cat
+                sound: meow
+              - type: dog
+                sound: woof
+      response_json_paths:
+          $.pets: <@pets.json
+          $.pets[0]: <@cat.json
diff --git a/gabbi/tests/gabbits_intercept/json-left-side.yaml b/gabbi/tests/gabbits_intercept/json-left-side.yaml
new file mode 100644
index 0000000..6ce342c
--- /dev/null
+++ b/gabbi/tests/gabbits_intercept/json-left-side.yaml
@@ -0,0 +1,37 @@
+defaults:
+  request_headers:
+      content-type: application/json
+  verbose: True
+
+tests:
+- name: left side json one
+  desc: for reuse on the next test
+  POST: /
+  data:
+      alpha: alpha1
+      beta: beta1
+
+- name: expand left side
+  POST: /
+  data:
+      alpha1: alpha
+      beta1: beta
+  response_json_paths:
+      $["$RESPONSE['$.alpha']"]: alpha
+
+- name: expand environ left side
+  POST: /
+  data:
+      alpha1: alpha
+      beta1: beta
+      1: cow
+  response_json_paths:
+      $.['$ENVIRON['ONE']']: cow
+
+- name: set key and value
+  GET: /jsonator?key=$ENVIRON['ONE']&value=10
+
+- name: check key and value
+  GET: /jsonator?key=$ENVIRON['ONE']&value=10
+  response_json_paths:
+      $.["$ENVIRON['ONE']"]: $RESPONSE['$['1']']
diff --git a/gabbi/tests/gabbits_intercept/pets.json b/gabbi/tests/gabbits_intercept/pets.json
new file mode 100644
index 0000000..3c56db0
--- /dev/null
+++ b/gabbi/tests/gabbits_intercept/pets.json
@@ -0,0 +1,10 @@
+[
+    {
+        "type": "cat",
+        "sound": "meow"
+    },
+    {
+        "type": "dog",
+        "sound": "woof"
+    }
+]
diff --git a/gabbi/tests/simple_wsgi.py b/gabbi/tests/simple_wsgi.py
index fabb7e3..b7528ff 100644
--- a/gabbi/tests/simple_wsgi.py
+++ b/gabbi/tests/simple_wsgi.py
@@ -107,6 +107,11 @@ class SimpleWsgi(object):
             # fall through if we've ended the loop
         elif path_info == '/cookie':
             headers.append(('Set-Cookie', 'session=1234; domain=.example.com'))
+        elif path_info == '/jsonator':
+            json_data = json.dumps({query_data['key'][0]:
+                                    query_data['value'][0]})
+            start_response('200 OK', [('Content-Type', 'application/json')])
+            return [json_data.encode('utf-8')]
 
         start_response('200 OK', headers)
 
diff --git a/gabbi/tests/test_load_data_file.py b/gabbi/tests/test_load_data_file.py
index 99536d4..f3304a6 100644
--- a/gabbi/tests/test_load_data_file.py
+++ b/gabbi/tests/test_load_data_file.py
@@ -35,7 +35,7 @@ class DataFileTest(unittest.TestCase):
 
     def _assert_content_read(self, filepath):
         self.assertEqual(
-            'dummy content', self.http_case._load_data_file(filepath))
+            'dummy content', self.http_case.load_data_file(filepath))
 
     def test_load_file(self, m_open):
         self.http_case.test_directory = '.'
@@ -52,7 +52,7 @@ class DataFileTest(unittest.TestCase):
         filepath = '/top-level.private'
 
         with self.assertRaises(ValueError):
-            self.http_case._load_data_file(filepath)
+            self.http_case.load_data_file(filepath)
         self.assertFalse(m_open.called)
 
     def test_load_file_in_parent_dir(self, m_open):
@@ -60,7 +60,7 @@ class DataFileTest(unittest.TestCase):
         filepath = '../file-in-parent-dir.txt'
 
         with self.assertRaises(ValueError):
-            self.http_case._load_data_file(filepath)
+            self.http_case.load_data_file(filepath)
         self.assertFalse(m_open.called)
 
     def test_load_file_within_test_directory(self, m_open):
@@ -73,5 +73,5 @@ class DataFileTest(unittest.TestCase):
         self.http_case.test_directory = '/a/b/c'
         filepath = '../../b/E/file-in-test-dir.txt'
         with self.assertRaises(ValueError):
-            self.http_case._load_data_file(filepath)
+            self.http_case.load_data_file(filepath)
         self.assertFalse(m_open.called)
