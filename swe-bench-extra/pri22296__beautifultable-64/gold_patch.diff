diff --git a/.gitignore b/.gitignore
index 4527dcd..e70f354 100644
--- a/.gitignore
+++ b/.gitignore
@@ -5,3 +5,4 @@ dist/
 build/
 .tox/
 *.pyc
+.coverage
diff --git a/README.rst b/README.rst
index 16aadd1..c26bea2 100644
--- a/README.rst
+++ b/README.rst
@@ -133,6 +133,8 @@ Unreleased
 
 * Dropped support for Python 3.3
 * Added support for streaming tables using a generator for cases  where data retrieval is slow
+* Alignment, padding, width can now be set for all columns using a simplified syntax like
+  ``table.column_alignments = beautifultable.ALIGN_LEFT``
 
 ==========
 v0.7.0
diff --git a/beautifultable/beautifultable.py b/beautifultable/beautifultable.py
index ae4041f..3f54c51 100644
--- a/beautifultable/beautifultable.py
+++ b/beautifultable/beautifultable.py
@@ -332,6 +332,8 @@ class BeautifulTable(object):
 
     @column_widths.setter
     def column_widths(self, value):
+        if isinstance(value, int):
+            value = [value] * self._column_count
         width = self._validate_row(value)
         self._column_widths = PositiveIntegerMetaData(self, width)
 
@@ -366,6 +368,8 @@ class BeautifulTable(object):
 
     @column_alignments.setter
     def column_alignments(self, value):
+        if isinstance(value, enums.Alignment):
+            value = [value] * self._column_count
         alignment = self._validate_row(value)
         self._column_alignments = AlignmentMetaData(self, alignment)
 
@@ -380,6 +384,8 @@ class BeautifulTable(object):
 
     @left_padding_widths.setter
     def left_padding_widths(self, value):
+        if isinstance(value, int):
+            value = [value] * self._column_count
         pad_width = self._validate_row(value)
         self._left_padding_widths = PositiveIntegerMetaData(self, pad_width)
 
@@ -394,6 +400,8 @@ class BeautifulTable(object):
 
     @right_padding_widths.setter
     def right_padding_widths(self, value):
+        if isinstance(value, int):
+            value = [value] * self._column_count
         pad_width = self._validate_row(value)
         self._right_padding_widths = PositiveIntegerMetaData(self, pad_width)
 
