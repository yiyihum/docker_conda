diff --git a/minecraft_mod_manager/gateways/sqlite_test.py b/minecraft_mod_manager/gateways/sqlite_test.py
index f8f3325..28ec7af 100644
--- a/minecraft_mod_manager/gateways/sqlite_test.py
+++ b/minecraft_mod_manager/gateways/sqlite_test.py
@@ -3,11 +3,11 @@ import sqlite3
 from typing import Any, List, Tuple, Union
 
 import pytest
-from ..core.entities.sites import Sites
-from ..core.errors.mod_already_exists import ModAlreadyExists
 
 from ..config import config
 from ..core.entities.mod import Mod
+from ..core.entities.sites import Sites
+from ..core.errors.mod_already_exists import ModAlreadyExists
 from ..gateways.sqlite import Sqlite
 
 db_file = f".{config.app_name}.db"
@@ -148,6 +148,30 @@ def test_exists_when_exists(mod: Mod, sqlite: Sqlite, db: sqlite3.Connection):
     assert result
 
 
+def test_does_not_exist_when_set_as_inactive(mod: Mod, sqlite: Sqlite, db: sqlite3.Connection):
+    db.execute(
+        "INSERT INTO mod (id, site, site_id, site_slug, upload_time, active) VALUES (?, ?, ?, ?, ?, 0)",
+        [mod.id, mod.site.value, mod.site_id, mod.site_slug, mod.upload_time],
+    )
+    db.commit()
+
+    result = sqlite.exists(mod.id)
+
+    assert not result
+
+
+def test_exists_when_set_as_inactive_but_not_filtering(mod: Mod, sqlite: Sqlite, db: sqlite3.Connection):
+    db.execute(
+        "INSERT INTO mod (id, site, site_id, site_slug, upload_time, active) VALUES (?, ?, ?, ?, ?, 0)",
+        [mod.id, mod.site.value, mod.site_id, mod.site_slug, mod.upload_time],
+    )
+    db.commit()
+
+    result = sqlite.exists(mod.id, filter_active=False)
+
+    assert result
+
+
 def test_exists_when_doesnt_exists(sqlite: Sqlite):
     result = sqlite.exists("id")
 
