diff --git a/tst/test_log.py b/tst/test_log.py
index 54a1d74..5db69da 100644
--- a/tst/test_log.py
+++ b/tst/test_log.py
@@ -1,7 +1,7 @@
 from unittest import TestCase
 from unittest.mock import patch
 
-from pullnrun._log import log_to_console, _duration
+from pullnrun._log import Log, log_to_console, _duration
 
 class LogTest(TestCase):
     def test_duration_is_logged_correctly(self):
@@ -9,8 +9,8 @@ class LogTest(TestCase):
             ({'meta': {'start': 0, 'end': 1, }}, ''),
             ({'meta': {'start': 1, }}, ''),
             ({'meta': {'start': 0, }}, ''),
-            ({'meta': {'start': 3, 'end': 53, }}, '(50 ms)'),
-            ({'meta': {'start': 3, 'end': 5003, }}, '(5.000 s)'),
+            ({'meta': {'start': 3, 'end': 53, }}, '50 ms'),
+            ({'meta': {'start': 3, 'end': 5003, }}, '5.000 s'),
         ]
 
         for data, output in testdata:
@@ -52,6 +52,9 @@ class LogTest(TestCase):
                 'object_name': 'a',
                 'filename': 'a',
             }}, ['PUSH', 'a to S3 bucket b'], ['as a', '_S3']),
+            # Main function start and end
+            ({'type': 'main', 'status': 'STARTED'}, ['Started pullnrun execution with id'], ['\u25B6']),
+            ({'type': 'main', 'status': 'SUCCESS', 'data': {'success': 3, 'fail': 5}}, ['Finished pullnrun execution in', '3 out of 8 actions succeeded.'], ['\u2714', '\u2718']),
         ]
 
         for data, p_results, n_results in testdata:
@@ -63,7 +66,6 @@ class LogTest(TestCase):
             for result in n_results:
                 self.assertNotIn(result, output)
 
-
     @patch('builtins.print')
     def test_log_to_console_prints_run_output(self, print_mock):
         data = {'type': 'run', 'data': {'output': 'banana'}}
@@ -73,3 +75,18 @@ class LogTest(TestCase):
         output = print_mock.call_args[-2][0]
 
         self.assertIn(result, output)
+
+    @patch('builtins.print')
+    def test_log_class_prints_actions(self, print_mock):
+        log = Log()
+        testdata = [
+            (log, ({'type': 'run', 'status': 'STARTED'}, ), '\u25B6'),
+            (log.start, [], 'Started pullnrun execution'),
+            (log.end, (1,2,), 'Finished pullnrun execution'),
+        ]
+
+        for fn, args, result in testdata:
+            fn(*args)
+            output = print_mock.call_args[-2][0]
+
+            self.assertIn(result, output)
