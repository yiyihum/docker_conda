diff --git a/bugbear.py b/bugbear.py
index a6b883b..edd4faf 100644
--- a/bugbear.py
+++ b/bugbear.py
@@ -360,6 +360,7 @@ class BugBearVisitor(ast.NodeVisitor):
             self.check_for_b026(node)
 
         self.check_for_b905(node)
+        self.check_for_b028(node)
         self.generic_visit(node)
 
     def visit_Module(self, node):
@@ -1146,6 +1147,16 @@ class BugBearVisitor(ast.NodeVisitor):
             # if no pre-mark or variable detected, reset state
             current_mark = variable = None
 
+    def check_for_b028(self, node):
+        if (
+            isinstance(node.func, ast.Attribute)
+            and node.func.attr == "warn"
+            and isinstance(node.func.value, ast.Name)
+            and node.func.value.id == "warnings"
+            and not any(kw.arg == "stacklevel" for kw in node.keywords)
+        ):
+            self.errors.append(B028(node.lineno, node.col_offset))
+
 
 def compose_call_path(node):
     if isinstance(node, ast.Attribute):
@@ -1510,6 +1521,15 @@ B027 = Error(
         " decorator. Consider adding @abstractmethod."
     )
 )
+B028 = Error(
+    message=(
+        "B028 No explicit stacklevel keyword argument found. The warn method from the"
+        " warnings module uses a stacklevel of 1 by default. This will only show a"
+        " stack trace for the line on which the warn method is called."
+        " It is therefore recommended to use a stacklevel of 2 or"
+        " greater to provide more information to the user."
+    )
+)
 
 # Warnings disabled by default.
 B901 = Error(

