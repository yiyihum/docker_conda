diff --git a/gabbi/handlers/base.py b/gabbi/handlers/base.py
index 1bbafe0..980eebb 100644
--- a/gabbi/handlers/base.py
+++ b/gabbi/handlers/base.py
@@ -66,6 +66,15 @@ class ResponseHandler:
         """
         pass
 
+    def is_regex(self, value):
+        """Check if the value is formatted to looks like a regular expression.
+
+        Meaning it starts and ends with "/".
+        """
+        return (
+            value.startswith('/') and value.endswith('/') and len(value) > 1
+        )
+
     def _register(self):
         """Register this handler on the provided test class."""
         self.response_handler = None
diff --git a/gabbi/handlers/core.py b/gabbi/handlers/core.py
index 97a1d87..cc80b1d 100644
--- a/gabbi/handlers/core.py
+++ b/gabbi/handlers/core.py
@@ -22,8 +22,18 @@ class StringResponseHandler(base.ResponseHandler):
     test_key_value = []
 
     def action(self, test, expected, value=None):
-        expected = test.replace_template(expected)
-        test.assert_in_or_print_output(expected, test.output)
+        is_regex = self.is_regex(expected)
+        expected = test.replace_template(expected, escape_regex=is_regex)
+
+        if is_regex:
+            # Trim off /
+            expected = expected[1:-1]
+            test.assertRegex(
+                test.output, expected,
+                'Expect resonse body %s to match /%s/' %
+                (test.output, expected))
+        else:
+            test.assert_in_or_print_output(expected, test.output)
 
 
 class ForbiddenHeadersResponseHandler(base.ResponseHandler):
@@ -56,9 +66,7 @@ class HeadersResponseHandler(base.ResponseHandler):
         response = test.response
 
         header_value = str(value)
-        is_regex = (header_value.startswith('/') and
-                    header_value.endswith('/') and
-                    len(header_value) > 1)
+        is_regex = self.is_regex(header_value)
         header_value = test.replace_template(header_value,
                                              escape_regex=is_regex)
 
diff --git a/gabbi/handlers/jsonhandler.py b/gabbi/handlers/jsonhandler.py
index 34dc7ae..2ee49d5 100644
--- a/gabbi/handlers/jsonhandler.py
+++ b/gabbi/handlers/jsonhandler.py
@@ -118,10 +118,7 @@ class JSONHandler(base.ContentHandler):
                                          'match %s' % (rhs_path, value))
 
         # If expected is a string, check to see if it is a regex.
-        is_regex = (isinstance(value, str) and
-                    value.startswith('/') and
-                    value.endswith('/') and
-                    len(value) > 1)
+        is_regex = isinstance(value, str) and self.is_regex(value)
         expected = (rhs_match or
                     test.replace_template(value, escape_regex=is_regex))
         match = lhs_match

