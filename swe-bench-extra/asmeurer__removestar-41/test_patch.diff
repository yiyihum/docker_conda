diff --git a/tests/test_removestar.py b/tests/test_removestar.py
index 9c24839..a944ad3 100644
--- a/tests/test_removestar.py
+++ b/tests/test_removestar.py
@@ -7,6 +7,7 @@ from pathlib import Path
 
 import pytest
 from pyflakes.checker import Checker
+from removestar.output import get_colored_diff, green, red, yellow
 from removestar.removestar import (
     ExternalModuleError,
     fix_code,
@@ -1317,8 +1318,8 @@ def test_replace_imports():
             {"code": code_mod4, "repls": {".mod1": ["a"], ".mod2": ["b", "c"]}},
             code_mod4_fixed,
             [
-                "Replacing 'from .mod1 import *' with 'from .mod1 import a'",
-                "Replacing 'from .mod2 import *' with 'from .mod2 import b, c'",
+                green("Replacing 'from .mod1 import *' with 'from .mod1 import a'"),
+                green("Replacing 'from .mod2 import *' with 'from .mod2 import b, c'"),
             ],
         ),
         (
@@ -1329,8 +1330,12 @@ def test_replace_imports():
             },
             code_mod4_fixed,
             [
-                "directory/mod4.py: Replacing 'from .mod1 import *' with 'from .mod1 import a'",
-                "directory/mod4.py: Replacing 'from .mod2 import *' with 'from .mod2 import b, c'",
+                green(
+                    "directory/mod4.py: Replacing 'from .mod1 import *' with 'from .mod1 import a'"
+                ),
+                green(
+                    "directory/mod4.py: Replacing 'from .mod2 import *' with 'from .mod2 import b, c'"
+                ),
             ],
         ),
         (
@@ -1340,9 +1345,9 @@ def test_replace_imports():
             },
             code_mod_commented_star_fixed,
             [
-                "Replacing 'from .mod3 import *' with 'from .mod3 import name'",
-                "Retaining 'from .mod1 import *' due to noqa comment",
-                "Retaining 'from .mod2 import *' due to noqa comment",
+                green("Replacing 'from .mod3 import *' with 'from .mod3 import name'"),
+                green("Retaining 'from .mod1 import *' due to noqa comment"),
+                green("Retaining 'from .mod2 import *' due to noqa comment"),
             ],
         ),
         (
@@ -1353,9 +1358,15 @@ def test_replace_imports():
             },
             code_mod_commented_star_fixed,
             [
-                "directory/mod_commented_star.py: Replacing 'from .mod3 import *' with 'from .mod3 import name'",
-                "directory/mod_commented_star.py: Retaining 'from .mod1 import *' due to noqa comment",
-                "directory/mod_commented_star.py: Retaining 'from .mod2 import *' due to noqa comment",
+                green(
+                    "directory/mod_commented_star.py: Replacing 'from .mod3 import *' with 'from .mod3 import name'"
+                ),
+                green(
+                    "directory/mod_commented_star.py: Retaining 'from .mod1 import *' due to noqa comment"
+                ),
+                green(
+                    "directory/mod_commented_star.py: Retaining 'from .mod2 import *' due to noqa comment"
+                ),
             ],
         ),
     ],
@@ -1388,8 +1399,12 @@ def test_replace_imports_warnings(capsys):
     )
     out, err = capsys.readouterr()
     assert set(err.splitlines()) == {
-        "Warning: module/mod_unfixable.py: Could not find the star imports for '.mod1'",
-        "Warning: module/mod_unfixable.py: Could not find the star imports for '.mod2'",
+        yellow(
+            "Warning: module/mod_unfixable.py: Could not find the star imports for '.mod1'"
+        ),
+        yellow(
+            "Warning: module/mod_unfixable.py: Could not find the star imports for '.mod2'"
+        ),
     }
 
     assert (
@@ -1400,8 +1415,8 @@ def test_replace_imports_warnings(capsys):
     )
     out, err = capsys.readouterr()
     assert set(err.splitlines()) == {
-        "Warning: Could not find the star imports for '.mod1'",
-        "Warning: Could not find the star imports for '.mod2'",
+        yellow("Warning: Could not find the star imports for '.mod1'"),
+        yellow("Warning: Could not find the star imports for '.mod2'"),
     }
 
     assert (
@@ -1423,7 +1438,9 @@ def test_replace_imports_warnings(capsys):
     )
     out, err = capsys.readouterr()
     assert set(err.splitlines()) == {
-        "Warning: module/mod_commented_unused_star.py: The removed star import statement for '.mod1' had an inline comment which may not make sense without the import",
+        yellow(
+            "Warning: module/mod_commented_unused_star.py: The removed star import statement for '.mod1' had an inline comment which may not make sense without the import"
+        ),
     }
 
     assert (
@@ -1434,7 +1451,9 @@ def test_replace_imports_warnings(capsys):
     )
     out, err = capsys.readouterr()
     assert set(err.splitlines()) == {
-        "Warning: The removed star import statement for '.mod1' had an inline comment which may not make sense without the import",
+        yellow(
+            "Warning: The removed star import statement for '.mod1' had an inline comment which may not make sense without the import"
+        ),
     }
 
     assert (
@@ -1656,9 +1675,12 @@ Warning: {directory}/mod_unfixable.py: Could not find the star imports for '.mod
 Warning: {directory}/mod_commented_unused_star.py: The removed star import statement for '.mod1' had an inline comment which may not make sense without the import
 """.splitlines()
     )
+    colored_warnings = {yellow(warning) for warning in warnings}
 
-    error = f"Error with {directory}/mod_bad.py: SyntaxError: invalid syntax (mod_bad.py, line 1)"
-    assert set(p.stderr.splitlines()) == warnings.union({error})
+    error = red(
+        f"Error with {directory}/mod_bad.py: SyntaxError: invalid syntax (mod_bad.py, line 1)"
+    )
+    assert set(p.stderr.splitlines()) == colored_warnings.union({error})
 
     diffs = [
         f"""\
@@ -1780,7 +1802,7 @@ Warning: {directory}/mod_commented_unused_star.py: The removed star import state
     ]
     unchanged = ["__init__.py", "mod_bad.py", "mod_unfixable.py"]
     for d in diffs:
-        assert d in p.stdout, p.stdout
+        assert get_colored_diff(d) in p.stdout, p.stdout
     for mod_path in unchanged:
         assert f"--- original/{directory}/{mod_path}" not in p.stdout
     cmp = dircmp(directory, directory_orig)
@@ -1793,7 +1815,7 @@ Warning: {directory}/mod_commented_unused_star.py: The removed star import state
     )
     assert p.stderr == ""
     for d in diffs:
-        assert d in p.stdout
+        assert get_colored_diff(d) in p.stdout
     cmp = dircmp(directory, directory_orig)
     assert _dirs_equal(cmp)
 
@@ -1826,10 +1848,13 @@ Warning: {directory}/mod_commented_unused_star.py: The removed star import state
 {directory}/submod_recursive/submod2.py: Replacing 'from . import *' with 'from . import a'
 """.splitlines()
     )
+    colored_changes = {green(change) for change in changes}
 
-    assert set(p.stderr.splitlines()) == changes.union({error}).union(warnings)
+    assert set(p.stderr.splitlines()) == colored_changes.union({error}).union(
+        colored_warnings
+    )
     for d in diffs:
-        assert d in p.stdout, p.stdout
+        assert get_colored_diff(d) in p.stdout, p.stdout
     cmp = dircmp(directory, directory_orig)
     assert _dirs_equal(cmp)
 
@@ -1844,12 +1869,15 @@ Error with {directory}/mod6.py: Static determination of external module imports
 Error with {directory}/mod7.py: Static determination of external module imports is not supported.
 """.splitlines()
     )
-    assert set(p.stderr.splitlines()) == {error}.union(static_error).union(warnings)
+    colored_static_error = {red(err) for err in static_error}
+    assert set(p.stderr.splitlines()) == {error}.union(colored_static_error).union(
+        colored_warnings
+    )
     for d in diffs:
         if "mod6" in d:
-            assert d not in p.stdout
+            assert get_colored_diff(d) not in p.stdout
         else:
-            assert d in p.stdout, p.stdout
+            assert get_colored_diff(d) in p.stdout, p.stdout
     cmp = dircmp(directory, directory_orig)
     assert _dirs_equal(cmp)
 
@@ -1869,9 +1897,9 @@ Error with {directory}/mod7.py: Static determination of external module imports
     assert p.stderr == ""
     for d in diffs:
         if "mod6" in d:
-            assert d not in p.stdout
+            assert get_colored_diff(d) not in p.stdout
         else:
-            assert d in p.stdout, p.stdout
+            assert get_colored_diff(d) in p.stdout, p.stdout
     cmp = dircmp(directory, directory_orig)
     assert _dirs_equal(cmp)
 
@@ -1934,6 +1962,7 @@ Error with {directory}/mod7.py: Static determination of external module imports
         encoding="utf-8",
     )
     assert (
-        p.stderr == f"Error: {directory}/notarealfile.py: no such file or directory\n"
+        p.stderr
+        == red(f"Error: {directory}/notarealfile.py: no such file or directory") + "\n"
     )
     assert p.stdout == ""
