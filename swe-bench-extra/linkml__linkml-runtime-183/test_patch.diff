diff --git a/tests/test_utils/input/kitchen_sink_noimports.yaml b/tests/test_utils/input/kitchen_sink_noimports.yaml
index 384bfcc..4464533 100644
--- a/tests/test_utils/input/kitchen_sink_noimports.yaml
+++ b/tests/test_utils/input/kitchen_sink_noimports.yaml
@@ -215,6 +215,8 @@ classes:
     class_uri: prov:Agent
     rank: 1
 
+  EmptyClass:
+
 slots:
   employed at:
     range: Company
@@ -344,3 +346,7 @@ enums:
       PARENT_OF:
       CHILD_OF:
   DiagnosisType:
+  OtherEnum:
+    permissible_values:
+      a:
+      b:
diff --git a/tests/test_utils/test_schema_as_dict.py b/tests/test_utils/test_schema_as_dict.py
index f3b8218..0965df5 100644
--- a/tests/test_utils/test_schema_as_dict.py
+++ b/tests/test_utils/test_schema_as_dict.py
@@ -24,6 +24,8 @@ class SchemaAsDictTestCase(unittest.TestCase):
         tests schema_as_dict, see https://github.com/linkml/linkml/issues/100
         """
         view = SchemaView(SCHEMA_NO_IMPORTS)
+        all_slots = view.all_slots()
+        self.assertIn('name', all_slots)
         logging.debug(view.schema.id)
         ystr = schema_as_yaml_dump(view.schema)
         with open(CLEAN_SCHEMA, 'w') as stream:
@@ -41,6 +43,7 @@ class SchemaAsDictTestCase(unittest.TestCase):
                 for e in elt_dict.values():
                     for pv in e.get('permissible_values', {}).values():
                         assert 'text' not in pv
+        self.assertIn('name', obj['slots'])
 
 if __name__ == '__main__':
     unittest.main()
diff --git a/tests/test_utils/test_schemaview.py b/tests/test_utils/test_schemaview.py
index a08c780..62eae1f 100644
--- a/tests/test_utils/test_schemaview.py
+++ b/tests/test_utils/test_schemaview.py
@@ -218,8 +218,9 @@ class SchemaViewTestCase(unittest.TestCase):
         ordered_c = []
         for c in classes.values():
             ordered_c.append(c.name)
-        assert "HasAliases" == ordered_c[0]
-        assert "agent" == ordered_c[-1]
+        self.assertEqual("HasAliases", ordered_c[0])
+        self.assertEqual("EmptyClass", ordered_c[-1])
+        self.assertEqual("agent", ordered_c[-2])
 
     def test_all_slots_ordered_lexical(self):
         view = SchemaView(SCHEMA_NO_IMPORTS)
