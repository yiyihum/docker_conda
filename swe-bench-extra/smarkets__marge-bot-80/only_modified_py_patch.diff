diff --git a/marge/git.py b/marge/git.py
index fa7c68a..2400001 100644
--- a/marge/git.py
+++ b/marge/git.py
@@ -84,7 +84,7 @@ class Repo(namedtuple('Repo', 'remote_url local_path ssh_key_file timeout')):
     def _fuse_branch(self, strategy, branch, target_branch, source_repo_url=None):
         assert source_repo_url or branch != target_branch, branch
 
-        self.git('fetch', 'origin')
+        self.git('fetch', '--prune', 'origin')
         if source_repo_url:
             # "upsert" remote 'source' and fetch it
             try:
@@ -92,7 +92,7 @@ class Repo(namedtuple('Repo', 'remote_url local_path ssh_key_file timeout')):
             except GitError:
                 pass
             self.git('remote', 'add', 'source', source_repo_url)
-            self.git('fetch', 'source')
+            self.git('fetch', '--prune', 'source')
             self.git('checkout', '-B', branch, 'source/' + branch, '--')
         else:
             self.git('checkout', '-B', branch, 'origin/' + branch, '--')
diff --git a/marge/job.py b/marge/job.py
index 82d80f2..b1022b5 100644
--- a/marge/job.py
+++ b/marge/job.py
@@ -37,7 +37,7 @@ class MergeJob(object):
             return
 
         state = merge_request.state
-        if state not in ('opened', 'reopened'):
+        if state not in ('opened', 'reopened', 'locked'):
             if state in ('merged', 'closed'):
                 log.info('The merge request is already %s!', state)
             else:
@@ -236,7 +236,7 @@ class MergeJob(object):
                 return  # success!
             if merge_request.state == 'closed':
                 raise CannotMerge('someone closed the merge request while merging!')
-            assert merge_request.state in ('opened', 'reopened'), merge_request.state
+            assert merge_request.state in ('opened', 'reopened', 'locked'), merge_request.state
 
             log.info('Giving %s more secs for !%s to be merged...', waiting_time_in_secs, merge_request.iid)
             time.sleep(waiting_time_in_secs)

