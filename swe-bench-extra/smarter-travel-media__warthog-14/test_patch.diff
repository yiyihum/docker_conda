diff --git a/test/test_ssl.py b/test/test_ssl.py
new file mode 100644
index 0000000..9165683
--- /dev/null
+++ b/test/test_ssl.py
@@ -0,0 +1,43 @@
+# -*- coding: utf-8 -*-
+
+import ssl
+
+import warthog.ssl
+
+
+# Test our hacky constants to make sure we haven't shot ourselves in the
+# foot in a completely obvious and predictable way.
+
+
+def test_ssl3_matches():
+    assert ssl.PROTOCOL_SSLv3 == warthog.ssl.PROTOCOL_SSLv3
+
+
+def test_ssl23_matches():
+    assert ssl.PROTOCOL_SSLv23 == warthog.ssl.PROTOCOL_SSLv23
+
+
+def test_tls1_matches():
+    assert ssl.PROTOCOL_TLSv1 == warthog.ssl.PROTOCOL_TLSv1
+
+
+def test_tls1_1_matches():
+    try:
+        # It's possible that we're running under an old version of Python
+        # and this constant doesn't exist (hence why warthog.ssl exists).
+        module_const = ssl.PROTOCOL_TLSv1_1
+    except AttributeError:
+        return
+
+    assert module_const == warthog.ssl.PROTOCOL_TLSv1_1
+
+
+def test_tls1_2_matches():
+    try:
+        # It's possible that we're running under an old version of Python
+        # and this constant doesn't exist (hence why warthog.ssl exists).
+        module_const = ssl.PROTOCOL_TLSv1_2
+    except AttributeError:
+        return
+
+    assert module_const == warthog.ssl.PROTOCOL_TLSv1_2
diff --git a/test/test_transport.py b/test/test_transport.py
index fd5d81a..3d399e6 100644
--- a/test/test_transport.py
+++ b/test/test_transport.py
@@ -1,7 +1,6 @@
 # -*- coding: utf-8 -*-
 
-import ssl
-
+import warthog.ssl
 import warthog.transport
 
 
@@ -16,11 +15,11 @@ def test_get_transport_factory_no_verify():
 
 
 def test_get_transport_factory_alternate_ssl_version():
-    factory = warthog.transport.get_transport_factory(ssl_version=ssl.PROTOCOL_SSLv3)
+    factory = warthog.transport.get_transport_factory(ssl_version=warthog.ssl.PROTOCOL_TLSv1_1)
     session = factory()
     adapter = session.get_adapter('https://lb.example.com')
 
-    assert ssl.PROTOCOL_SSLv3 == adapter.ssl_version, 'Did not get expected SSL version'
+    assert warthog.ssl.PROTOCOL_TLSv1_1 == adapter.ssl_version, 'Did not get expected SSL version'
 
 
 def test_get_transport_factory_with_defaults():
@@ -31,18 +30,3 @@ def test_get_transport_factory_with_defaults():
     assert warthog.transport.DEFAULT_SSL_VERSION == adapter.ssl_version, 'Did not get default TLS version'
     assert warthog.transport.DEFAULT_CERT_VERIFY == session.verify, 'Did not get default verify setting'
 
-
-def test_default_tls_version_matches_ssl_module():
-    try:
-        import ssl
-        module_version = ssl.PROTOCOL_TLSv1_2
-    except AttributeError:
-        # Running an old version of Python that doesn't have the version
-        # constant. This is the reason we need to use our own and we can't
-        # verify that it's right here so just end.
-        return
-
-    # Make sure that our default version matches the actual constant in the
-    # ssl module. This is really just a sanity check to make sure this hack
-    # doesn't blow up in our face
-    assert module_version == warthog.transport.DEFAULT_SSL_VERSION
