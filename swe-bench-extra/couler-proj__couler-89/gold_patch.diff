diff --git a/couler/core/run_templates.py b/couler/core/run_templates.py
index b94d5b6..35a08b4 100644
--- a/couler/core/run_templates.py
+++ b/couler/core/run_templates.py
@@ -99,6 +99,7 @@ def run_container(
     daemon=False,
     volume_mounts=None,
     working_dir=None,
+    node_selector=None,
 ):
     """
     Generate an Argo container template.  For example, the template whalesay
@@ -176,6 +177,7 @@ def run_container(
             daemon=daemon,
             volume_mounts=volume_mounts,
             working_dir=working_dir,
+            node_selector=node_selector,
         )
         states.workflow.add_template(template)
 
diff --git a/couler/core/templates/container.py b/couler/core/templates/container.py
index e3569f0..c73a489 100644
--- a/couler/core/templates/container.py
+++ b/couler/core/templates/container.py
@@ -42,6 +42,7 @@ class Container(Template):
         daemon=False,
         volume_mounts=None,
         working_dir=None,
+        node_selector=None,
     ):
         Template.__init__(
             self,
@@ -63,6 +64,7 @@ class Container(Template):
         self.image_pull_policy = image_pull_policy
         self.volume_mounts = volume_mounts
         self.working_dir = working_dir
+        self.node_selector = node_selector
 
     def to_dict(self):
         template = Template.to_dict(self)
@@ -108,6 +110,11 @@ class Container(Template):
 
                 template["inputs"]["artifacts"] = _input_list
 
+        # Node selector
+        if self.node_selector is not None:
+            # TODO: Support inferring node selector values from Argo parameters
+            template["nodeSelector"] = self.node_selector
+
         # Container
         if not utils.gpu_requested(self.resources):
             if self.env is None:
