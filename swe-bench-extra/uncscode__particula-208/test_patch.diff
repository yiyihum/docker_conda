diff --git a/particula/tests/particle_test.py b/particula/tests/particle_test.py
index 81fb0ce..194b441 100644
--- a/particula/tests/particle_test.py
+++ b/particula/tests/particle_test.py
@@ -49,6 +49,52 @@ standard_environment_ip = environment.Environment(
     pressure=101325 * u.Pa,
 )
 
+single_mode = {
+    "mode": 500e-9,  # 500 nm median
+    "nbins": 1000,  # 1000 bins
+    "nparticles": 1e6,  # 1e4 #
+    "volume": 1e-6,  # per 1e-6 m^3 (or 1 cc)
+    "gsigma": 1.5,  # relatively narrow
+    "spacing": "linspace",  # bin spacing,
+}
+
+multi_mode = {
+    "mode": [500e-9, 500e-9],  # 500 nm median
+    "nbins": 1000,  # 1000 bins
+    "nparticles": [1e6, 1e6],  # 1e4 #
+    "volume": 1e-6,  # per 1e-6 m^3 (or 1 cc)
+    "gsigma": [1.2, 1.2],  # relatively narrow
+    "spacing": "linspace",  # bin spacing,
+}
+
+
+def test_particle_distribution():
+    """"Test that the particle distribution is calculated for single mode and
+    multi mode.
+    """
+    def pdf_total(radius, pdf_distribution):
+        return np.trapz(y=pdf_distribution, x=radius)
+
+    # single mode
+    particle_distribution_1 = particle.ParticleDistribution(
+        **single_mode
+    )
+    total_number = pdf_total(
+        particle_distribution_1.pre_radius().m,
+        particle_distribution_1.pre_distribution().m,
+    )
+    assert total_number == pytest.approx(1e12, rel=1e10)
+
+    # multi mode
+    particle_distribution_2 = particle.ParticleDistribution(
+        **multi_mode
+    )
+    total_number2 = pdf_total(
+        particle_distribution_2.pre_radius().m,
+        particle_distribution_2.pre_distribution().m
+    )
+    assert total_number2 == pytest.approx(2e12, rel=1e10)
+
 
 def test_getters():
     """Test that the getters work.
diff --git a/particula/util/tests/distribution_discretization_test.py b/particula/util/tests/distribution_discretization_test.py
index 7c88d68..c99c5be 100644
--- a/particula/util/tests/distribution_discretization_test.py
+++ b/particula/util/tests/distribution_discretization_test.py
@@ -26,3 +26,25 @@ def test_discretize():
         discretize(
             interval=spans, disttype="linear", gsigma=sigma, mode=modes,
         )
+
+
+def test_multi_discretize():
+    """ testing different modes
+    """
+
+    spans = np.linspace(1, 1000, 1000)
+    sigma = 1.25
+    modes = [100, 200]
+
+    assert discretize(
+        interval=spans, disttype="lognormal", gsigma=sigma, mode=modes
+    ).size == spans.size
+
+    assert np.trapz(discretize(
+        interval=spans, disttype="lognormal", gsigma=sigma, mode=modes
+    ), spans) == pytest.approx(1, rel=1e-5)
+
+    with pytest.raises(ValueError):
+        discretize(
+            interval=spans, disttype="linear", gsigma=sigma, mode=modes,
+        )
diff --git a/particula/util/tests/radius_cutoff_test.py b/particula/util/tests/radius_cutoff_test.py
index ae51714..72773d8 100644
--- a/particula/util/tests/radius_cutoff_test.py
+++ b/particula/util/tests/radius_cutoff_test.py
@@ -41,3 +41,56 @@ def test_cuts():
         <=
         cut_rad(cutoff=.9999, gsigma=1.35, mode=1e-7)[1]
     )
+
+
+def test_multi_cuts():
+    """ test case for different modes
+    """
+
+    assert (
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-7, 1e-8])[0]
+        <=
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-7, 1e-8])[1]
+    )
+
+    assert (
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-7, 1e-8])[0]
+        <=
+        cut_rad(cutoff=.9990, gsigma=1.25, mode=[1e-7, 1e-8])[0]
+    )
+
+    assert (
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-7, 1e-8])[1]
+        >=
+        cut_rad(cutoff=.9990, gsigma=1.25, mode=[1e-7, 1e-8])[1]
+    )
+
+    assert (
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-7, 1e-8])[1]
+        <=
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-7, 1e-8])[1]
+    )
+
+    assert (
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-7, 1e-8])[1]
+        ==
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-7])[1]
+    )
+
+    assert (
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-7, 1e-8])[1]
+        >=
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-8])[1]
+    )
+
+    assert (
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-7, 1e-8])[0]
+        ==
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-8])[0]
+    )
+
+    assert (
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-7, 1e-8])[0]
+        <=
+        cut_rad(cutoff=.9999, gsigma=1.25, mode=[1e-7])[0]
+    )
