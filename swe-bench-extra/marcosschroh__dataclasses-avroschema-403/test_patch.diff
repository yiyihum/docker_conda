diff --git a/tests/model_generator/conftest.py b/tests/model_generator/conftest.py
index 58873a6..35b7af6 100644
--- a/tests/model_generator/conftest.py
+++ b/tests/model_generator/conftest.py
@@ -13,10 +13,10 @@ def schema() -> Dict:
         "fields": [
             {"name": "age", "type": "int"},
             {"name": "money_available", "type": "double"},
+            {"name": "weight", "type": "int", "unit": "kg"},
             {"name": "name", "type": "string", "default": "marcos"},
             {"name": "pet_age", "type": "int", "default": 1},
             {"name": "height", "type": "float", "default": 10.10},
-            {"name": "weight", "type": "int", "unit": "kg"},
             {"name": "expirience", "type": "int", "unit": "years", "default": 10},
             {
                 "name": "is_student",
@@ -502,3 +502,15 @@ def schema_with_pydantic_constrained_fields() -> JsonDict:
             {"pydantic-class": "conint(gt=10, lt=20)", "name": "constrained_int", "type": "int"},
         ],
     }
+
+
+@pytest.fixture
+def with_fields_with_metadata() -> JsonDict:
+    return {
+        "type": "record",
+        "name": "Message",
+        "fields": [
+            {"name": "fieldwithdefault", "type": "string", "default": "some default value"},
+            {"name": "someotherfield", "type": "long", "aliases": ["oldname"], "doc": "test"},
+        ],
+    }
diff --git a/tests/model_generator/test_model_generator.py b/tests/model_generator/test_model_generator.py
index a0a9279..5d01171 100644
--- a/tests/model_generator/test_model_generator.py
+++ b/tests/model_generator/test_model_generator.py
@@ -17,10 +17,10 @@ class User(AvroModel):
     \"""
     age: types.Int32
     money_available: float
+    weight: types.Int32 = dataclasses.field(metadata={'unit': 'kg'})
     name: str = "marcos"
     pet_age: types.Int32 = 1
     height: types.Float32 = 10.1
-    weight: types.Int32 = dataclasses.field(metadata={'unit': 'kg'})
     expirience: types.Int32 = dataclasses.field(metadata={'unit': 'years'}, default=10)
     is_student: bool = True
     encoded: bytes = b"Hi"
@@ -446,10 +446,10 @@ class User(AvroModel):
     \"""
     age: types.Int32
     money_available: float
+    weight: types.Int32 = dataclasses.field(metadata={'unit': 'kg'})
     name: str = "marcos"
     pet_age: types.Int32 = 1
     height: types.Float32 = 10.1
-    weight: types.Int32 = dataclasses.field(metadata={'unit': 'kg'})
     expirience: types.Int32 = dataclasses.field(metadata={'unit': 'years'}, default=10)
     is_student: bool = True
     encoded: bytes = b"Hi"
@@ -471,3 +471,23 @@ class Address(AvroModel):
     model_generator = ModelGenerator()
     result = model_generator.render_module(schemas=[schema, schema_2])
     assert result.strip() == expected_result.strip()
+
+
+def test_model_generator_with_fields_with_metadata(with_fields_with_metadata: types.JsonDict) -> None:
+    expected_result = """
+from dataclasses_avroschema import AvroModel
+import dataclasses
+
+
+@dataclasses.dataclass
+class Message(AvroModel):
+    someotherfield: int = dataclasses.field(metadata={'aliases': ['oldname'], 'doc': 'test'})
+    fieldwithdefault: str = "some default value"
+
+    class Meta:
+        field_order = ['fieldwithdefault', 'someotherfield']
+
+"""
+    model_generator = ModelGenerator()
+    result = model_generator.render(schema=with_fields_with_metadata)
+    assert result.strip() == expected_result.strip()
