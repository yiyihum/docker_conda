diff --git a/datalad_next/credman/manager.py b/datalad_next/credman/manager.py
index c5a6bf7..60124e2 100644
--- a/datalad_next/credman/manager.py
+++ b/datalad_next/credman/manager.py
@@ -26,6 +26,7 @@ from typing import (
 )
 
 import datalad
+from datalad_next.config import ConfigManager
 from datalad_next.exceptions import (
     CapturedException,
     CommandError,
@@ -78,7 +79,7 @@ class CredentialManager(object):
         'user_password': 'password',
     }
 
-    def __init__(self, cfg=None):
+    def __init__(self, cfg: ConfigManager | None = None):
         """
 
         Parameters
diff --git a/datalad_next/url_operations/__init__.py b/datalad_next/url_operations/__init__.py
index d6f1edf..d4c218e 100644
--- a/datalad_next/url_operations/__init__.py
+++ b/datalad_next/url_operations/__init__.py
@@ -11,6 +11,7 @@ from typing import (
 )
 
 import datalad
+from datalad_next.config import ConfigManager
 from datalad_next.utils import log_progress
 from datalad_next.utils.multihash import (
     MultiHash,
@@ -35,7 +36,7 @@ class UrlOperations:
     This class provides a range of helper methods to aid computation of
     hashes and progress reporting.
     """
-    def __init__(self, *, cfg=None):
+    def __init__(self, *, cfg: ConfigManager | None = None):
         """
         Parameters
         ----------
@@ -46,7 +47,7 @@ class UrlOperations:
         self._cfg = cfg
 
     @property
-    def cfg(self):
+    def cfg(self) -> ConfigManager:
 
         if self._cfg is None:
             self._cfg = datalad.cfg
diff --git a/datalad_next/url_operations/any.py b/datalad_next/url_operations/any.py
index 258141d..9b2cd75 100644
--- a/datalad_next/url_operations/any.py
+++ b/datalad_next/url_operations/any.py
@@ -10,6 +10,7 @@ from pathlib import Path
 import re
 from typing import Dict
 
+from datalad_next.config import ConfigManager
 from datalad_next.exceptions import CapturedException
 
 from . import UrlOperations
@@ -59,7 +60,7 @@ class AnyUrlOperations(UrlOperations):
     operations, such that held connections or cached credentials can be reused
     efficiently.
     """
-    def __init__(self, cfg=None):
+    def __init__(self, cfg: ConfigManager | None = None):
         """
         Parameters
         ----------
