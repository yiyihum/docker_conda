diff --git a/tests/ext/unit/test_aiohttp.py b/tests/ext/unit/test_aiohttp.py
index e75ba5c..22ef2f9 100644
--- a/tests/ext/unit/test_aiohttp.py
+++ b/tests/ext/unit/test_aiohttp.py
@@ -711,3 +711,23 @@ class TestAiohttpExt(object):
             "message": "Validation error of input data",
             "code": None,
         } == json_
+
+    async def test_request_header__ok__lowercase_key(self, aiohttp_client):
+        hapic = Hapic(async_=True, processor_class=MarshmallowProcessor)
+
+        class HeadersSchema(marshmallow.Schema):
+            foo = marshmallow.fields.String(required=True)
+
+        @hapic.with_api_doc()
+        @hapic.input_headers(HeadersSchema())
+        async def hello(request, hapic_data: HapicData):
+            return web.json_response(hapic_data.headers)
+
+        app = web.Application(debug=True)
+        hapic.set_context(AiohttpContext(app))
+        app.router.add_get("/", hello)
+        client = await aiohttp_client(app)
+        response = await client.get("/", headers={"FOO": "bar"})
+        assert 200 == response.status
+        json_ = await response.json()
+        assert {"foo": "bar"} == json_
diff --git a/tests/unit/test_utils.py b/tests/unit/test_utils.py
new file mode 100644
index 0000000..64b203e
--- /dev/null
+++ b/tests/unit/test_utils.py
@@ -0,0 +1,23 @@
+# coding: utf-8
+from hapic.util import LowercaseDictKeys
+
+
+class TestUtils(object):
+    def test_unit__get__ok__nominal_case(self):
+        lowercase_dict = LowercaseDictKeys([("foo", "bar")])
+        assert "bar" == lowercase_dict.get("foo")
+        assert "bar" == lowercase_dict.get("FOO")
+
+    def test_unit__by_key__ok__nominal_case(self):
+        lowercase_dict = LowercaseDictKeys([("foo", "bar")])
+        assert "bar" == lowercase_dict["foo"]
+        assert "bar" == lowercase_dict["FOO"]
+
+    def test_unit__in__ok__nominal_case(self):
+        lowercase_dict = LowercaseDictKeys([("foo", "bar")])
+        assert "foo" in lowercase_dict
+        assert "FOO" in lowercase_dict
+
+    def test_unit__del__ok__nominal_case(self):
+        lowercase_dict = LowercaseDictKeys([("foo", "bar")])
+        del lowercase_dict["FOO"]
