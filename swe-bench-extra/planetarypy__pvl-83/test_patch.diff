diff --git a/tests/test_decoder.py b/tests/test_decoder.py
index 8caa1cf..2d6f492 100644
--- a/tests/test_decoder.py
+++ b/tests/test_decoder.py
@@ -18,6 +18,7 @@
 import datetime
 import itertools
 import unittest
+from decimal import Decimal
 
 from pvl.decoder import PVLDecoder, ODLDecoder, PDSLabelDecoder, for_try_except
 from pvl.collections import Quantity
@@ -100,6 +101,13 @@ class TestDecoder(unittest.TestCase):
             with self.subTest(string=s):
                 self.assertRaises(ValueError, self.d.decode_decimal, s)
 
+    def test_decode_withDecimal(self):
+        d = PVLDecoder(real_cls=Decimal)
+        s = "123.450"
+        self.assertEqual(d.decode_decimal(s), Decimal(s))
+
+        self.assertRaises(ValueError, d.decode_decimal, "fruit")
+
     def test_decode_non_decimal(self):
         for p in (
             ("2#0101#", 5),
diff --git a/tests/test_encoder.py b/tests/test_encoder.py
index d7a3ff0..864d3e2 100644
--- a/tests/test_encoder.py
+++ b/tests/test_encoder.py
@@ -2,6 +2,7 @@
 
 import datetime
 import unittest
+from decimal import Decimal
 
 from pvl.encoder import PVLEncoder, ODLEncoder, PDSLabelEncoder
 from pvl.collections import Quantity, PVLModule, PVLGroup, PVLObject
@@ -84,6 +85,7 @@ class TestEncoder(unittest.TestCase):
             (True, "TRUE"),
             (1.23, "1.23"),
             (42, "42"),
+            (Decimal("12.30"), "12.30"),
             ("ABC", "ABC"),
         )
         for p in pairs:
