diff --git a/tests/test_simple.py b/tests/test_simple.py
index d9e53f4..2f403aa 100644
--- a/tests/test_simple.py
+++ b/tests/test_simple.py
@@ -105,6 +105,63 @@ class TestRepoIndexParsing:
         assert index["django-node"] == "django-node/"
 
 
+class TestArchiveLink:
+
+    """Tests for mousebender.simple.ArchiveLink."""
+
+    @pytest.mark.parametrize(
+        "archive_link",
+        [
+            simple.ArchiveLink(filename="B", url="A/B"),
+            simple.ArchiveLink(
+                filename="B",
+                url="A/B",
+                requires_python=packaging.specifiers.SpecifierSet(">=3.6"),
+            ),
+            simple.ArchiveLink(
+                filename="B",
+                url="A/B",
+                hash_=("sha256", "ABCDEF"),
+            ),
+            simple.ArchiveLink(
+                filename="B",
+                url="A/B",
+                gpg_sig=True,
+            ),
+            simple.ArchiveLink(filename="B", url="A/B", yanked=""),
+            simple.ArchiveLink(filename="B", url="A/B", yanked="oops!"),
+            simple.ArchiveLink(filename="B", url="A/B", metadata=("", "")),
+            simple.ArchiveLink(filename="B", url="A/B", metadata=("sha256", "ABCDEF")),
+            simple.ArchiveLink(
+                filename="B",
+                url="A/B",
+                requires_python=packaging.specifiers.SpecifierSet(">=3.6"),
+                hash_=("sha256", "ABCDEF"),
+                gpg_sig=True,
+                yanked="oops!",
+                metadata=("sha512", "GHIJKL"),
+            ),
+        ],
+    )
+    def test_str(self, archive_link):
+        """Make sure __str__ roundtrips."""
+        html = str(archive_link)
+        roundtrip = simple.parse_archive_links(html)
+        assert len(roundtrip) == 1
+        print(html)
+        print(roundtrip[0])
+        assert archive_link == roundtrip[0]
+
+    def test_str_escaping(self):
+        """data-requires-python must have an escaped value."""
+        archive_link = simple.ArchiveLink(
+            filename="B",
+            url="A/B",
+            requires_python=packaging.specifiers.SpecifierSet(">=3.6"),
+        )
+        assert "gt;=3.6" in str(archive_link)
+
+
 class TestParseArchiveLinks:
 
     """Tests for mousebender.simple.parse_archive_links()."""
@@ -116,66 +173,76 @@ class TestParseArchiveLinks:
                 "numpy",
                 1402,
                 simple.ArchiveLink(
-                    "numpy-1.13.0rc1-cp36-none-win_amd64.whl",
-                    "https://files.pythonhosted.org/packages/5c/2e/5c0eee0635035a7e0646734e2b9388e17a97f6f2087e15141a218b6f2b6d/numpy-1.13.0rc1-cp36-none-win_amd64.whl",
-                    packaging.specifiers.SpecifierSet(
+                    filename="numpy-1.13.0rc1-cp36-none-win_amd64.whl",
+                    url="https://files.pythonhosted.org/packages/5c/2e/5c0eee0635035a7e0646734e2b9388e17a97f6f2087e15141a218b6f2b6d/numpy-1.13.0rc1-cp36-none-win_amd64.whl",
+                    requires_python=packaging.specifiers.SpecifierSet(
                         ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*"
                     ),
-                    (
+                    hash_=(
                         "sha256",
                         "8e8e1ccf025c8b6a821f75086a364a68d9e1877519a35bf8facec9e5120836f4",
                     ),
-                    None,
+                    gpg_sig=None,
+                    yanked=None,
+                    metadata=None,
                 ),
             ),
             (
                 "pulpcore-client",
                 370,
                 simple.ArchiveLink(
-                    "pulpcore_client-3.1.0.dev1578940535-py3-none-any.whl",
-                    "https://files.pythonhosted.org/packages/ca/7e/e14e41dc4bc60208f597f346d57755636e882be7509179c4e7c11f2c60a9/pulpcore_client-3.1.0.dev1578940535-py3-none-any.whl",
-                    packaging.specifiers.SpecifierSet(),
-                    (
+                    filename="pulpcore_client-3.1.0.dev1578940535-py3-none-any.whl",
+                    url="https://files.pythonhosted.org/packages/ca/7e/e14e41dc4bc60208f597f346d57755636e882be7509179c4e7c11f2c60a9/pulpcore_client-3.1.0.dev1578940535-py3-none-any.whl",
+                    requires_python=packaging.specifiers.SpecifierSet(),
+                    hash_=(
                         "sha256",
                         "83a3759d7b6af33083b0d4893d53615fc045cbad9adde68a8df02e25b1862bc6",
                     ),
-                    None,
+                    gpg_sig=None,
+                    yanked=None,
+                    metadata=None,
                 ),
             ),
             (
                 "pytorch",
                 522,
                 simple.ArchiveLink(
-                    "torchvision-0.5.0+cu100-cp36-cp36m-linux_x86_64.whl",
-                    "cu100/torchvision-0.5.0%2Bcu100-cp36-cp36m-linux_x86_64.whl",
-                    packaging.specifiers.SpecifierSet(),
-                    None,
-                    None,
+                    filename="torchvision-0.5.0+cu100-cp36-cp36m-linux_x86_64.whl",
+                    url="cu100/torchvision-0.5.0%2Bcu100-cp36-cp36m-linux_x86_64.whl",
+                    requires_python=packaging.specifiers.SpecifierSet(),
+                    hash_=None,
+                    gpg_sig=None,
+                    yanked=None,
+                    metadata=None,
                 ),
             ),
             (
                 "AICoE-tensorflow",
                 15,
                 simple.ArchiveLink(
-                    "tensorflow-2.0.0-cp37-cp37m-linux_x86_64.whl",
-                    "tensorflow-2.0.0-cp37-cp37m-linux_x86_64.whl",
-                    packaging.specifiers.SpecifierSet(),
-                    None,
-                    None,
+                    filename="tensorflow-2.0.0-cp37-cp37m-linux_x86_64.whl",
+                    url="tensorflow-2.0.0-cp37-cp37m-linux_x86_64.whl",
+                    requires_python=packaging.specifiers.SpecifierSet(),
+                    hash_=None,
+                    gpg_sig=None,
+                    yanked=None,
+                    metadata=None,
                 ),
             ),
             (
                 "numpy-piwheels",
                 316,
                 simple.ArchiveLink(
-                    "numpy-1.10.4-cp35-cp35m-linux_armv7l.whl",
-                    "numpy-1.10.4-cp35-cp35m-linux_armv7l.whl",
-                    packaging.specifiers.SpecifierSet(),
-                    (
+                    filename="numpy-1.10.4-cp35-cp35m-linux_armv7l.whl",
+                    url="numpy-1.10.4-cp35-cp35m-linux_armv7l.whl",
+                    requires_python=packaging.specifiers.SpecifierSet(),
+                    hash_=(
                         "sha256",
                         "5768279588a4766adb0211bbaa0f5857be38483c5aafe5d1caecbcd32749966e",
                     ),
-                    None,
+                    gpg_sig=None,
+                    yanked=None,
+                    metadata=None,
                 ),
             ),
         ],
@@ -298,19 +365,19 @@ class TestParseArchiveLinks:
         [
             (
                 '<a href="spam-1.2.3-py3.none.any.whl" data-yanked>spam-1.2.3-py3.none.any.whl</a>',
-                (True, ""),
+                "",
             ),
             (
                 '<a href="spam-1.2.3-py3.none.any.whl" data-yanked="oops!">spam-1.2.3-py3.none.any.whl</a>',
-                (True, "oops!"),
+                "oops!",
             ),
             (
                 '<a href="spam-1.2.3-py3.none.any.whl" data-yanked="">spam-1.2.3-py3.none.any.whl</a>',
-                (True, ""),
+                "",
             ),
             (
                 '<a href="spam-1.2.3-py3.none.any.whl">spam-1.2.3-py3.none.any.whl</a>',
-                (False, ""),
+                None,
             ),
         ],
     )
