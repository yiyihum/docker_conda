diff --git a/pydov/util/location.py b/pydov/util/location.py
index d28fa33..f2b01aa 100644
--- a/pydov/util/location.py
+++ b/pydov/util/location.py
@@ -29,7 +29,16 @@ class AbstractLocation(object):
 
     """
 
+    def _get_id_seed(self):
+        """Get the seed for generating a random but stable GML ID for this
+        location.
+
+        Should return the same value for locations considered equal.
+        """
+        raise NotImplementedError('This should be implemented in a subclass.')
+
     def _get_id(self):
+        random.seed(self._get_id_seed())
         random_id = ''.join(random.choice(
             string.ascii_letters + string.digits) for x in range(8))
         return f'pydov.{random_id}'
@@ -184,6 +193,7 @@ class Box(AbstractLocation):
         self.miny = miny
         self.maxx = maxx
         self.maxy = maxy
+        self.epsg = epsg
 
         self.element = etree.Element(
             '{http://www.opengis.net/gml/3.2}Envelope')
@@ -203,6 +213,11 @@ class Box(AbstractLocation):
         upper_corner.text = '{:.06f} {:.06f}'.format(self.maxx, self.maxy)
         self.element.append(upper_corner)
 
+    def _get_id_seed(self):
+        return ','.join(str(i) for i in [
+            self.minx, self.miny, self.maxx, self.miny, self.epsg
+        ])
+
     def get_element(self):
         return self.element
 
@@ -230,6 +245,7 @@ class Point(AbstractLocation):
         """
         self.x = x
         self.y = y
+        self.epsg = epsg
 
         self.element = etree.Element('{http://www.opengis.net/gml/3.2}Point')
         self.element.set('srsDimension', '2')
@@ -242,6 +258,11 @@ class Point(AbstractLocation):
         coordinates.text = '{:.06f} {:.06f}'.format(self.x, self.y)
         self.element.append(coordinates)
 
+    def _get_id_seed(self):
+        return ','.join(str(i) for i in [
+            self.x, self.y, self.epsg
+        ])
+
     def get_element(self):
         return self.element
 
diff --git a/pydov/util/owsutil.py b/pydov/util/owsutil.py
index 113a85e..fdd5b37 100644
--- a/pydov/util/owsutil.py
+++ b/pydov/util/owsutil.py
@@ -333,6 +333,28 @@ def set_geometry_column(location, geometry_column):
     return location.toXML()
 
 
+def unique_gml_ids(location):
+    """Make sure the location query has unique GML id's for all features.
+    Parameters
+    ----------
+    location : etree.ElementTree
+        XML tree of the location filter.
+    Returns
+    -------
+    etree.ElementTree
+        XML tree of the location filter with unique GML ids.
+    """
+    gml_items = location.findall('.//*[@{http://www.opengis.net/gml/3.2}id]')
+    gml_ids = [i.get('{http://www.opengis.net/gml/3.2}id') for i in gml_items]
+
+    if len(gml_ids) == len(set(gml_ids)):
+        return location
+    else:
+        for ix, item in enumerate(gml_items):
+            item.set('{http://www.opengis.net/gml/3.2}id', f'pydov.{ix}')
+        return location
+
+
 def wfs_build_getfeature_request(typename, geometry_column=None, location=None,
                                  filter=None, sort_by=None, propertyname=None,
                                  max_features=None, start_index=0,
@@ -439,6 +461,7 @@ def wfs_build_getfeature_request(typename, geometry_column=None, location=None,
 
     if location is not None:
         location = set_geometry_column(location, geometry_column)
+        location = unique_gml_ids(location)
         filter_parent.append(location)
 
     if filter is not None or location is not None:
