diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
index 310c851..392e538 100644
--- a/.pre-commit-config.yaml
+++ b/.pre-commit-config.yaml
@@ -25,3 +25,4 @@ repos:
   - id: mypy
     language_version: python3
     files: ^src/webargs/
+    additional_dependencies: ["marshmallow>=3,<4"]
diff --git a/CHANGELOG.rst b/CHANGELOG.rst
index 4549beb..732f7c0 100644
--- a/CHANGELOG.rst
+++ b/CHANGELOG.rst
@@ -1,6 +1,19 @@
 Changelog
 ---------
 
+7.1.0 (Unreleased)
+******************
+
+Features:
+
+* Detection of fields as "multi-value" for unpacking lists from multi-dict
+  types is now extensible with the `is_multiple` attribute. If a field sets
+  `is_multiple = True` it will be detected as a multi-value field.
+  (:issue:`563`)
+
+* If `is_multiple` is not set or is set to `None`, webargs will check if the
+  field is an instance of `List`.
+
 7.0.1 (2020-12-14)
 ******************
 
diff --git a/docs/advanced.rst b/docs/advanced.rst
index 53cbde8..edac845 100644
--- a/docs/advanced.rst
+++ b/docs/advanced.rst
@@ -110,7 +110,7 @@ When you need more flexibility in defining input schemas, you can pass a marshma
 
     @use_args(UserSchema())
     def profile_view(args):
-        username = args["userame"]
+        username = args["username"]
         # ...
 
 
diff --git a/setup.py b/setup.py
index f68b745..91c44ff 100644
--- a/setup.py
+++ b/setup.py
@@ -20,12 +20,12 @@ EXTRAS_REQUIRE = {
     ]
     + FRAMEWORKS,
     "lint": [
-        "mypy==0.800",
+        "mypy==0.812",
         "flake8==3.8.4",
-        "flake8-bugbear==20.11.1",
+        "flake8-bugbear==21.3.1",
         "pre-commit~=2.4",
     ],
-    "docs": ["Sphinx==3.4.3", "sphinx-issues==1.2.0", "sphinx-typlog-theme==0.8.0"]
+    "docs": ["Sphinx==3.5.2", "sphinx-issues==1.2.0", "sphinx-typlog-theme==0.8.0"]
     + FRAMEWORKS,
 }
 EXTRAS_REQUIRE["dev"] = EXTRAS_REQUIRE["tests"] + EXTRAS_REQUIRE["lint"] + ["tox"]
diff --git a/src/webargs/core.py b/src/webargs/core.py
index 25080ee..d161030 100644
--- a/src/webargs/core.py
+++ b/src/webargs/core.py
@@ -8,8 +8,6 @@ import marshmallow as ma
 from marshmallow import ValidationError
 from marshmallow.utils import missing
 
-from webargs.fields import DelimitedList
-
 logger = logging.getLogger(__name__)
 
 
@@ -34,6 +32,12 @@ ErrorHandler = typing.Callable[..., typing.NoReturn]
 # generic type var with no particular meaning
 T = typing.TypeVar("T")
 
+# a set of fields which are known to satisfy the `is_multiple` criteria, but
+# which come from marshmallow and therefore don't know about webargs (and
+# do not set `is_multiple=True`)
+# TODO: `ma.fields.Tuple` should be added here in v8.0
+KNOWN_MULTI_FIELDS: typing.List[typing.Type] = [ma.fields.List]
+
 
 # a value used as the default for arguments, so that when `None` is passed, it
 # can be distinguished from the default value
@@ -59,7 +63,12 @@ def _callable_or_raise(obj: typing.Optional[T]) -> typing.Optional[T]:
 
 def is_multiple(field: ma.fields.Field) -> bool:
     """Return whether or not `field` handles repeated/multi-value arguments."""
-    return isinstance(field, ma.fields.List) and not isinstance(field, DelimitedList)
+    # fields which set `is_multiple = True/False` will have the value selected,
+    # otherwise, we check for explicit criteria
+    is_multiple_attr = getattr(field, "is_multiple", None)
+    if is_multiple_attr is not None:
+        return is_multiple_attr
+    return isinstance(field, tuple(KNOWN_MULTI_FIELDS))
 
 
 def get_mimetype(content_type: str) -> str:
diff --git a/src/webargs/fields.py b/src/webargs/fields.py
index 806cc5d..f8991d1 100644
--- a/src/webargs/fields.py
+++ b/src/webargs/fields.py
@@ -55,6 +55,8 @@ class DelimitedFieldMixin:
     """
 
     delimiter: str = ","
+    # delimited fields set is_multiple=False for webargs.core.is_multiple
+    is_multiple: bool = False
 
     def _serialize(self, value, attr, obj, **kwargs):
         # serializing will start with parent-class serialization, so that we correctly
diff --git a/tox.ini b/tox.ini
index f3915a2..f18520b 100644
--- a/tox.ini
+++ b/tox.ini
@@ -30,6 +30,7 @@ commands = pre-commit run --all-files
 # issues in which `mypy` running on every file standalone won't catch things
 [testenv:mypy]
 deps = mypy
+extras = frameworks
 commands = mypy src/
 
 [testenv:docs]
