diff --git a/ccdproc/combiner.py b/ccdproc/combiner.py
index 39f3e28..d85c55e 100644
--- a/ccdproc/combiner.py
+++ b/ccdproc/combiner.py
@@ -676,8 +676,12 @@ def combine(img_list, output_file=None,
         elif isinstance(img_list, str) and (',' in img_list):
             img_list = img_list.split(',')
         else:
-            raise ValueError(
-                "unrecognised input for list of images to combine.")
+            try:
+                # Maybe the input can be made into a list, so try that
+                img_list = list(img_list)
+            except TypeError:
+                raise ValueError(
+                    "unrecognised input for list of images to combine.")
 
     # Select Combine function to call in Combiner
     if method == 'average':
diff --git a/ccdproc/image_collection.py b/ccdproc/image_collection.py
index 6fd9f6b..ff58c46 100644
--- a/ccdproc/image_collection.py
+++ b/ccdproc/image_collection.py
@@ -448,7 +448,9 @@ class ImageFileCollection:
             else:
                 files = self._filenames
         else:
-            files = self._fits_files_in_directory()
+            # Check if self.location is set, otherwise proceed with empty list
+            if self.location != '':
+                files = self._fits_files_in_directory()
 
             if self.glob_include is not None:
                 files = fnmatch.filter(files, self.glob_include)
