diff --git a/cogeo_mosaic/backends/base.py b/cogeo_mosaic/backends/base.py
index 4fe4f64..7cb8a91 100644
--- a/cogeo_mosaic/backends/base.py
+++ b/cogeo_mosaic/backends/base.py
@@ -236,13 +236,17 @@ class BaseBackend(BaseReader):
     def get_assets(self, x: int, y: int, z: int) -> List[str]:
         """Find assets."""
         quadkeys = self.find_quadkeys(Tile(x=x, y=y, z=z), self.quadkey_zoom)
-        return list(
+        assets = list(
             dict.fromkeys(
                 itertools.chain.from_iterable(
                     [self.mosaic_def.tiles.get(qk, []) for qk in quadkeys]
                 )
             )
         )
+        if self.mosaic_def.asset_prefix:
+            assets = [self.mosaic_def.asset_prefix + asset for asset in assets]
+
+        return assets
 
     def find_quadkeys(self, tile: Tile, quadkey_zoom: int) -> List[str]:
         """
diff --git a/cogeo_mosaic/backends/dynamodb.py b/cogeo_mosaic/backends/dynamodb.py
index 5a1e5f8..8c14e6a 100644
--- a/cogeo_mosaic/backends/dynamodb.py
+++ b/cogeo_mosaic/backends/dynamodb.py
@@ -222,13 +222,17 @@ class DynamoDBBackend(BaseBackend):
     def get_assets(self, x: int, y: int, z: int) -> List[str]:
         """Find assets."""
         quadkeys = self.find_quadkeys(Tile(x=x, y=y, z=z), self.quadkey_zoom)
-        return list(
+        assets = list(
             dict.fromkeys(
                 itertools.chain.from_iterable(
                     [self._fetch_dynamodb(qk).get("assets", []) for qk in quadkeys]
                 )
             )
         )
+        if self.mosaic_def.asset_prefix:
+            assets = [self.mosaic_def.asset_prefix + asset for asset in assets]
+
+        return assets
 
     @property
     def _quadkeys(self) -> List[str]:
diff --git a/cogeo_mosaic/backends/sqlite.py b/cogeo_mosaic/backends/sqlite.py
index d4ae7d7..d336c9e 100644
--- a/cogeo_mosaic/backends/sqlite.py
+++ b/cogeo_mosaic/backends/sqlite.py
@@ -316,11 +316,15 @@ class SQLiteBackend(BaseBackend):
         """Find assets."""
         mercator_tile = morecantile.Tile(x=x, y=y, z=z)
         quadkeys = self.find_quadkeys(mercator_tile, self.quadkey_zoom)
-        return list(
+        assets = list(
             dict.fromkeys(
                 itertools.chain.from_iterable([self._fetch(qk) for qk in quadkeys])
             )
         )
+        if self.mosaic_def.asset_prefix:
+            assets = [self.mosaic_def.asset_prefix + asset for asset in assets]
+
+        return assets
 
     @property
     def _quadkeys(self) -> List[str]:
diff --git a/cogeo_mosaic/mosaic.py b/cogeo_mosaic/mosaic.py
index 21d0dbc..4ba709c 100644
--- a/cogeo_mosaic/mosaic.py
+++ b/cogeo_mosaic/mosaic.py
@@ -1,6 +1,7 @@
 """cogeo_mosaic.mosaic MosaicJSON models and helper functions."""
 
 import os
+import re
 import sys
 import warnings
 from contextlib import ExitStack
@@ -230,9 +231,16 @@ class MosaicJSON(BaseModel, validate_assignment=True):
                     )
 
                     if dataset:
-                        mosaic_definition["tiles"][quadkey] = [
-                            accessor(f) for f in dataset
-                        ]
+                        assets = [accessor(f) for f in dataset]
+                        if asset_prefix:
+                            assets = [
+                                re.sub(rf"^{asset_prefix}", "", asset)
+                                if asset.startswith(asset_prefix)
+                                else asset
+                                for asset in assets
+                            ]
+
+                        mosaic_definition["tiles"][quadkey] = assets
 
         return cls(**mosaic_definition)
 

