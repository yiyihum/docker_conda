diff --git a/aioredlock/algorithm.py b/aioredlock/algorithm.py
index bf192ab..51707b7 100644
--- a/aioredlock/algorithm.py
+++ b/aioredlock/algorithm.py
@@ -238,3 +238,18 @@ class Aioredlock:
         self._watchdogs.clear()
 
         await self.redis.clear_connections()
+
+    async def get_active_locks(self):
+        """
+        Return all stored locks that are valid.
+
+        .. note::
+            This function is only really useful in learning if there are no
+            active locks. It is possible that by the time the a lock is
+            returned from this function that it is no longer active.
+        """
+        ret = []
+        for lock in self._locks.values():
+            if lock.valid is True and await lock.is_locked():
+                ret.append(lock)
+        return ret
diff --git a/aioredlock/lock.py b/aioredlock/lock.py
index a44b84c..58f5b09 100644
--- a/aioredlock/lock.py
+++ b/aioredlock/lock.py
@@ -21,3 +21,6 @@ class Lock:
 
     async def release(self):
         await self.lock_manager.unlock(self)
+
+    async def is_locked(self):
+        return await self.lock_manager.is_locked(self)
