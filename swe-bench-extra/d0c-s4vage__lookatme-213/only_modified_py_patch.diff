diff --git a/lookatme/render/html/__init__.py b/lookatme/render/html/__init__.py
index a77226b..c74d0c2 100644
--- a/lookatme/render/html/__init__.py
+++ b/lookatme/render/html/__init__.py
@@ -5,6 +5,7 @@ This module renders lookatme slides to HTML
 
 from collections import deque
 from contextlib import contextmanager
+import re
 from typing import Dict, Optional
 
 
@@ -111,12 +112,7 @@ class HtmlContext:
 
 
 def _sanitize(text: str) -> str:
-    return (
-        text.replace("&", "&amp;")
-        .replace(" ", "&nbsp;")
-        .replace("<", "&lt;")
-        .replace(">", "&gt;")
-    )
+    return text.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;")
 
 
 def _keep_text(text_idx: int, text: str, keep_range: range) -> str:
@@ -134,6 +130,11 @@ def _keep_text(text_idx: int, text: str, keep_range: range) -> str:
     return text[start - text_idx : stop - text_idx]
 
 
+def _space_span_replace(match: re.Match) -> str:
+    spaces = match.group(0)
+    return f"<span style='padding-left: {len(spaces)}ch'></span>"
+
+
 def canvas_to_html(
     ctx: HtmlContext,
     canvas: urwid.Canvas,
@@ -157,6 +158,10 @@ def canvas_to_html(
                 text = new_text
 
             text = _sanitize(text)
+            if getattr(spec, "preserve_spaces", False):
+                text = text.replace(" ", "&nbsp;")
+            else:
+                text = re.sub(r"( {2,})", _space_span_replace, text)
 
             if text == "":
                 continue
diff --git a/lookatme/render/markdown_inline.py b/lookatme/render/markdown_inline.py
index 5329514..ceabdce 100644
--- a/lookatme/render/markdown_inline.py
+++ b/lookatme/render/markdown_inline.py
@@ -307,6 +307,7 @@ def render_code_inline(token, ctx: Context):
 
     for spec, text in markups:
         spec = ctx.spec_text_with(spec)
+        spec.preserve_spaces = True
         ctx.inline_push((spec, text))
 
 
diff --git a/lookatme/widgets/codeblock.py b/lookatme/widgets/codeblock.py
index f68a674..6d0f0d9 100644
--- a/lookatme/widgets/codeblock.py
+++ b/lookatme/widgets/codeblock.py
@@ -140,6 +140,7 @@ class SyntaxHlStyle:
             )["fg"]
 
         colors.ensure_contrast(spec)
+        spec.preserve_spaces = True
 
         return spec
 
diff --git a/lookatme/widgets/smart_attr_spec.py b/lookatme/widgets/smart_attr_spec.py
index ec11807..f51a6cd 100644
--- a/lookatme/widgets/smart_attr_spec.py
+++ b/lookatme/widgets/smart_attr_spec.py
@@ -2,6 +2,8 @@ import urwid
 
 
 class SmartAttrSpec(urwid.AttrSpec):
+    preserve_spaces: bool = False
+
     def __init__(self, fg, bg):
         """An attr spec that chooses the right color depth"""
         super().__init__(fg, bg, 2**24)

