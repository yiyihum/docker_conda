diff --git a/tests/test_function.py b/tests/test_function.py
index c4f8229..234875d 100644
--- a/tests/test_function.py
+++ b/tests/test_function.py
@@ -1,4 +1,5 @@
 import abc
+import os
 import textwrap
 import typing
 
@@ -221,6 +222,31 @@ def test_doc(monkeypatch):
     assert g.__doc__ == textwrap.dedent(expected_doc).strip()
 
 
+def test_simple_doc(monkeypatch):
+    @dispatch
+    def f(x: int):
+        """First."""
+
+    @dispatch
+    def f(x: str):
+        """Second."""
+
+    monkeypatch.setitem(os.environ, "PLUM_SIMPLE_DOC", "1")
+    assert f.__doc__ == "First."
+
+    monkeypatch.setitem(os.environ, "PLUM_SIMPLE_DOC", "0")
+    expected_doc = """
+    First.
+
+    -----------
+
+    f(x: str)
+
+    Second.
+    """
+    assert f.__doc__ == textwrap.dedent(expected_doc).strip()
+
+
 def test_methods():
     dispatch = Dispatcher()
 
diff --git a/tests/test_parametric.py b/tests/test_parametric.py
index d9fa79c..00bbcfa 100644
--- a/tests/test_parametric.py
+++ b/tests/test_parametric.py
@@ -507,3 +507,25 @@ def test_val():
         Val[1].__init__(MockVal())
 
     assert repr(Val[1]()) == "plum.parametric.Val[1]()"
+
+
+def test_init_subclass_correct_args():
+    # See issue https://github.com/beartype/plum/issues/105
+
+    from plum import parametric
+
+    register = set()
+
+    class Pytree:
+        def __init_subclass__(cls, **kwargs):
+            if cls in register:
+                raise ValueError("duplicate")
+            else:
+                register.add(cls)
+
+    @parametric
+    class Wrapper(Pytree):
+        pass
+
+    Wrapper[int]
+    assert Wrapper[int] in register
