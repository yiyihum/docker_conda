diff --git a/bleach/__init__.py b/bleach/__init__.py
index 3092cb7..bf67bf3 100644
--- a/bleach/__init__.py
+++ b/bleach/__init__.py
@@ -2,6 +2,12 @@
 
 from __future__ import unicode_literals
 import logging
+try:  # Python 2.7+
+    from logging import NullHandler
+except ImportError:
+    class NullHandler(logging.Handler):
+        def emit(self, record):
+            pass
 import re
 
 import html5lib
@@ -15,7 +21,8 @@ from .version import __version__, VERSION # flake8: noqa
 
 __all__ = ['clean', 'linkify']
 
-log = logging.getLogger('bleach')
+log = logging.getLogger(__name__)
+log.addHandler(NullHandler())
 
 ALLOWED_TAGS = [
     'a',
@@ -315,7 +322,7 @@ def linkify(text, callbacks=DEFAULT_CALLBACKS, skip_pre=False,
                 if node.tag == ETREE_TAG('pre') and skip_pre:
                     linkify_nodes(node, False)
                 elif not (node in _seen):
-                    linkify_nodes(node, True)
+                    linkify_nodes(node, parse_text)
 
             current_child += 1
 
@@ -344,6 +351,14 @@ def linkify(text, callbacks=DEFAULT_CALLBACKS, skip_pre=False,
         if url.startswith('('):
             _wrapping = strip_wrapping_parentheses(url)
             url, open_brackets, close_brackets = _wrapping
+        if url.endswith(')') and '(' not in url:
+            # This is a clumsy handling for the case where we have something
+            # like (foo http://example.com) and the ) gets picked up by the
+            # url_re but we don't want it part of the link.
+            new_url = url.rstrip(')')
+            close_brackets += len(url) - len(new_url)
+            url = new_url
+
         end = ''
         m = re.search(punct_re, url)
         if m:

