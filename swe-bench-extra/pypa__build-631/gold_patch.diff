diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
index acd8eb8..074282d 100644
--- a/.pre-commit-config.yaml
+++ b/.pre-commit-config.yaml
@@ -35,7 +35,7 @@ repos:
     hooks:
       - id: prettier
   - repo: https://github.com/astral-sh/ruff-pre-commit
-    rev: v0.0.275
+    rev: v0.0.276
     hooks:
       - id: ruff
         args: [--fix, --format, grouped, --show-fixes]
diff --git a/pyproject.toml b/pyproject.toml
index dfeb60a..0457578 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -36,7 +36,7 @@ dependencies = [
   "pyproject_hooks",
   # not actually a runtime dependency, only supplied as there is not "recommended dependency" support
   'colorama; os_name == "nt"',
-  'importlib-metadata >= 0.22; python_version < "3.8"',
+  'importlib-metadata >= 4.6; python_version < "3.10"',  # Not required for 3.8+, but fixes a stdlib bug
   'tomli >= 1.1.0; python_version < "3.11"',
 ]
 
diff --git a/src/build/_importlib.py b/src/build/_importlib.py
new file mode 100644
index 0000000..f95b2a6
--- /dev/null
+++ b/src/build/_importlib.py
@@ -0,0 +1,14 @@
+import sys
+
+
+if sys.version_info < (3, 8):
+    import importlib_metadata as metadata
+elif sys.version_info < (3, 9, 10) or (3, 10, 0) <= sys.version_info < (3, 10, 2):
+    try:
+        import importlib_metadata as metadata
+    except ModuleNotFoundError:
+        from importlib import metadata
+else:
+    from importlib import metadata
+
+__all__ = ['metadata']
diff --git a/src/build/_util.py b/src/build/_util.py
index 234297f..0582a28 100644
--- a/src/build/_util.py
+++ b/src/build/_util.py
@@ -27,10 +27,7 @@ def check_dependency(
     """
     import packaging.requirements
 
-    if sys.version_info >= (3, 8):
-        import importlib.metadata as importlib_metadata
-    else:
-        import importlib_metadata
+    from ._importlib import metadata
 
     req = packaging.requirements.Requirement(req_string)
     normalised_req_string = str(req)
@@ -51,8 +48,8 @@ def check_dependency(
             return
 
     try:
-        dist = importlib_metadata.distribution(req.name)
-    except importlib_metadata.PackageNotFoundError:
+        dist = metadata.distribution(req.name)
+    except metadata.PackageNotFoundError:
         # dependency is not installed in the environment.
         yield (*ancestral_req_strings, normalised_req_string)
     else:
diff --git a/src/build/util.py b/src/build/util.py
index 9f0570e..9f204b8 100644
--- a/src/build/util.py
+++ b/src/build/util.py
@@ -3,25 +3,19 @@
 from __future__ import annotations
 
 import pathlib
-import sys
 import tempfile
 
 import pyproject_hooks
 
 from . import PathType, ProjectBuilder, RunnerType
+from ._importlib import metadata
 from .env import DefaultIsolatedEnv
 
 
-if sys.version_info >= (3, 8):
-    import importlib.metadata as importlib_metadata
-else:
-    import importlib_metadata
-
-
-def _project_wheel_metadata(builder: ProjectBuilder) -> importlib_metadata.PackageMetadata:
+def _project_wheel_metadata(builder: ProjectBuilder) -> metadata.PackageMetadata:
     with tempfile.TemporaryDirectory() as tmpdir:
         path = pathlib.Path(builder.metadata_path(tmpdir))
-        return importlib_metadata.PathDistribution(path).metadata
+        return metadata.PathDistribution(path).metadata
 
 
 def project_wheel_metadata(
@@ -29,7 +23,7 @@ def project_wheel_metadata(
     isolated: bool = True,
     *,
     runner: RunnerType = pyproject_hooks.quiet_subprocess_runner,
-) -> importlib_metadata.PackageMetadata:
+) -> metadata.PackageMetadata:
     """
     Return the wheel metadata for a project.
 
