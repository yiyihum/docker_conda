diff --git a/mkdocsdrawioexporter/exporter.py b/mkdocsdrawioexporter/exporter.py
index 465e621..74352bd 100644
--- a/mkdocsdrawioexporter/exporter.py
+++ b/mkdocsdrawioexporter/exporter.py
@@ -199,13 +199,15 @@ class DrawIoExporter:
         :param list(str) drawio_args: Additional arguments to append to the Draw.io export command.
         :param str cache_dir: Export cache directory.
         :param str format: Desired export format.
-        :return str: Cached export filename.
+        :return tuple(str, int): Cached export filename.
         """
+        cache_filename = self.make_cache_filename(source_rel, page_index, cache_dir)
+        exit_status = None
+
         if not drawio_executable:
             self.log.warn('Skipping build of "{}" as Draw.io executable not available'.format(source))
-            return
+            return (cache_filename, exit_status)
 
-        cache_filename = self.make_cache_filename(source_rel, page_index, cache_dir)
         if self.use_cached_file(source, cache_filename):
             self.log.debug('Source file appears unchanged; using cached copy from "{}"'.format(cache_filename))
         else:
@@ -213,11 +215,8 @@ class DrawIoExporter:
             exit_status = self.export_file(
                     source, page_index, cache_filename,
                     drawio_executable, drawio_args, format)
-            if exit_status != 0:
-                self.log.error('Export failed with exit status {}'.format(exit_status))
-                return
 
-        return cache_filename
+        return (cache_filename, exit_status)
 
     def make_cache_filename(self, source, page_index, cache_dir):
         """Make the cached filename.
diff --git a/mkdocsdrawioexporter/plugin.py b/mkdocsdrawioexporter/plugin.py
index ae02db1..6ebaae5 100644
--- a/mkdocsdrawioexporter/plugin.py
+++ b/mkdocsdrawioexporter/plugin.py
@@ -78,12 +78,16 @@ class DrawIoExporterPlugin(mkdocs.plugins.BasePlugin):
                     source.source_rel, source.page_index, self.config['format'])
             abs_src_path = os.path.join(config['docs_dir'], source.source_rel)
             abs_dest_path = os.path.join(config['site_dir'], dest_rel_path)
-            cache_filename = self.exporter.ensure_file_cached(
+            cache_filename, exit_status = self.exporter.ensure_file_cached(
                     abs_src_path, source.source_rel, source.page_index,
                     self.config['drawio_executable'], self.config['drawio_args'],
                     self.config['cache_dir'], self.config['format'])
 
+            if exit_status != 0:
+                log.error('Export failed with exit status {}; skipping copy'.format(exit_status))
+                continue
+
             try:
                 copy_file(cache_filename, abs_dest_path)
             except FileNotFoundError:
-                log.exception('Output file not created in cache')
+                log.warn('Export successful, but wrote no output file')

