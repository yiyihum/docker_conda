diff --git a/src/flake8/main/application.py b/src/flake8/main/application.py
index 13ece4e..5178abb 100644
--- a/src/flake8/main/application.py
+++ b/src/flake8/main/application.py
@@ -132,6 +132,7 @@ class Application:
             version=flake8.__version__,
             plugin_versions=self.plugins.versions_str(),
             parents=[self.prelim_arg_parser],
+            formatter_names=list(self.plugins.reporters),
         )
         options.register_default_options(self.option_manager)
         self.option_manager.register_plugins(self.plugins)
diff --git a/src/flake8/main/options.py b/src/flake8/main/options.py
index 9b374ab..86a6cf8 100644
--- a/src/flake8/main/options.py
+++ b/src/flake8/main/options.py
@@ -220,7 +220,15 @@ def register_default_options(option_manager: OptionManager) -> None:
         metavar="format",
         default="default",
         parse_from_config=True,
-        help="Format errors according to the chosen formatter.",
+        help=(
+            f"Format errors according to the chosen formatter "
+            f"({', '.join(sorted(option_manager.formatter_names))}) "
+            f"or a format string containing %%-style "
+            f"mapping keys (code, col, path, row, text). "
+            f"For example, "
+            f"``--format=pylint`` or ``--format='%%(path)s %%(code)s'``. "
+            f"(Default: %(default)s)"
+        ),
     )
 
     add_option(
diff --git a/src/flake8/options/manager.py b/src/flake8/options/manager.py
index e333c9e..7c40cb9 100644
--- a/src/flake8/options/manager.py
+++ b/src/flake8/options/manager.py
@@ -317,6 +317,7 @@ class OptionManager:
         version: str,
         plugin_versions: str,
         parents: list[argparse.ArgumentParser],
+        formatter_names: list[str],
     ) -> None:
         """Initialize an instance of an OptionManager.
 
@@ -330,6 +331,7 @@ class OptionManager:
             A list of ArgumentParser objects whose arguments should also be
             included.
         """
+        self.formatter_names = formatter_names
         self.parser = argparse.ArgumentParser(
             prog="flake8",
             usage="%(prog)s [options] file file ...",
