diff --git a/test/unit/v0/test_raw_api.py b/test/unit/v0/test_raw_api.py
index 222fae4d..b1a8e03b 100644
--- a/test/unit/v0/test_raw_api.py
+++ b/test/unit/v0/test_raw_api.py
@@ -7,6 +7,7 @@
 # License https://www.backblaze.com/using_b2_code.html
 #
 ######################################################################
+import pytest
 
 from .test_base import TestBase
 
@@ -92,3 +93,27 @@ class TestRawAPIFilenames(TestBase):
         self._should_raise(u'foo/' + 251 * u'x', "segment too long")
         # So a segment of 125 two-byte chars plus one should also fail.
         self._should_raise(u'foo/' + 125 * TWO_BYTE_UNICHR + u'x', "segment too long")
+
+
+class TestUpdateBucket:
+    """Test updating bucket."""
+
+    @pytest.fixture(autouse=True)
+    def init(self, mocker):
+        b2_http = mocker.MagicMock()
+        self.raw_api = B2RawApi(b2_http)
+
+    def test_assertion_raises(self):
+        with pytest.raises(AssertionError):
+            self.raw_api.update_bucket('test', 'account_auth_token', 'account_id', 'bucket_id')
+
+    @pytest.mark.parametrize('bucket_type,bucket_info', ((None, {}), ('allPublic', None)))
+    def test_assertion_not_raises(self, bucket_type, bucket_info):
+        self.raw_api.update_bucket(
+            'test',
+            'account_auth_token',
+            'account_id',
+            'bucket_id',
+            bucket_type=bucket_type,
+            bucket_info=bucket_info
+        )
diff --git a/test/unit/v1/test_raw_api.py b/test/unit/v1/test_raw_api.py
index a0139740..1bf01dee 100644
--- a/test/unit/v1/test_raw_api.py
+++ b/test/unit/v1/test_raw_api.py
@@ -7,6 +7,7 @@
 # License https://www.backblaze.com/using_b2_code.html
 #
 ######################################################################
+import pytest
 
 from .test_base import TestBase
 
@@ -92,3 +93,27 @@ class TestRawAPIFilenames(TestBase):
         self._should_raise(u'foo/' + 251 * u'x', "segment too long")
         # So a segment of 125 two-byte chars plus one should also fail.
         self._should_raise(u'foo/' + 125 * TWO_BYTE_UNICHR + u'x', "segment too long")
+
+
+class TestUpdateBucket:
+    """Test updating bucket."""
+
+    @pytest.fixture(autouse=True)
+    def init(self, mocker):
+        b2_http = mocker.MagicMock()
+        self.raw_api = B2RawApi(b2_http)
+
+    def test_assertion_raises(self):
+        with pytest.raises(AssertionError):
+            self.raw_api.update_bucket('test', 'account_auth_token', 'account_id', 'bucket_id')
+
+    @pytest.mark.parametrize('bucket_type,bucket_info', ((None, {}), ('allPublic', None)))
+    def test_assertion_not_raises(self, bucket_type, bucket_info):
+        self.raw_api.update_bucket(
+            'test',
+            'account_auth_token',
+            'account_id',
+            'bucket_id',
+            bucket_type=bucket_type,
+            bucket_info=bucket_info
+        )
