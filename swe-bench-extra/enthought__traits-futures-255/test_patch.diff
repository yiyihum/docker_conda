diff --git a/traits_futures/tests/test_pinger.py b/traits_futures/tests/test_pinger.py
index 3036953..91ec622 100644
--- a/traits_futures/tests/test_pinger.py
+++ b/traits_futures/tests/test_pinger.py
@@ -102,14 +102,24 @@ class PingListener(HasStrictTraits):
     #: Total number of pings received.
     ping_count = Int(0)
 
+    def __enter__(self):
+        self.connect()
+        return self
+
+    def __exit__(self, *exc_info):
+        self.disconnect()
+
+    def connect(self):
+        self.pingee = Pingee(on_ping=lambda: setattr(self, "ping", True))
+        self.pingee.connect()
+
+    def disconnect(self):
+        self.pingee.disconnect()
+        self.pingee = None
+
     def _ping_fired(self):
         self.ping_count += 1
 
-    def _pingee_default(self):
-        return Pingee(
-            on_ping=lambda: setattr(self, "ping", True),
-        )
-
 
 class MultipleListeners(HasStrictTraits):
     """
@@ -137,8 +147,10 @@ class TestPinger(GuiTestAssistant, unittest.TestCase):
     def setUp(self):
         GuiTestAssistant.setUp(self)
         self.listener = PingListener()
+        self.listener.connect()
 
     def tearDown(self):
+        self.listener.disconnect()
         del self.listener
         GuiTestAssistant.tearDown(self)
 
@@ -178,18 +190,17 @@ class TestPinger(GuiTestAssistant, unittest.TestCase):
         self.assertEqual(self.listener.ping_count, 15)
 
     def test_multiple_pingees(self):
-        listener1 = PingListener()
-        listener2 = PingListener()
-        listeners = MultipleListeners(listeners=[listener1, listener2])
-
-        with BackgroundPinger(listener1.pingee) as pinger1:
-            with BackgroundPinger(listener2.pingee) as pinger2:
-                pinger1.ping(3)
-                pinger2.ping(4)
-
-            self.run_until(
-                listeners, "ping", lambda obj: obj.ping_count >= 7
-            )
+        with PingListener() as listener1:
+            with PingListener() as listener2:
+                listeners = MultipleListeners(listeners=[listener1, listener2])
+                with BackgroundPinger(listener1.pingee) as pinger1:
+                    with BackgroundPinger(listener2.pingee) as pinger2:
+                        pinger1.ping(3)
+                        pinger2.ping(4)
+
+                self.run_until(
+                    listeners, "ping", lambda obj: obj.ping_count >= 7
+                )
 
         self.assertEqual(listener1.ping_count, 3)
         self.assertEqual(listener2.ping_count, 4)
