diff --git a/tests/CsvParserTest.py b/tests/CsvParserTest.py
new file mode 100644
index 0000000..53f6f38
--- /dev/null
+++ b/tests/CsvParserTest.py
@@ -0,0 +1,57 @@
+import pathlib
+import unittest
+
+from SigasiProjectCreator.CsvParser import CsvParser
+from SigasiProjectCreator.ProjectOptions import ProjectOptions
+
+
+class CsvParserTest(unittest.TestCase):
+    def test_extended_csv(self):
+        input_file = 'tests/test-files/csv/extended.csv'
+        command_line_options = ['the_project', input_file]
+        self.options = ProjectOptions(command_line_options)
+        result = CsvParser().parse_file(input_file, self.options)
+        expected_library_mapping = {
+            pathlib.Path('foo/bar.vhd').absolute().resolve(): ['test1'],
+            pathlib.Path('bahr/define.sv').absolute().resolve(): ['define'],
+            pathlib.Path('clock_generator.vhd').absolute().resolve(): ['test2'],
+            pathlib.Path('dut.vhd').absolute().resolve(): ['test2'],
+            pathlib.Path('testbench.vhd').absolute().resolve(): ['test1'],
+            pathlib.Path('include.vhd').absolute().resolve(): ['include']
+        }
+        expected_includes = {
+            pathlib.Path('includes').absolute().resolve()
+        }
+        expected_defines = ['SIGASI=true']
+        self.assertDictEqual(result.library_mapping, expected_library_mapping, 'Library mapping mismatch')
+        self.assertSetEqual(result.verilog_includes, expected_includes, 'Includes list mismatch')
+        self.assertListEqual(result.verilog_defines, expected_defines, 'Defines list mismatch')
+
+    def test_multimap_csv(self):
+        self.maxDiff = None
+        input_file = 'tests/test-files/csv/multimap.csv'
+        command_line_options = ['the_project', input_file]
+        self.options = ProjectOptions(command_line_options)
+        result = CsvParser().parse_file(input_file, self.options)
+        expected_library_mapping = {
+            pathlib.Path('foo/bar.vhd').absolute().resolve(): ['test1'],
+            pathlib.Path('clock_generator.vhd').absolute().resolve(): ['test2', 'test1', 'test7'],
+            pathlib.Path('dut.vhd').absolute().resolve(): ['test2', 'test3'],
+            pathlib.Path('testbench.vhd').absolute().resolve(): ['test1']
+        }
+        self.assertDictEqual(result.library_mapping, expected_library_mapping, 'Library mapping mismatch')
+        self.assertSetEqual(result.verilog_includes, set(), 'Includes list mismatch')
+        self.assertListEqual(result.verilog_defines, [], 'Defines list mismatch')
+
+    def test_invalid_library_name(self):
+        self.maxDiff = None
+        input_file = 'tests/test-files/csv/invalid_lib.csv'
+        command_line_options = ['the_project', input_file]
+        self.options = ProjectOptions(command_line_options)
+        with self.assertRaises(SystemExit) as context:
+            result = CsvParser().parse_file(input_file, self.options)
+        self.assertEqual('5', str(context.exception))  # exit code 5 from abort_if_false
+
+
+if __name__ == '__main__':
+    unittest.main()
diff --git a/tests/ProjectCreatorTest.py b/tests/ProjectCreatorTest.py
index 0c4e40f..a75e000 100644
--- a/tests/ProjectCreatorTest.py
+++ b/tests/ProjectCreatorTest.py
@@ -435,7 +435,7 @@ class ProjectCreatorTest(unittest.TestCase):
         expected = [
             ['include_folders', 'virtual:/virtual', True, False],
             [pathlib.Path('include_folders/verilog'), '/somelib/verilog', True, True],
-            [pathlib.Path('Common Libraries/uvm'), '/home/wmeeus/git/SigasiProjectCreator_github/uvm/src', True, True],
+            [pathlib.Path('Common Libraries/uvm'), base_path.joinpath('uvm/src').as_posix(), True, True],
             ['Common Libraries', 'virtual:/virtual', True, False],
             ['Common Libraries/IEEE', 'sigasiresource:/vhdl/2008/IEEE', True, False],
             ['Common Libraries/IEEE Synopsys', 'sigasiresource:/vhdl/2008/IEEE%20Synopsys', True, False],
diff --git a/tests/test-files/csv/extended.csv b/tests/test-files/csv/extended.csv
new file mode 100644
index 0000000..498119d
--- /dev/null
+++ b/tests/test-files/csv/extended.csv
@@ -0,0 +1,8 @@
+test1, foo/bar.vhd
+define, bahr/define.sv
+test2, clock_generator.vhd
+#define, SIGASI=true
+test2, dut.vhd
+#include, includes
+test1, testbench.vhd
+include, include.vhd
diff --git a/tests/test-files/csv/invalid_lib.csv b/tests/test-files/csv/invalid_lib.csv
new file mode 100644
index 0000000..ee1b249
--- /dev/null
+++ b/tests/test-files/csv/invalid_lib.csv
@@ -0,0 +1,8 @@
+test1, foo/bar.vhd
+define, bahr/define.sv
+_test2, clock_generator.vhd
+#define, SIGASI=true
+test2, dut.vhd
+#include, includes
+test1, testbench.vhd
+include, include.vhd
diff --git a/tests/test-files/csv/multimap.csv b/tests/test-files/csv/multimap.csv
new file mode 100644
index 0000000..dd99344
--- /dev/null
+++ b/tests/test-files/csv/multimap.csv
@@ -0,0 +1,7 @@
+test1, foo/bar.vhd
+test2, clock_generator.vhd
+test2, dut.vhd
+test1, testbench.vhd
+test1, clock_generator.vhd
+test3, dut.vhd
+test7, clock_generator.vhd
