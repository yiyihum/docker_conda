diff --git a/src/SigasiProjectCreator/CsvParser.py b/src/SigasiProjectCreator/CsvParser.py
index 408eeba..83e59fc 100644
--- a/src/SigasiProjectCreator/CsvParser.py
+++ b/src/SigasiProjectCreator/CsvParser.py
@@ -5,7 +5,9 @@
 """
 import csv
 import pathlib
+from collections import defaultdict
 
+from SigasiProjectCreator import abort_if_false, is_valid_name
 from SigasiProjectCreator.ProjectFileParser import ProjectFileParser, project_file_parser, ProjectFileParserResult
 
 
@@ -16,18 +18,21 @@ class CsvParser(ProjectFileParser):
         super().__init__()
 
     def parse_file(self, csv_file, options=None):
-        library_mapping = dict()
+        library_mapping = defaultdict(list)
+        includes = set()
+        defines = []
         with open(csv_file, 'r') as f:
             reader = csv.reader(f, skipinitialspace=True)
             for row in reader:
                 if row:
                     library = row[0].strip()
-                    path = pathlib.Path(row[1].strip()).absolute().resolve()
-                    if path in library_mapping:
-                        if isinstance(library_mapping[path], list):
-                            library_mapping[path].append(library)
-                        else:
-                            library_mapping[path] = [library_mapping[path], library]
+                    if library == '#define':
+                        defines.append(row[1].strip())
                     else:
-                        library_mapping[path] = library
-        return ProjectFileParserResult(library_mapping, None, None)
+                        path = pathlib.Path(row[1].strip()).absolute().resolve()
+                        if library == '#include':
+                            includes.add(path)
+                        else:
+                            abort_if_false(is_valid_name(library), f'Invalid library name: {library}')
+                            library_mapping[path].append(library)
+        return ProjectFileParserResult(library_mapping, verilog_defines=defines, verilog_includes=includes)
diff --git a/src/SigasiProjectCreator/ProjectOptions.py b/src/SigasiProjectCreator/ProjectOptions.py
index 328f30a..7d832d8 100644
--- a/src/SigasiProjectCreator/ProjectOptions.py
+++ b/src/SigasiProjectCreator/ProjectOptions.py
@@ -30,7 +30,8 @@ class ProjectOptions:
         parser.add_argument('--format', action='store', dest='format',
                             choices=ProjectFileParser.project_file_parsers.keys(), default=None,
                             help='Force input format (ignore file extension): ' + ', '.join(
-                                f'{key} ({cls.__doc__})' for key, cls in ProjectFileParser.project_file_parsers.items()))
+                                f'{key} ({cls.__doc__})' for key, cls in
+                                ProjectFileParser.project_file_parsers.items()))
         parser.add_argument('--mapping', action='store', dest='mapping',
                             choices=['file', 'folder'], default='file',
                             help='Library mapping style: `folder` = map folders where possible, `file` = map '
diff --git a/src/SigasiProjectCreator/__init__.py b/src/SigasiProjectCreator/__init__.py
index a70ae1b..bc4ddba 100644
--- a/src/SigasiProjectCreator/__init__.py
+++ b/src/SigasiProjectCreator/__init__.py
@@ -1,3 +1,4 @@
+import re
 import sys
 from os.path import abspath, normcase, splitdrive, join
 from pathlib import PurePath
@@ -23,3 +24,7 @@ def abort_if_false(condition, message, code=5):
 	if not condition:
 		print(message)
 		sys.exit(code)
+
+
+def is_valid_name(text):
+	return re.match('(?!.*__)[a-zA-Z][\\w]*[^_]', text)
