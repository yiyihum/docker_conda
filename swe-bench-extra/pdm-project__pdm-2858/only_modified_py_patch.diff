diff --git a/src/pdm/cli/commands/add.py b/src/pdm/cli/commands/add.py
index 5f56bc52..df4d2ce1 100644
--- a/src/pdm/cli/commands/add.py
+++ b/src/pdm/cli/commands/add.py
@@ -155,6 +155,8 @@ class Command(BaseCommand):
         reqs = [
             r for g, deps in all_dependencies.items() if lock_groups is None or g in lock_groups for r in deps.values()
         ]
+        # pre-write the dependencies to the pyproject.toml to make them recognized by the resolver
+        project.add_dependencies(requirements, group, selection.dev or False, write=False)
         with hooks.skipping("post_lock"):
             resolved = do_lock(
                 project,
diff --git a/src/pdm/project/core.py b/src/pdm/project/core.py
index fa3a3ea1..89014ebb 100644
--- a/src/pdm/project/core.py
+++ b/src/pdm/project/core.py
@@ -570,6 +570,7 @@ class Project:
         to_group: str = "default",
         dev: bool = False,
         show_message: bool = True,
+        write: bool = True,
     ) -> None:
         deps, setter = self.use_pyproject_dependencies(to_group, dev)
         for _, dep in requirements.items():
@@ -583,7 +584,8 @@ class Project:
             else:
                 deps[matched_index] = req
         setter(cast(Array, deps).multiline(True))
-        self.pyproject.write(show_message)
+        if write:
+            self.pyproject.write(show_message)
 
     def init_global_project(self) -> None:
         if not self.is_global or not self.pyproject.empty():

