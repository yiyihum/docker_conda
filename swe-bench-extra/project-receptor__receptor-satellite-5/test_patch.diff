diff --git a/tests/test_response_queue.py b/tests/test_response_queue.py
index 170a8dc..d53ddef 100644
--- a/tests/test_response_queue.py
+++ b/tests/test_response_queue.py
@@ -13,7 +13,10 @@ PLAYBOOK_RUN_COMPLETED_TEST_CASES = [
     ),
     (
         ("some-uuid", constants.RESULT_FAILURE, None, None),
-        messages.playbook_run_completed("some-uuid", constants.RESULT_FAILURE,),
+        messages.playbook_run_completed(
+            "some-uuid",
+            constants.RESULT_FAILURE,
+        ),
     ),
     (
         ("some-uuid", constants.RESULT_CANCEL, None, None),
diff --git a/tests/test_run.py b/tests/test_run.py
index 329fcb1..cfa658b 100644
--- a/tests/test_run.py
+++ b/tests/test_run.py
@@ -125,7 +125,11 @@ def poll_with_retries_scenario(request, base_scenario):
 
 @pytest.mark.asyncio
 async def test_poll_with_retries(poll_with_retries_scenario):
-    (queue, host, param,) = poll_with_retries_scenario
+    (
+        queue,
+        host,
+        param,
+    ) = poll_with_retries_scenario
     satellite_api = host.run.satellite_api
     satellite_api.responses = [
         param.api_output for _x in range(len(param.api_requests))
@@ -211,7 +215,7 @@ POLLING_LOOP_TEST_CASES = [
         queue_messages=[
             messages.playbook_run_update("host1", "play_id", "Exit status: 123", 0),
             messages.playbook_run_finished(
-                "host1", "play_id", constants.RESULT_FAILURE
+                "host1", "play_id", constants.RESULT_FAILURE, False, 123
             ),
         ],
     ),
@@ -226,7 +230,9 @@ POLLING_LOOP_TEST_CASES = [
         api_requests=[("output", (None, 1, None))],
         queue_messages=[
             messages.playbook_run_update("host1", "play_id", "Exit status: 123", 0),
-            messages.playbook_run_finished("host1", "play_id", constants.RESULT_CANCEL),
+            messages.playbook_run_finished(
+                "host1", "play_id", constants.RESULT_CANCEL, False, 123
+            ),
         ],
     ),
 ]
@@ -243,7 +249,11 @@ def polling_loop_scenario(request, base_scenario):
 
 @pytest.mark.asyncio
 async def test_polling_loop(polling_loop_scenario):
-    (queue, host, param,) = polling_loop_scenario
+    (
+        queue,
+        host,
+        param,
+    ) = polling_loop_scenario
     satellite_api = host.run.satellite_api
     satellite_api.responses = [
         param.api_output for _x in range(len(param.api_requests))
@@ -331,7 +341,10 @@ START_TEST_CASES = [
             messages.playbook_run_finished(
                 "host1", "play_id", constants.RESULT_SUCCESS
             ),
-            messages.playbook_run_completed("play_id", constants.RESULT_SUCCESS,),
+            messages.playbook_run_completed(
+                "play_id",
+                constants.RESULT_SUCCESS,
+            ),
         ],
         FakeLogger()
         .info("Playbook run play_id running as job invocation 123")
@@ -369,7 +382,7 @@ START_TEST_CASES = [
                 0,
             ),
             messages.playbook_run_finished(
-                "host1", "play_id", constants.HOST_RESULT_FAILURE
+                "host1", "play_id", constants.HOST_RESULT_FAILURE, True
             ),
             messages.playbook_run_completed(
                 "play_id",
@@ -390,16 +403,53 @@ START_TEST_CASES = [
                 error=None,
             ),
             dict(
+                error=None,
                 body={
+                    "complete": True,
                     "output": [
                         {
-                            "output": "Error initializing command: Net::SSH::AuthenticationFailed - Authentication failed for user root@centos-katello-3.14-0.example.com\n"  # noqa: E501
+                            "output": "\u001b[0;34mUsing /etc/ansible/ansible.cfg as config file\u001b[0m\n",
+                            "output_type": "stdout",
+                            "timestamp": 1600350676.69755,
+                        },
+                        {
+                            "output": "\n",
+                            "output_type": "stdout",
+                            "timestamp": 1600350677.70155,
+                        },
+                        {
+                            "output": "\r\nPLAY [all] *********************************************************************\n",
+                            "output_type": "stdout",
+                            "timestamp": 1600350677.70175,
+                        },
+                        {
+                            "output": "\r\nTASK [Gathering Facts] *********************************************************\n",
+                            "output_type": "stdout",
+                            "timestamp": 1600350677.70195,
+                        },
+                        {
+                            "output": "\n",
+                            "output_type": "stdout",
+                            "timestamp": 1600350677.70212,
+                        },
+                        {
+                            "output": '\u001b[1;31mfatal: [host1]: UNREACHABLE! => {"changed": false, "msg": "Invalid/incorrect password: Permission denied, please try again.\\r\\nPermission denied, please try again.\\r\\nReceived disconnect from 10.110.156.47 port 22:2: Too many authentication failures\\r\\nDisconnected from 10.110.156.47 port 22", "unreachable": true}\u001b[0m\n',
+                            "output_type": "stdout",
+                            "timestamp": 1600350684.0395,
+                        },
+                        {
+                            "output": "PLAY RECAP *********************************************************************\n\u001b[0;31mhost1\u001b[0m                   : ok=0    changed=0    \u001b[1;31munreachable=1   \u001b[0m failed=0    skipped=0    rescued=0    ignored=0   ",
+                            "output_type": "stdout",
+                            "timestamp": 1600350687.1491,
+                        },
+                        {
+                            "output": "Exit status: 1",
+                            "output_type": "stdout",
+                            "timestamp": 1600350688.1491,
                         },
-                        {"output": "Exit status: EXCEPTION"},
                     ],
-                    "complete": True,
+                    "refresh": False,
                 },
-                error=None,
             ),
         ],
         [
@@ -411,13 +461,16 @@ START_TEST_CASES = [
             messages.playbook_run_update(
                 "host1",
                 "play_id",
-                "Error initializing command: Net::SSH::AuthenticationFailed - Authentication failed for user root@centos-katello-3.14-0.example.com\nExit status: EXCEPTION",  # noqa: E501
+                '\x1b[0;34mUsing /etc/ansible/ansible.cfg as config file\x1b[0m\n\n\r\nPLAY [all] *********************************************************************\n\r\nTASK [Gathering Facts] *********************************************************\n\n\x1b[1;31mfatal: [host1]: UNREACHABLE! => {"changed": false, "msg": "Invalid/incorrect password: Permission denied, please try again.\\r\\nPermission denied, please try again.\\r\\nReceived disconnect from 10.110.156.47 port 22:2: Too many authentication failures\\r\\nDisconnected from 10.110.156.47 port 22", "unreachable": true}\x1b[0m\nPLAY RECAP *********************************************************************\n\x1b[0;31mhost1\x1b[0m                   : ok=0    changed=0    \x1b[1;31munreachable=1   \x1b[0m failed=0    skipped=0    rescued=0    ignored=0   Exit status: 1',
                 0,
             ),
             messages.playbook_run_finished(
-                "host1", "play_id", constants.HOST_RESULT_FAILURE
+                "host1", "play_id", constants.HOST_RESULT_FAILURE, True
+            ),
+            messages.playbook_run_completed(
+                "play_id",
+                constants.RESULT_FAILURE,
             ),
-            messages.playbook_run_completed("play_id", constants.RESULT_FAILURE,),
         ],
         FakeLogger()
         .info("Playbook run play_id running as job invocation 123")
