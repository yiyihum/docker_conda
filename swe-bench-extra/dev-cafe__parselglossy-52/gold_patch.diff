diff --git a/parselglossy/documentation.py b/parselglossy/documentation.py
index f101cb7..0b8ed79 100644
--- a/parselglossy/documentation.py
+++ b/parselglossy/documentation.py
@@ -51,14 +51,19 @@ def documentation_generator(
     """
 
     comment = (
+        ".. raw:: html\n\n"
+        "    <style> .red {color:#aa0060; font-weight:bold; font-size:18px} </style>\n\n"  # noqa: E501
+        ".. role:: red\n\n"
         ".. This documentation was autogenerated using parselglossy."
         " Editing by hand is not recommended.\n"
     )
 
     header_fmt = (
         "{comment:s}\n{markup:s}\n{header:s}\n{markup:s}\n\n"
-        "Keywords without a default value are **required**.\n"
-        "Sections where all keywords have a default value can be omitted.\n"
+        "- Keywords without a default value are **required**.\n"
+        "- Default values are either explicit or computed from the value of other keywords in the input.\n"  # noqa: E501
+        "- Sections where all keywords have a default value can be omitted.\n"
+        "- Predicates, if present, are the functions run to validate user input.\n"
     )
 
     docs = rec_documentation_generator(template=template)
@@ -78,14 +83,26 @@ def document_keyword(keyword: JSONDict) -> str:
   **Type** ``{2:s}``
 """
 
-    doc = kw_fmt.format(keyword["name"], keyword["docstring"], keyword["type"])
+    doc = kw_fmt.format(
+        keyword["name"], keyword["docstring"].replace("\n", " "), keyword["type"]
+    )
 
     if "default" in keyword.keys():
         doc += """
-  **Default** {}""".format(
+  **Default** ``{}``
+""".format(
             keyword["default"]
         )
 
+    if "predicates" in keyword.keys():
+        preds = "\n    ".join(("- ``{}``".format(x) for x in keyword["predicates"]))
+        doc += """
+  **Predicates**
+    {}
+""".format(
+            preds
+        )
+
     return doc
 
 
@@ -106,20 +123,20 @@ def rec_documentation_generator(template, *, level: int = 0) -> str:
 
     keywords = template["keywords"] if "keywords" in template.keys() else []
     if keywords:
-        doc = "\n**Keywords**"
+        docs.append(indent("\n:red:`Keywords`", level))
+
     for k in keywords:
-        doc += document_keyword(k)
+        doc = document_keyword(k)
         docs.extend(indent(doc, level))
 
     sections = template["sections"] if "sections" in template.keys() else []
     if sections:
-        doc = "\n" if level == 0 else "\n\n"
-        doc += "**Sections**"
+        docs.append(indent("\n:red:`Sections`", level))
         fmt = r"""
  :{0:s}: {1:s}
 """
         for s in sections:
-            doc += fmt.format(s["name"], s["docstring"])
+            doc = fmt.format(s["name"], s["docstring"].replace("\n", " "))
             doc += rec_documentation_generator(s, level=level + 1)
             docs.extend(indent(doc, level))
 
