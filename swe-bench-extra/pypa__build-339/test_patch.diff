diff --git a/tests/test_env.py b/tests/test_env.py
index 37acbca..f7be8aa 100644
--- a/tests/test_env.py
+++ b/tests/test_env.py
@@ -1,5 +1,6 @@
 # SPDX-License-Identifier: MIT
 import collections
+import logging
 import os
 import platform
 import shutil
@@ -98,6 +99,24 @@ def test_isolated_env_has_install_still_abstract():
         Env()
 
 
+def test_isolated_env_log(mocker, caplog, test_flit_path):
+    mocker.patch('build.env._subprocess')
+    caplog.set_level(logging.DEBUG)
+
+    builder = build.env.IsolatedEnvBuilder()
+    builder.log('something')
+    with builder as env:
+        env.install(['something'])
+
+    assert [(record.levelname, record.message) for record in caplog.records] == [
+        ('INFO', 'something'),
+        ('INFO', 'Creating venv isolated environment...'),
+        ('INFO', 'Installing packages in isolated environment... (something)'),
+    ]
+    if sys.version_info >= (3, 8):  # stacklevel
+        assert [(record.lineno) for record in caplog.records] == [107, 103, 194]
+
+
 @pytest.mark.isolated
 def test_default_pip_is_never_too_old():
     with build.env.IsolatedEnvBuilder() as env:
diff --git a/tests/test_projectbuilder.py b/tests/test_projectbuilder.py
index 4d58f33..c61871e 100644
--- a/tests/test_projectbuilder.py
+++ b/tests/test_projectbuilder.py
@@ -3,6 +3,7 @@
 
 import copy
 import importlib
+import logging
 import os
 import sys
 import textwrap
@@ -545,3 +546,28 @@ def test_toml_instead_of_tomli(mocker, mock_tomli_not_available, tmp_dir, test_f
     builder.build('sdist', '.')
 
     builder._hook.build_sdist.assert_called_with(os.path.abspath('.'), None)
+
+
+def test_log(mocker, caplog, test_flit_path):
+    mocker.patch('pep517.wrappers.Pep517HookCaller', autospec=True)
+    mocker.patch('build.ProjectBuilder._call_backend', return_value='some_path')
+    caplog.set_level(logging.DEBUG)
+
+    builder = build.ProjectBuilder(test_flit_path)
+    builder.get_requires_for_build('sdist')
+    builder.get_requires_for_build('wheel')
+    builder.prepare('wheel', '.')
+    builder.build('sdist', '.')
+    builder.build('wheel', '.')
+    builder.log('something')
+
+    assert [(record.levelname, record.message) for record in caplog.records] == [
+        ('INFO', 'Getting dependencies for sdist...'),
+        ('INFO', 'Getting dependencies for wheel...'),
+        ('INFO', 'Getting metadata for wheel...'),
+        ('INFO', 'Building sdist...'),
+        ('INFO', 'Building wheel...'),
+        ('INFO', 'something'),
+    ]
+    if sys.version_info >= (3, 8):  # stacklevel
+        assert [(record.lineno) for record in caplog.records] == [305, 305, 338, 368, 368, 562]
