diff --git a/tests/CLI/modules/cdn_tests.py b/tests/CLI/modules/cdn_tests.py
index c0a96fee..a7dfa340 100644
--- a/tests/CLI/modules/cdn_tests.py
+++ b/tests/CLI/modules/cdn_tests.py
@@ -4,7 +4,9 @@
 
     :license: MIT, see LICENSE for more details.
 """
+import datetime
 import json
+from unittest import mock as mock
 
 from SoftLayer.CLI import exceptions
 from SoftLayer import testing
@@ -21,27 +23,22 @@ def test_list_accounts(self):
                            'domain': 'test.example.com',
                            'origin': '1.1.1.1',
                            'status': 'CNAME_CONFIGURATION',
-                           'unique_id': '9934111111111',
+                           'unique_id': '11223344',
                            'vendor': 'akamai'}]
                          )
 
-    def test_detail_account(self):
+    @mock.patch('SoftLayer.utils.days_to_datetime')
+    def test_detail_account(self, mock_now):
+        mock_now.return_value = datetime.datetime(2020, 1, 1)
         result = self.run_command(['cdn', 'detail', '--history=30', '1245'])
 
         self.assert_no_fail(result)
-        self.assertEqual(json.loads(result.output),
-                         {'hit_radio': '0.0 %',
-                          'hostname': 'test.example.com',
-                          'origin': '1.1.1.1',
-                          'origin_type': 'HOST_SERVER',
-                          'path': '/',
-                          'protocol': 'HTTP',
-                          'provider': 'akamai',
-                          'status': 'CNAME_CONFIGURATION',
-                          'total_bandwidth': '0.0 GB',
-                          'total_hits': '0',
-                          'unique_id': '9934111111111'}
-                         )
+        api_results = json.loads(result.output)
+        self.assertEqual(api_results['hit_ratio'], '2.0 %')
+        self.assertEqual(api_results['total_bandwidth'], '1.0 GB')
+        self.assertEqual(api_results['total_hits'], 3)
+        self.assertEqual(api_results['hostname'], 'test.example.com')
+        self.assertEqual(api_results['protocol'], 'HTTP')
 
     def test_purge_content(self):
         result = self.run_command(['cdn', 'purge', '1234',
@@ -122,7 +119,7 @@ def test_edit_cache(self):
         self.assertEqual('include: test', header_result['Cache key optimization'])
 
     def test_edit_cache_by_uniqueId(self):
-        result = self.run_command(['cdn', 'edit', '9934111111111', '--cache', 'include-specified', '--cache', 'test'])
+        result = self.run_command(['cdn', 'edit', '11223344', '--cache', 'include-specified', '--cache', 'test'])
         self.assert_no_fail(result)
         header_result = json.loads(result.output)
         self.assertEqual('include: test', header_result['Cache key optimization'])
diff --git a/tests/managers/cdn_tests.py b/tests/managers/cdn_tests.py
index 7e56f81a..b0e641c6 100644
--- a/tests/managers/cdn_tests.py
+++ b/tests/managers/cdn_tests.py
@@ -4,6 +4,8 @@
 
     :license: MIT, see LICENSE for more details.
 """
+import datetime
+from unittest import mock as mock
 
 from SoftLayer import fixtures
 from SoftLayer.managers import cdn
@@ -28,7 +30,9 @@ def test_detail_cdn(self):
                                 'listDomainMappingByUniqueId',
                                 args=args)
 
-    def test_detail_usage_metric(self):
+    @mock.patch('SoftLayer.utils.days_to_datetime')
+    def test_detail_usage_metric(self, mock_now):
+        mock_now.return_value = datetime.datetime(2020, 1, 1)
         self.cdn_client.get_usage_metrics(12345, history=30, frequency="aggregate")
 
         args = (12345,
@@ -39,6 +43,15 @@ def test_detail_usage_metric(self):
                                 'getMappingUsageMetrics',
                                 args=args)
 
+    # Does this still work in 2038 ? https://github.com/softlayer/softlayer-python/issues/1764 for context
+    @mock.patch('SoftLayer.utils.days_to_datetime')
+    def test_detail_usage_metric_future(self, mock_now):
+        mock_now.return_value = datetime.datetime(2040, 1, 1)
+        self.assertRaises(
+            OverflowError,
+            self.cdn_client.get_usage_metrics, 12345, history=30, frequency="aggregate"
+        )
+
     def test_get_origins(self):
         self.cdn_client.get_origins("12345")
         self.assert_called_with('SoftLayer_Network_CdnMarketplace_Configuration_Mapping_Path',
@@ -105,7 +118,7 @@ def test_purge_content(self):
                                 args=args)
 
     def test_cdn_edit(self):
-        identifier = '9934111111111'
+        identifier = '11223344'
         header = 'www.test.com'
         result = self.cdn_client.edit(identifier, header=header)
 
@@ -116,7 +129,7 @@ def test_cdn_edit(self):
             'SoftLayer_Network_CdnMarketplace_Configuration_Mapping',
             'updateDomainMapping',
             args=({
-                'uniqueId': '9934111111111',
+                'uniqueId': '11223344',
                 'originType': 'HOST_SERVER',
                 'protocol': 'HTTP',
                 'path': '/',
