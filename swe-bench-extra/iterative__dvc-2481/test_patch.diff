diff --git a/tests/func/test_scm.py b/tests/func/test_scm.py
--- a/tests/func/test_scm.py
+++ b/tests/func/test_scm.py
@@ -2,12 +2,11 @@
 
 import os
 
-import pytest
 from git import Repo
 
+from dvc.system import System
 from dvc.utils.compat import str  # noqa: F401
 from dvc.scm import SCM, NoSCM, Git
-from dvc.scm.base import FileNotInTargetSubdirError
 
 from tests.basic_env import TestDir, TestGit, TestGitSubmodule
 from tests.utils import get_gitignore_content
@@ -97,6 +96,14 @@ def test_get_gitignore(self, git, repo_dir):
         assert entry == "/dir"
         assert gitignore == os.path.join(repo_dir._root_dir, Git.GITIGNORE)
 
+    def test_get_gitignore_symlink(self, git, repo_dir):
+        link = os.path.join(repo_dir.root_dir, "link")
+        target = os.path.join(repo_dir.root_dir, repo_dir.DATA_SUB)
+        System.symlink(target, link)
+        entry, gitignore = Git(repo_dir._root_dir)._get_gitignore(link)
+        assert entry == "/link"
+        assert gitignore == os.path.join(repo_dir.root_dir, Git.GITIGNORE)
+
     def test_get_gitignore_subdir(self, git, repo_dir):
         data_dir = os.path.join(
             repo_dir._root_dir, os.path.join("dir1", "file1")
@@ -116,35 +123,6 @@ def test_get_gitignore_subdir(self, git, repo_dir):
             repo_dir._root_dir, "dir1", Git.GITIGNORE
         )
 
-    def test_get_gitignore_ignorefile_dir(self, git, repo_dir):
-        git = Git(repo_dir._root_dir)
-
-        file_double_dir = os.path.join("dir1", "dir2", "file1")
-        data_dir1 = os.path.join(repo_dir._root_dir, file_double_dir)
-        dir1_real1 = os.path.realpath("dir1")
-        entry, gitignore = git._get_gitignore(data_dir1, dir1_real1)
-        assert entry == "/dir2/file1"
-        gitignore1 = os.path.join(repo_dir._root_dir, "dir1", Git.GITIGNORE)
-        assert gitignore == gitignore1
-
-        triple_dir = os.path.join("dir1", "dir2", "dir3")
-        data_dir2 = os.path.join(repo_dir._root_dir, triple_dir)
-        dir1_real2 = os.path.realpath("dir1")
-        entry, gitignore = git._get_gitignore(data_dir2, dir1_real2)
-        assert entry == "/dir2/dir3"
-        gitignore2 = os.path.join(repo_dir._root_dir, "dir1", Git.GITIGNORE)
-        assert gitignore == gitignore2
-
-    def test_get_gitignore_ignorefile_dir_upper_level(self, git, repo_dir):
-        git = Git(repo_dir._root_dir)
-
-        file_double_dir = os.path.join("dir1", "dir2", "file1")
-        data_dir1 = os.path.join(repo_dir._root_dir, file_double_dir)
-        ignore_file_dir = os.path.realpath(os.path.join("aa", "bb"))
-
-        with pytest.raises(FileNotInTargetSubdirError):
-            git._get_gitignore(data_dir1, ignore_file_dir)
-
     def test_gitignore_should_end_with_newline(self, git, repo_dir):
         git = Git(repo_dir._root_dir)
 
