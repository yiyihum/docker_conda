diff --git a/tests/handlers/test_alb.py b/tests/handlers/test_alb.py
index 3804f9d..e75d2d9 100644
--- a/tests/handlers/test_alb.py
+++ b/tests/handlers/test_alb.py
@@ -372,3 +372,40 @@ def test_aws_alb_response_extra_mime_types():
         "headers": {"content-type": content_type.decode()},
         "body": utf_res_body,
     }
+
+
+@pytest.mark.parametrize("multi_value_headers_enabled", (True, False))
+def test_aws_alb_exclude_headers(multi_value_headers_enabled) -> None:
+    async def app(scope, receive, send):
+        await send(
+            {
+                "type": "http.response.start",
+                "status": 200,
+                "headers": [
+                    [b"content-type", b"text/plain; charset=utf-8"],
+                    [b"x-custom-header", b"test"],
+                ],
+            }
+        )
+        await send({"type": "http.response.body", "body": b"Hello, world!"})
+
+    handler = Mangum(app, lifespan="off", exclude_headers=["x-custom-header"])
+    event = get_mock_aws_alb_event(
+        "GET", "/test", {}, None, None, False, multi_value_headers_enabled
+    )
+    response = handler(event, {})
+
+    expected_response = {
+        "statusCode": 200,
+        "isBase64Encoded": False,
+        "body": "Hello, world!",
+    }
+    if multi_value_headers_enabled:
+        expected_response["multiValueHeaders"] = {
+            "content-type": ["text/plain; charset=utf-8"],
+        }
+    else:
+        expected_response["headers"] = {
+            "content-type": "text/plain; charset=utf-8",
+        }
+    assert response == expected_response
diff --git a/tests/handlers/test_api_gateway.py b/tests/handlers/test_api_gateway.py
index 1231bb0..e2458c2 100644
--- a/tests/handlers/test_api_gateway.py
+++ b/tests/handlers/test_api_gateway.py
@@ -401,3 +401,31 @@ def test_aws_api_gateway_response_extra_mime_types():
         "multiValueHeaders": {},
         "body": utf_res_body,
     }
+
+
+def test_aws_api_gateway_exclude_headers():
+    async def app(scope, receive, send):
+        await send(
+            {
+                "type": "http.response.start",
+                "status": 200,
+                "headers": [
+                    [b"content-type", b"text/plain; charset=utf-8"],
+                    [b"x-custom-header", b"test"],
+                ],
+            }
+        )
+        await send({"type": "http.response.body", "body": b"Hello world"})
+
+    event = get_mock_aws_api_gateway_event("GET", "/test", {}, None, False)
+
+    handler = Mangum(app, lifespan="off", exclude_headers=["X-CUSTOM-HEADER"])
+
+    response = handler(event, {})
+    assert response == {
+        "statusCode": 200,
+        "isBase64Encoded": False,
+        "headers": {"content-type": b"text/plain; charset=utf-8".decode()},
+        "multiValueHeaders": {},
+        "body": "Hello world",
+    }
diff --git a/tests/handlers/test_lambda_at_edge.py b/tests/handlers/test_lambda_at_edge.py
index ffeb9bc..563e144 100644
--- a/tests/handlers/test_lambda_at_edge.py
+++ b/tests/handlers/test_lambda_at_edge.py
@@ -342,3 +342,34 @@ def test_aws_lambda_at_edge_response_extra_mime_types():
         },
         "body": utf_res_body,
     }
+
+
+def test_aws_lambda_at_edge_exclude_():
+    async def app(scope, receive, send):
+        await send(
+            {
+                "type": "http.response.start",
+                "status": 200,
+                "headers": [
+                    [b"content-type", b"text/plain; charset=utf-8"],
+                    [b"x-custom-header", b"test"],
+                ],
+            }
+        )
+        await send({"type": "http.response.body", "body": b"Hello world"})
+
+    event = mock_lambda_at_edge_event("GET", "/test", {}, None, False)
+
+    handler = Mangum(app, lifespan="off", exclude_headers=["x-custom-header"])
+
+    response = handler(event, {})
+    assert response == {
+        "status": 200,
+        "isBase64Encoded": False,
+        "headers": {
+            "content-type": [
+                {"key": "content-type", "value": b"text/plain; charset=utf-8".decode()}
+            ]
+        },
+        "body": "Hello world",
+    }
diff --git a/tests/test_adapter.py b/tests/test_adapter.py
index 6b50fd6..de36049 100644
--- a/tests/test_adapter.py
+++ b/tests/test_adapter.py
@@ -14,6 +14,7 @@ def test_default_settings():
     assert handler.lifespan == "auto"
     assert handler.config["api_gateway_base_path"] == "/"
     assert sorted(handler.config["text_mime_types"]) == sorted(DEFAULT_TEXT_MIME_TYPES)
+    assert handler.config["exclude_headers"] == []
 
 
 @pytest.mark.parametrize(
