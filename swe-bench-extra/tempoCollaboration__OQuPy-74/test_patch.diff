diff --git a/tests/coverage/process_tensor_test.py b/tests/coverage/process_tensor_test.py
index 32879e5..89acbef 100644
--- a/tests/coverage/process_tensor_test.py
+++ b/tests/coverage/process_tensor_test.py
@@ -1,4 +1,4 @@
-# Copyright 2022 The TEMPO Collaboration
+# Copyright 2022 The oqupy Collaboration
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
@@ -17,43 +17,57 @@ Tests for the time_evovling_mpo.process_tensor module.
 
 import pytest
 
-import oqupy as tempo
+import oqupy
 
-
-TEMP_FILE = "tests/data/temp.processTensor"
+TEMP_FILE_1 = "./tests/data/temp1.hdf5"
+TEMP_FILE_2 = "./tests/data/temp2.hdf5"
 
 # -- prepare a process tensor -------------------------------------------------
 
-system = tempo.System(tempo.operators.sigma("x"))
-initial_state = tempo.operators.spin_dm("z+")
-correlations = tempo.PowerLawSD(
+system = oqupy.System(oqupy.operators.sigma("x"))
+initial_state = oqupy.operators.spin_dm("z+")
+correlations = oqupy.PowerLawSD(
     alpha=0.3,
     zeta=1.0,
     cutoff=5.0,
     cutoff_type="exponential",
     temperature=0.2,
     name="ohmic")
-bath = tempo.Bath(
-    0.5*tempo.operators.sigma("z"),
+bath1 = oqupy.Bath(
+    0.5*oqupy.operators.sigma("z"),
+    correlations,
+    name="phonon bath")
+bath2 = oqupy.Bath(
+    0.5*oqupy.operators.sigma("x"),
     correlations,
     name="phonon bath")
-tempo_params = tempo.TempoParameters(
+tempo_params = oqupy.TempoParameters(
     dt=0.1,
     dkmax=5,
     epsrel=10**(-5))
-pt = tempo.pt_tempo_compute(
-    bath,
+pt1 = oqupy.pt_tempo_compute(
+    bath1,
+    start_time=0.0,
+    end_time=0.3,
+    parameters=tempo_params)
+pt2 = oqupy.pt_tempo_compute(
+    bath2,
     start_time=0.0,
-    end_time=1.0,
+    end_time=0.3,
     parameters=tempo_params)
-pt.export(TEMP_FILE, overwrite=True)
-del pt
+pt1.export(TEMP_FILE_1, overwrite=True)
+pt2.export(TEMP_FILE_2, overwrite=True)
+del pt1
+del pt2
 
 
 def test_process_tensor():
-    pt = tempo.import_process_tensor(TEMP_FILE, process_tensor_type="simple")
-    str(pt)
-    pt.get_bond_dimensions()
+    pt1 = oqupy.import_process_tensor(TEMP_FILE_1, process_tensor_type="simple")
+    str(pt1)
+    pt1.get_bond_dimensions()
     with pytest.raises(OSError):
-        pt.export(TEMP_FILE)
+        pt1.export(TEMP_FILE_1)
 
+    pt2 = oqupy.import_process_tensor(TEMP_FILE_2, process_tensor_type="file")
+    str(pt2)
+    pt2.get_bond_dimensions()
