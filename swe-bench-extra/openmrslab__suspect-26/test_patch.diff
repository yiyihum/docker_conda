diff --git a/tests/test_mrs/test_io.py b/tests/test_mrs/test_io.py
index d80a0a1..240855c 100644
--- a/tests/test_mrs/test_io.py
+++ b/tests/test_mrs/test_io.py
@@ -6,9 +6,25 @@ import builtins
 from unittest.mock import patch
 import os
 
+from suspect.io._common import complex_array_from_iter
+
 import numpy
 
 
+def test_complex_from_iter():
+    float_list = [1.0, 0.0, 0.0, 1.0]
+    array = complex_array_from_iter(iter(float_list))
+    assert array.shape == (2,)
+    assert array[0] == 1
+    assert array[1] == 1j
+
+
+def test_shaped_complex_from_iter():
+    float_list = [1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0]
+    array = complex_array_from_iter(iter(float_list), shape=[2, 2])
+    assert array.shape == (2, 2)
+
+
 def test_write_dpt():
     data = suspect.MRSData(numpy.zeros(1), 1e-3, 123.456)
     mock = unittest.mock.mock_open()
diff --git a/tests/test_mrs/test_processing.py b/tests/test_mrs/test_processing.py
index 40ea9c3..9bf35ef 100644
--- a/tests/test_mrs/test_processing.py
+++ b/tests/test_mrs/test_processing.py
@@ -1,6 +1,9 @@
 import suspect
 
 import numpy
+import warnings
+
+warnings.filterwarnings('error')
 
 
 def test_null_transform():
@@ -81,6 +84,24 @@ def test_gaussian_denoising():
     numpy.testing.assert_almost_equal(data, denoised_data)
 
 
+def test_svd_dtype():
+    data = numpy.ones(128, dtype=complex)
+    denoised_data = suspect.processing.denoising.svd(data, 8)
+    assert data.dtype == denoised_data.dtype
+
+
+def test_sliding_window_dtype():
+    data = numpy.ones(128, dtype=complex)
+    denoised_data = suspect.processing.denoising.sliding_window(data, 30)
+    assert data.dtype == denoised_data.dtype
+
+
+def test_sliding_gaussian_dtype():
+    data = numpy.ones(128, dtype=complex)
+    denoised_data = suspect.processing.denoising.sliding_gaussian(data, 30)
+    assert data.dtype == denoised_data.dtype
+
+
 def test_water_suppression():
     data = suspect.io.load_twix("tests/test_data/siemens/twix_vb.dat")
     channel_combined_data = data.inherit(numpy.average(data, axis=1))
