diff --git a/py/desitransfer/common.py b/py/desitransfer/common.py
index 0b9bb1b..6eba487 100644
--- a/py/desitransfer/common.py
+++ b/py/desitransfer/common.py
@@ -81,6 +81,35 @@ def stamp(zone='US/Pacific'):
     return n.astimezone(tz).strftime('%Y-%m-%d %H:%M:%S %Z')
 
 
+def ensure_scratch(primary, alternate):
+    """Try an alternate temporary directory if the primary temporary directory
+    is unavilable.
+
+    Parameters
+    ----------
+    primary : :class:`str`
+        Primary temporary directory.
+    alternate : :class:`list`
+        A list of alternate directories.
+
+    Returns
+    -------
+    The first available temporary directory found.
+    """
+    if not isinstance(alternate, list):
+        alternate = [alternate]
+    try:
+        l = os.listdir(primary)
+    except FileNotFoundError:
+        for a in alternate:
+            try:
+                l = os.listdir(a)
+            except FileNotFoundError:
+                continue
+            return a
+    return primary
+
+
 def yesterday():
     """Yesterday's date in DESI "NIGHT" format, YYYYMMDD.
     """
diff --git a/py/desitransfer/daemon.py b/py/desitransfer/daemon.py
index a3b5813..7113f27 100644
--- a/py/desitransfer/daemon.py
+++ b/py/desitransfer/daemon.py
@@ -24,7 +24,7 @@ from socket import getfqdn
 from tempfile import TemporaryFile
 from pkg_resources import resource_filename
 from desiutil.log import get_logger
-from .common import dir_perm, file_perm, rsync, yesterday, empty_rsync
+from .common import dir_perm, file_perm, rsync, yesterday, empty_rsync, ensure_scratch
 from .status import TransferStatus
 from . import __version__ as dtVersion
 
@@ -94,7 +94,7 @@ class TransferDaemon(object):
                                             self.conf[s].getlist('expected_files'),
                                             self.conf[s]['checksum_file'])
                             for s in self.sections]
-        self.scratch = self.conf['common']['scratch']
+        self.scratch = ensure_scratch(self.conf['common']['scratch'], self.conf['common']['alternate_scratch'].split(','))
         self._configure_log(options.debug)
         return
 
@@ -365,7 +365,7 @@ The DESI Collaboration Account
             #
             pass
         else:
-            log.error('rsync problem detected!')
+            log.error('rsync problem detected for %s/%s!', night, exposure)
             log.debug("status.update('%s', '%s', 'rsync', failure=True)", night, exposure)
             status.update(night, exposure, 'rsync', failure=True)
 
diff --git a/py/desitransfer/daily.py b/py/desitransfer/daily.py
index 642825d..0ce4c30 100644
--- a/py/desitransfer/daily.py
+++ b/py/desitransfer/daily.py
@@ -11,6 +11,7 @@ import subprocess as sub
 import sys
 import time
 from argparse import ArgumentParser
+from pkg_resources import resource_filename
 from .common import dir_perm, file_perm, rsync, stamp
 from . import __version__ as dtVersion
 
@@ -24,20 +25,26 @@ class DailyDirectory(object):
         Source directory.
     destination : :class:`str`
         Desitination directory.
+    extra : :class:`list`, optional
+        Extra :command:`rsync` arguments to splice into command.
+    dirlinks : :class:`bool`, optional
+        If ``True``, convert source links into linked directory.
     """
 
-    def __init__(self, source, destination):
+    def __init__(self, source, destination, extra=[], dirlinks=False):
         self.source = source
         self.destination = destination
         self.log = self.destination + '.log'
+        self.extra = extra
+        self.dirlinks = dirlinks
 
-    def transfer(self, apache=True):
+    def transfer(self, permission=True):
         """Data transfer operations for a single destination directory.
 
         Parameters
         ----------
-        apache : :class:`bool`
-            If ``True`` set file ACLs for Apache httpd access.
+        permission : :class:`bool`, optional
+            If ``True``, set permissions for DESI collaboration access.
 
         Returns
         -------
@@ -45,6 +52,11 @@ class DailyDirectory(object):
             The status returned by :command:`rsync`.
         """
         cmd = rsync(self.source, self.destination)
+        if not self.dirlinks:
+            cmd[cmd.index('--copy-dirlinks')] = '--links'
+        if self.extra:
+            for i, e in enumerate(self.extra):
+                cmd.insert(cmd.index('--omit-dir-times') + 1 + i, e)
         with open(self.log, 'ab') as l:
             l.write(("DEBUG: desi_daily_transfer %s\n" % dtVersion).encode('utf-8'))
             l.write(("DEBUG: %s\n" % stamp()).encode('utf-8'))
@@ -54,8 +66,8 @@ class DailyDirectory(object):
             status = p.wait()
         if status == 0:
             self.lock()
-            if apache:
-                s = self.apache()
+            if permission:
+                s = self.permission()
         return status
 
     def lock(self):
@@ -66,8 +78,8 @@ class DailyDirectory(object):
             for f in filenames:
                 os.chmod(os.path.join(dirpath, f), file_perm)
 
-    def apache(self):
-        """Grant apache/www read access.
+    def permission(self):
+        """Set permissions for DESI collaboration access.
 
         In theory this should not change any permissions set by
         :meth:`~DailyDirectory.lock`.
@@ -90,16 +102,20 @@ def _config():
     """Wrap configuration so that module can be imported without
     environment variables set.
     """
+    nightwatch_exclude = resource_filename('desitransfer',
+                                           'data/desi_nightwatch_transfer_exclude.txt')
     engineering = os.path.realpath(os.path.join(os.environ['DESI_ROOT'],
                                                 'engineering'))
     spectro = os.path.realpath(os.path.join(os.environ['DESI_ROOT'],
                                             'spectro'))
     return [DailyDirectory('/exposures/desi/sps',
                            os.path.join(engineering, 'spectrograph', 'sps')),
-            # DailyDirectory('/exposures/nightwatch',
-            #                os.path.join(spectro, 'nightwatch', 'kpno')),
+            DailyDirectory('/exposures/nightwatch',
+                           os.path.join(spectro, 'nightwatch', 'kpno'),
+                           extra=['--exclude-from', nightwatch_exclude]),
             DailyDirectory('/data/dts/exposures/lost+found',
-                           os.path.join(spectro, 'staging', 'lost+found')),
+                           os.path.join(spectro, 'staging', 'lost+found'),
+                           dirlinks=True),
             # DailyDirectory('/data/fxc',
             #                os.path.join(engineering, 'fxc')),
             DailyDirectory('/data/focalplane/logs/calib_logs',
@@ -127,8 +143,6 @@ def _options(*args):
     """
     desc = "Transfer non-critical DESI data from KPNO to NERSC."
     prsr = ArgumentParser(description=desc)
-    prsr.add_argument('-A', '--no-apache', action='store_false', dest='apache',
-                      help='Do not set ACL for Apache httpd access.')
     # prsr.add_argument('-b', '--backup', metavar='H', type=int, default=20,
     #                   help='UTC time in hours to trigger HPSS backups (default %(default)s:00 UTC).')
     # prsr.add_argument('-d', '--debug', action='store_true',
@@ -142,8 +156,8 @@ def _options(*args):
                       help="Exit the script when FILE is detected (default %(default)s).")
     # prsr.add_argument('-n', '--nersc', default='cori', metavar='NERSC_HOST',
     #                   help="Trigger DESI pipeline on this NERSC system (default %(default)s).")
-    # prsr.add_argument('-P', '--no-pipeline', action='store_false', dest='pipeline',
-    #                   help="Only transfer files, don't start the DESI pipeline.")
+    prsr.add_argument('-P', '--no-permission', action='store_false', dest='permission',
+                      help='Do not set permissions for DESI collaboration access.')
     prsr.add_argument('-s', '--sleep', metavar='H', type=int, default=24,
                       help='In daemon mode, sleep H hours before checking for new data (default %(default)s hours).')
     # prsr.add_argument('-S', '--shadow', action='store_true',
@@ -167,7 +181,7 @@ def main():
             print("INFO: %s detected, shutting down daily transfer script." % options.kill)
             return 0
         for d in _config():
-            status = d.transfer(apache=options.apache)
+            status = d.transfer(permission=options.permission)
             if status != 0:
                 print("ERROR: rsync problem detected for {0.source} -> {0.destination}!".format(d))
                 return status
