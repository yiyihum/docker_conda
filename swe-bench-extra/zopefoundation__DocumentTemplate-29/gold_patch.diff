diff --git a/CHANGES.rst b/CHANGES.rst
index 570eeab..86e2a22 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,10 +4,21 @@ Changelog
 3.0b5 (unreleased)
 ------------------
 
+- Fix regression with exception handling in ``<dtml-except>`` with Python 2.
+  (`#25 <https://github.com/zopefoundation/DocumentTemplate/issues/25>`_)
+
 - Stabilized TreeTag rendering for objects without ``_p_oid`` values.
+  (`#26 <https://github.com/zopefoundation/DocumentTemplate/issues/26>`_)
 
 - Added support for Python 3.7.
 
+- Remove support for string exceptions in ``<dtml-except>``.
+  (`#29 <https://github.com/zopefoundation/DocumentTemplate/pull/29>`_)
+
+- Fix handling of parsing ``ParseError``s in Python 3.
+  (`#29 <https://github.com/zopefoundation/DocumentTemplate/pull/29>`_)
+
+
 3.0b4 (2018-07-12)
 ------------------
 
diff --git a/src/DocumentTemplate/DT_String.py b/src/DocumentTemplate/DT_String.py
index 1b0589d..2a0a783 100644
--- a/src/DocumentTemplate/DT_String.py
+++ b/src/DocumentTemplate/DT_String.py
@@ -175,7 +175,7 @@ class String(object):
             try:
                 tag, args, command, coname = self._parseTag(mo)
             except ParseError as m:
-                self.parse_error(m[0], m[1], text, l_)
+                self.parse_error(m.args[0], m.args[1], text, l_)
 
             s = text[start:l_]
             if s:
@@ -195,7 +195,7 @@ class String(object):
                         r = r.simple_form
                     result.append(r)
                 except ParseError as m:
-                    self.parse_error(m[0], tag, text, l_)
+                    self.parse_error(m.args[0], tag, text, l_)
 
             mo = tagre.search(text, start)
 
@@ -234,7 +234,7 @@ class String(object):
             try:
                 tag, args, command, coname = self._parseTag(mo, scommand, sa)
             except ParseError as m:
-                self.parse_error(m[0], m[1], text, l_)
+                self.parse_error(m.args[0], m.args[1], text, l_)
 
             if command:
                 start = l_ + len(tag)
@@ -264,7 +264,7 @@ class String(object):
                             r = r.simple_form
                         result.append(r)
                     except ParseError as m:
-                        self.parse_error(m[0], stag, text, l_)
+                        self.parse_error(m.args[0], stag, text, l_)
 
                     return start
 
@@ -279,7 +279,7 @@ class String(object):
             try:
                 tag, args, command, coname = self._parseTag(mo, scommand, sa)
             except ParseError as m:
-                self.parse_error(m[0], m[1], text, l_)
+                self.parse_error(m.args[0], m.args[1], text, l_)
 
             start = l_ + len(tag)
             if command:
diff --git a/src/DocumentTemplate/DT_Try.py b/src/DocumentTemplate/DT_Try.py
index 3a2bfbd..972eb56 100644
--- a/src/DocumentTemplate/DT_Try.py
+++ b/src/DocumentTemplate/DT_Try.py
@@ -14,7 +14,7 @@
 import sys
 import traceback
 
-from io import StringIO
+from six import StringIO
 from DocumentTemplate.DT_Util import ParseError, parse_params, render_blocks
 from DocumentTemplate.DT_Util import namespace, InstanceDict
 from DocumentTemplate.DT_Return import DTReturn
@@ -154,10 +154,7 @@ class Try(object):
         except Exception:
             # but an error occurs.. save the info.
             t, v = sys.exc_info()[:2]
-            if isinstance(t, str):
-                errname = t
-            else:
-                errname = t.__name__
+            errname = t.__name__
 
             handler = self.find_handler(t)
 
@@ -196,12 +193,6 @@ class Try(object):
 
     def find_handler(self, exception):
         "recursively search for a handler for a given exception"
-        if isinstance(exception, str):
-            for e, h in self.handlers:
-                if exception == e or e == '':
-                    return h
-            else:
-                return None
         for e, h in self.handlers:
             if (e == exception.__name__ or
                     e == '' or self.match_base(exception, e)):
diff --git a/tox.ini b/tox.ini
index 573cf02..d3f6891 100644
--- a/tox.ini
+++ b/tox.ini
@@ -30,7 +30,7 @@ commands =
     coverage combine
     coverage html
     coverage xml
-    coverage report --fail-under=67
+    coverage report --fail-under=71
 
 [testenv:flake8]
 basepython = python3.6
