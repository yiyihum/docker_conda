diff --git a/doc/changes.rst b/doc/changes.rst
index 8697970..93581d9 100644
--- a/doc/changes.rst
+++ b/doc/changes.rst
@@ -8,9 +8,14 @@ Change Log
 * :command:`desiInstall` uses desihub location of simqso fork (commit e963344_).
 * Allow :command:`desiInstall` to remove permission-locked directories;
   suppress certain :command:`pip` warnings (PR `#185`_).
+* Allow :command:`desiInstall` to compile code in certain branch installs (PR `#188`_).
+* Add `gpu_specter`_ to known packages (PR `#189`_).
 
 .. _e963344: https://github.com/desihub/desiutil/commit/e963344cd072255174187d2bd6da72d085745abd
 .. _`#185`: https://github.com/desihub/desiutil/pull/185
+.. _`#188`: https://github.com/desihub/desiutil/pull/188
+.. _`#189`: https://github.com/desihub/desiutil/pull/189
+.. _`gpu_specter`: https://github.com/desihub/gpu_specter
 
 3.2.5 (2022-01-20)
 ------------------
diff --git a/doc/desiInstall.rst b/doc/desiInstall.rst
index e433192..8c926f0 100644
--- a/doc/desiInstall.rst
+++ b/doc/desiInstall.rst
@@ -322,6 +322,23 @@ not bundled with the code.  The script should download data *directly* to
 with :command:`desiInstall` and unit tests.  Note that here are other, better ways to
 install and manipulate data that is bundled *with* a Python package.
 
+Compile in Branch Installs
+--------------------------
+
+In a few cases (fiberassign_, specex_) code needs to be compiled even when
+installing a branch.  If :command:`desiInstall` detects a branch install *and*
+the script ``etc/product_compile.sh`` exists, :command:`desiInstall` will run this
+script, supplying the Python executable path as a single command-line argument.
+The script itself is intended to be a thin wrapper on *e.g.*::
+
+    #!/bin/bash
+    py=$1
+    ${py} setup.py build_ext --inplace
+
+
+.. _fiberassign: https://github.com/desihub/fiberassign
+.. _specex: https://github.com/desihub/specex
+
 Fix Permissions
 ---------------
 
diff --git a/py/desiutil/install.py b/py/desiutil/install.py
index 28c92ad..7dfc4cf 100644
--- a/py/desiutil/install.py
+++ b/py/desiutil/install.py
@@ -910,6 +910,33 @@ class DesiInstall(object):
                     raise DesiInstallException(message)
         return
 
+    def compile_branch(self):
+        """Certain packages need C/C++ code compiled even for a branch install.
+        """
+        if self.is_branch:
+            compile_script = os.path.join(self.install_dir, 'etc',
+                                          '{0}_compile.sh'.format(self.baseproduct))
+            if os.path.exists(compile_script):
+                self.log.debug("Detected compile script: %s.", compile_script)
+                if self.options.test:
+                    self.log.debug('Test Mode. Skipping compile script.')
+                else:
+                    current_dir = os.getcwd()
+                    self.log.debug("os.chdir('%s')", self.install_dir)
+                    os.chdir(self.install_dir)
+                    proc = Popen([compile_script, sys.executable], universal_newlines=True,
+                                 stdout=PIPE, stderr=PIPE)
+                    out, err = proc.communicate()
+                    status = proc.returncode
+                    self.log.debug(out)
+                    self.log.debug("os.chdir('%s')", current_dir)
+                    os.chdir(current_dir)
+                    if status != 0 and len(err) > 0:
+                        message = "Error compiling code: {0}".format(err)
+                        self.log.critical(message)
+                        raise DesiInstallException(message)
+        return
+
     def verify_bootstrap(self):
         """Make sure that desiutil/desiInstall was installed with
         an explicit Python executable path.
@@ -1027,6 +1054,7 @@ class DesiInstall(object):
             self.prepare_environment()
             self.install()
             self.get_extra()
+            self.compile_branch()
             self.verify_bootstrap()
             self.permissions()
         except DesiInstallException:
