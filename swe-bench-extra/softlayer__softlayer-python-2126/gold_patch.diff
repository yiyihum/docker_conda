diff --git a/SoftLayer/CLI/formatting.py b/SoftLayer/CLI/formatting.py
index 9c32318d..fb91ded6 100644
--- a/SoftLayer/CLI/formatting.py
+++ b/SoftLayer/CLI/formatting.py
@@ -259,8 +259,7 @@ def no_going_back(confirmation):
     if not confirmation:
         confirmation = 'yes'
 
-    prompt = ('This action cannot be undone! Type "%s" or press Enter '
-              'to abort' % confirmation)
+    prompt = f"This action cannot be undone! Type '{confirmation}' or press Enter to abort"
 
     ans = click.prompt(prompt, default='', show_default=False)
     if ans.lower() == str(confirmation):
diff --git a/SoftLayer/CLI/hardware/update_firmware.py b/SoftLayer/CLI/hardware/update_firmware.py
index 6b634376..96e82b9b 100644
--- a/SoftLayer/CLI/hardware/update_firmware.py
+++ b/SoftLayer/CLI/hardware/update_firmware.py
@@ -12,15 +12,23 @@
 
 @click.command(cls=SoftLayer.CLI.command.SLCommand, )
 @click.argument('identifier')
+@click.option('-i', '--ipmi', is_flag=True, help="Update IPMI firmware")
+@click.option('-r', '--raid', is_flag=True, help="Update RAID firmware")
+@click.option('-b', '--bios', is_flag=True, help="Update BIOS firmware")
+@click.option('-d', '--harddrive', is_flag=True, help="Update Hard Drives firmware")
+@click.option('-n', '--network', is_flag=True, help="Update Network Card firmware")
 @environment.pass_env
-def cli(env, identifier):
-    """Update server firmware."""
+def cli(env, identifier, ipmi, raid, bios, harddrive, network):
+    """Update server firmware. By default will update all available server components."""
 
     mgr = SoftLayer.HardwareManager(env.client)
     hw_id = helpers.resolve_id(mgr.resolve_ids, identifier, 'hardware')
-    if not (env.skip_confirmations or
-            formatting.confirm('This will power off the server with id %s and '
-                               'update device firmware. Continue?' % hw_id)):
+    confirm_message = f"This will power off the server with id {hw_id} and update device firmware. Continue?"
+    if not (env.skip_confirmations or formatting.confirm(confirm_message)):
         raise exceptions.CLIAbort('Aborted.')
 
-    mgr.update_firmware(hw_id)
+    # If no options were specified, set them all to enabled.
+    if not any([ipmi, raid, bios, harddrive, network]):
+        ipmi = raid = bios = harddrive = network = 1
+    mgr.update_firmware(hw_id, ipmi, raid, bios, harddrive, network)
+    env.fout(f"[green]Firmware update for {identifier} started")
diff --git a/SoftLayer/managers/hardware.py b/SoftLayer/managers/hardware.py
index a59e7244..69add1cf 100644
--- a/SoftLayer/managers/hardware.py
+++ b/SoftLayer/managers/hardware.py
@@ -723,22 +723,23 @@ def edit(self, hardware_id, userdata=None, hostname=None, domain=None,
 
         return self.hardware.editObject(obj, id=hardware_id)
 
-    def update_firmware(self,
-                        hardware_id,
-                        ipmi=True,
-                        raid_controller=True,
-                        bios=True,
-                        hard_drive=True):
+    def update_firmware(self, hardware_id: int,
+                        ipmi: bool = True,
+                        raid_controller: bool = True,
+                        bios: bool = True,
+                        hard_drive: bool = True,
+                        network: bool = True):
         """Update hardware firmware.
 
         This will cause the server to be unavailable for ~20 minutes.
+        https://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/createFirmwareUpdateTransaction/
 
-        :param int hardware_id: The ID of the hardware to have its firmware
-                                updated.
+        :param int hardware_id: The ID of the hardware to have its firmware updated.
         :param bool ipmi: Update the ipmi firmware.
         :param bool raid_controller: Update the raid controller firmware.
         :param bool bios: Update the bios firmware.
         :param bool hard_drive: Update the hard drive firmware.
+        :param bool network: Update the network card firmware
 
         Example::
 
@@ -746,21 +747,22 @@ def update_firmware(self,
             result = mgr.update_firmware(hardware_id=1234)
         """
 
-        return self.hardware.createFirmwareUpdateTransaction(
-            bool(ipmi), bool(raid_controller), bool(bios), bool(hard_drive), id=hardware_id)
+        return self.client.call(
+            'SoftLayer_Hardware_Server', 'createFirmwareUpdateTransaction',
+            bool(ipmi), bool(raid_controller), bool(bios), bool(hard_drive), bool(network), id=hardware_id
+        )
 
-    def reflash_firmware(self,
-                         hardware_id,
-                         ipmi=True,
-                         raid_controller=True,
-                         bios=True):
+    def reflash_firmware(self, hardware_id: int,
+                         ipmi: bool = True,
+                         raid_controller: bool = True,
+                         bios: bool = True,):
         """Reflash hardware firmware.
 
         This will cause the server to be unavailable for ~60 minutes.
         The firmware will not be upgraded but rather reflashed to the version installed.
+        https://sldn.softlayer.com/reference/services/SoftLayer_Hardware_Server/createFirmwareReflashTransaction/
 
-        :param int hardware_id: The ID of the hardware to have its firmware
-                                reflashed.
+        :param int hardware_id: The ID of the hardware to have its firmware reflashed.
         :param bool ipmi: Reflash the ipmi firmware.
         :param bool raid_controller: Reflash the raid controller firmware.
         :param bool bios: Reflash the bios firmware.
