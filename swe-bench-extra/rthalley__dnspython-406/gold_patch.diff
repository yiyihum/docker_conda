diff --git a/dns/message.pyi b/dns/message.pyi
index ed99b3c..fb55a4c 100644
--- a/dns/message.pyi
+++ b/dns/message.pyi
@@ -37,6 +37,10 @@ class Message:
         self.multi = False
         self.first = True
         self.index : Dict[Tuple[rrset.RRset, name.Name, int, int, Union[int,str], int], rrset.RRset] = {}
+
+    def is_response(self, other : Message) -> bool:
+        ...
+
 def from_text(a : str) -> Message:
     ...
 
diff --git a/dns/resolver.py b/dns/resolver.py
index c49598f..735de9f 100644
--- a/dns/resolver.py
+++ b/dns/resolver.py
@@ -524,7 +524,7 @@ class Resolver(object):
         """
 
         self.domain = None
-        self.nameservers = None
+        self.nameservers = []
         self.nameserver_ports = None
         self.port = None
         self.search = None
@@ -1079,6 +1079,21 @@ class Resolver(object):
 
         self.flags = flags
 
+    @property
+    def nameservers(self):
+        return self._nameservers
+
+    @nameservers.setter
+    def nameservers(self, nameservers):
+        """
+        :param nameservers: must be a ``list``.
+        :raise ValueError: if `nameservers` is anything other than a ``list``.
+        """
+        if isinstance(nameservers, list):
+            self._nameservers = nameservers
+        else:
+            raise ValueError('nameservers must be a list'
+                             ' (not a {})'.format(type(nameservers)))
 
 #: The default resolver.
 default_resolver = None
diff --git a/dns/resolver.pyi b/dns/resolver.pyi
index 06742fe..c68d04a 100644
--- a/dns/resolver.pyi
+++ b/dns/resolver.pyi
@@ -33,7 +33,7 @@ def zone_for_name(name, rdclass : int = rdataclass.IN, tcp=False, resolver : Opt
     ...
 
 class Resolver:
-    def __init__(self, configure):
+    def __init__(self, filename : Optional[str] = '/etc/resolv.conf', configure : Optional[bool] = True):
         self.nameservers : List[str]
     def query(self, qname : str, rdtype : Union[int,str] = rdatatype.A, rdclass : Union[int,str] = rdataclass.IN,
               tcp : bool = False, source : Optional[str] = None, raise_on_no_answer=True, source_port : int = 0):
