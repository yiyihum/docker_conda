diff --git a/tests/test_parser.py b/tests/test_parser.py
index 5a90c3a..8f1c6ea 100644
--- a/tests/test_parser.py
+++ b/tests/test_parser.py
@@ -3,6 +3,7 @@ import pytest
 from elkconfdparser import errors
 from elkconfdparser import parser
 
+
 class TestDropStack:
     @pytest.mark.parametrize(
         "input_root, input_stack, expected_root, expected_stack",
@@ -10,11 +11,11 @@ class TestDropStack:
             ({}, [], {}, []),
             ({}, [1], {}, [1]),
             ({}, [2, 1], {1: [2]}, []),
-            ({1:[8]}, [2, 1], {1: [8, 2]}, []),
-            ({1:[8], 3: [9]}, [2, 1], {1: [8, 2], 3: [9]}, []),
+            ({1: [8]}, [2, 1], {1: [8, 2]}, []),
+            ({1: [8], 3: [9]}, [2, 1], {1: [8, 2], 3: [9]}, []),
         ],
     )
-    def testTwoOperands(input_root, input_stack, expected_root, expected_stack):
+    def testTwoOperands(self, input_root, input_stack, expected_root, expected_stack):
 
         assert parser._drop_stack(input_root, input_stack) is None
         assert input_root == expected_root
@@ -23,10 +24,10 @@ class TestDropStack:
     @pytest.mark.parametrize(
         "input_root, input_stack, expected_root, expected_stack",
         [
-            ({}, [3, 2, 1,], {1: [2]}, [3]),
+            ({}, [3, 2, 1], {1: [2]}, [3]),
         ],
     )
-    def testMultipleOperands(input_root, input_stack, expected_root, expected_stack):
+    def testMultipleOperands(self, input_root, input_stack, expected_root, expected_stack):
 
         with pytest.raises(errors.StackNotEmptyException, match=r'.*operands left.*'):
             parser._drop_stack(input_root, input_stack)
