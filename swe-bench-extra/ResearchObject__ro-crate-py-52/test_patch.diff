diff --git a/test/test-data/read_extra/listed.txt b/test/test-data/read_extra/listed.txt
new file mode 100644
index 0000000..f6174c1
--- /dev/null
+++ b/test/test-data/read_extra/listed.txt
@@ -0,0 +1,1 @@
+LISTED
diff --git a/test/test-data/read_extra/listed/listed.txt b/test/test-data/read_extra/listed/listed.txt
new file mode 100644
index 0000000..f6174c1
--- /dev/null
+++ b/test/test-data/read_extra/listed/listed.txt
@@ -0,0 +1,1 @@
+LISTED
diff --git a/test/test-data/read_extra/listed/not_listed.txt b/test/test-data/read_extra/listed/not_listed.txt
new file mode 100644
index 0000000..821cc78
--- /dev/null
+++ b/test/test-data/read_extra/listed/not_listed.txt
@@ -0,0 +1,1 @@
+NOT_LISTED
diff --git a/test/test-data/read_extra/not_listed.txt b/test/test-data/read_extra/not_listed.txt
new file mode 100644
index 0000000..821cc78
--- /dev/null
+++ b/test/test-data/read_extra/not_listed.txt
@@ -0,0 +1,1 @@
+NOT_LISTED
diff --git a/test/test-data/read_extra/not_listed/not_listed.txt b/test/test-data/read_extra/not_listed/not_listed.txt
new file mode 100644
index 0000000..821cc78
--- /dev/null
+++ b/test/test-data/read_extra/not_listed/not_listed.txt
@@ -0,0 +1,1 @@
+NOT_LISTED
diff --git a/test/test-data/read_extra/ro-crate-metadata.json b/test/test-data/read_extra/ro-crate-metadata.json
new file mode 100644
index 0000000..90e2682
--- /dev/null
+++ b/test/test-data/read_extra/ro-crate-metadata.json
@@ -0,0 +1,43 @@
+{
+    "@context": "https://w3id.org/ro/crate/1.1/context",
+    "@graph": [
+        {
+            "@id": "./",
+            "@type": "Dataset",
+            "datePublished": "2021-02-26T09:46:41.236862",
+            "hasPart": [
+                {
+                    "@id": "listed/"
+                },
+                {
+                    "@id": "listed.txt"
+                },
+                {
+                    "@id": "listed/listed.txt"
+                }
+            ]
+        },
+        {
+            "@id": "ro-crate-metadata.json",
+            "@type": "CreativeWork",
+            "about": {
+                "@id": "./"
+            },
+            "conformsTo": {
+                "@id": "https://w3id.org/ro/crate/1.1"
+            }
+        },
+        {
+            "@id": "listed/",
+            "@type": "Dataset"
+        },
+        {
+            "@id": "listed.txt",
+            "@type": "File"
+        },
+        {
+            "@id": "listed/listed.txt",
+            "@type": "File"
+        }
+    ]
+}
\ No newline at end of file
diff --git a/test/test_read.py b/test/test_read.py
index 4db2864..eea335a 100644
--- a/test/test_read.py
+++ b/test/test_read.py
@@ -18,6 +18,7 @@
 import pytest
 import shutil
 import uuid
+import zipfile
 from pathlib import Path
 
 from rocrate.rocrate import ROCrate
@@ -120,7 +121,10 @@ def test_crate_dir_loading(test_data_dir, tmpdir, helpers, load_preview, from_zi
     metadata_path = out_path / helpers.METADATA_FILE_NAME
     assert metadata_path.exists()
     legacy_metadata_path = out_path / helpers.LEGACY_METADATA_FILE_NAME
-    assert not legacy_metadata_path.exists()
+    # legacy metadata file should just be copied over as a regular file
+    assert legacy_metadata_path.exists()
+    with open(crate_dir / helpers.LEGACY_METADATA_FILE_NAME) as f1, open(legacy_metadata_path) as f2:
+        assert f1.read() == f2.read()
     preview_path = out_path / helpers.PREVIEW_FILE_NAME
     assert preview_path.exists()
     if load_preview:
@@ -241,3 +245,28 @@ def test_no_parts(tmpdir):
 
     crate = ROCrate(out_path)
     assert not crate.root_dataset["hasPart"]
+
+
+@pytest.mark.parametrize("to_zip", [False, True])
+def test_extra_data(test_data_dir, tmpdir, to_zip):
+    crate_dir = test_data_dir / 'read_extra'
+    crate = ROCrate(crate_dir)
+    out_path = tmpdir / 'read_extra_out'
+    if to_zip:
+        zip_path = tmpdir / 'ro_crate_out.crate.zip'
+        crate.write_zip(zip_path)
+        with zipfile.ZipFile(zip_path, "r") as zf:
+            zf.extractall(out_path)
+    else:
+        out_path.mkdir()
+        crate.write_crate(out_path)
+    for rel in {
+            "listed.txt",
+            "listed/listed.txt",
+            "listed/not_listed.txt",
+            "not_listed.txt",
+            "not_listed/not_listed.txt",
+    }:
+        assert (out_path / rel).is_file()
+        with open(crate_dir / rel) as f1, open(out_path / rel) as f2:
+            assert f1.read() == f2.read()
