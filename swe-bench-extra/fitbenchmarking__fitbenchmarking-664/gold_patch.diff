diff --git a/.gitignore b/.gitignore
index 7c463b7d..4c9f0069 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,4 +1,4 @@
-results/
+fitbenchmarking_results/
 *.pyc
 logs/
 .idea/
diff --git a/fitbenchmarking/cli/main.py b/fitbenchmarking/cli/main.py
index c0920dc3..18ff33f8 100755
--- a/fitbenchmarking/cli/main.py
+++ b/fitbenchmarking/cli/main.py
@@ -11,6 +11,7 @@ import argparse
 import glob
 import inspect
 import os
+import tempfile
 import sys
 import webbrowser
 
@@ -99,6 +100,17 @@ def run(problem_sets, options_file='', debug=False):
                  append=options.log_append,
                  level=options.log_level)
 
+    opt_file = tempfile.NamedTemporaryFile(suffix='.ini',
+                                           mode='w',
+                                           delete=False)
+    options.write_to_stream(opt_file)
+    opt_file.close()
+    LOGGER.debug("The options file used is as follows:")
+    with open(opt_file.name) as f:
+        for line in f:
+            LOGGER.debug(line.replace("\n", ""))
+    os.remove(opt_file.name)
+
     groups = []
     result_dir = []
     for sub_dir in problem_sets:
@@ -142,11 +154,17 @@ def run(problem_sets, options_file='', debug=False):
 
         # resets options to original values
         options.reset()
+    if os.path.basename(options.results_dir) == \
+            options.DEFAULT_PLOTTING['results_dir']:
+        LOGGER.info("\nWARNING: \nThe FitBenchmarking results will be "
+                    "placed into the folder: \n\n   {}\n\nTo change this "
+                    "alter the input options "
+                    "file.\n".format(options.results_dir))
 
     root = os.path.dirname(inspect.getfile(fitbenchmarking))
     template_dir = os.path.join(root, 'templates')
     env = Environment(loader=FileSystemLoader(template_dir))
-    css = get_css(options,options.results_dir)
+    css = get_css(options, options.results_dir)
     template = env.get_template("index_page.html")
     group_links = [os.path.join(d, "{}_index.html".format(g))
                    for g, d in zip(groups, result_dir)]
diff --git a/fitbenchmarking/utils/options.py b/fitbenchmarking/utils/options.py
index 0de1e2e9..946c2660 100644
--- a/fitbenchmarking/utils/options.py
+++ b/fitbenchmarking/utils/options.py
@@ -101,7 +101,7 @@ class Options(object):
                           (np.inf, "#b30000")],
          'comparison_mode': 'both',
          'table_type': ['acc', 'runtime', 'compare', 'local_min'],
-         'results_dir': 'results'}
+         'results_dir': 'fitbenchmarking_results'}
     DEFAULT_LOGGING = \
         {'file_name': 'fitbenchmarking.log',
          'append': False,
@@ -155,10 +155,10 @@ class Options(object):
                                             default_options_list))
 
         minimizers = config['MINIMIZERS']
-        self.minimizers = {}
+        self._minimizers = {}
         for key in self.VALID_FITTING["software"]:
-            self.minimizers[key] = self.read_value(minimizers.getlist,
-                                                   key)
+            self._minimizers[key] = self.read_value(minimizers.getlist,
+                                                    key)
 
         fitting = config['FITTING']
         self.num_runs = self.read_value(fitting.getint, 'num_runs')
@@ -246,6 +246,14 @@ class Options(object):
     def results_dir(self, value):
         self._results_dir = os.path.abspath(value)
 
+    @property
+    def minimizers(self):
+        return {s: self._minimizers[s] for s in self.software}
+
+    @minimizers.setter
+    def minimizers(self, value):
+        self._minimizers = value
+
     def _create_config(self):
         """
         Return the contents of the options object as a ConfigParser object,
