diff --git a/fitbenchmarking/systests/test_regression.py b/fitbenchmarking/systests/test_regression.py
index ea9ceaaa..4e1197cb 100644
--- a/fitbenchmarking/systests/test_regression.py
+++ b/fitbenchmarking/systests/test_regression.py
@@ -66,7 +66,7 @@ class TestRegressionAll(TestCase):
                                      'all_parsers.txt')
 
         actual_file = os.path.join(os.path.dirname(__file__),
-                                   'results',
+                                   'fitbenchmarking_results',
                                    'all_parsers_set',
                                    'all_parsers_set_acc_weighted_table.txt')
 
@@ -90,7 +90,7 @@ class TestRegressionAll(TestCase):
                                      'multifit.txt')
 
         actual_file = os.path.join(os.path.dirname(__file__),
-                                   'results',
+                                   'fitbenchmarking_results',
                                    'multifit_set',
                                    'multifit_set_acc_weighted_table.txt')
 
@@ -146,7 +146,7 @@ class TestRegressionDefault(TestCase):
                                      'default_parsers.txt')
 
         actual_file = os.path.join(os.path.dirname(__file__),
-                                   'results',
+                                   'fitbenchmarking_results',
                                    'default_parsers',
                                    'default_parsers_acc_weighted_table.txt')
 
@@ -205,12 +205,14 @@ def setup_options(multifit=False):
         opts.software = ['mantid']
         opts.minimizers = {'mantid': [opts.minimizers['mantid'][0]]}
     elif TEST_TYPE != "default":
+        opts.software = ['bumps', 'dfo', 'gsl', 'mantid', 'minuit',
+                         'ralfit', 'scipy', 'scipy_ls']
         opts.minimizers = {k: [v[0]] for k, v in opts.minimizers.items()}
-        opts.software = sorted(opts.minimizers.keys())
     else:
         opts.software = ['bumps', 'dfo', 'minuit', 'scipy', 'scipy_ls']
         opts.minimizers = {s: [opts.minimizers[s][0]] for s in opts.software}
 
-    opts.results_dir = os.path.join(os.path.dirname(__file__), 'results')
+    opts.results_dir = os.path.join(os.path.dirname(__file__),
+                                    'fitbenchmarking_results')
 
     return opts
diff --git a/fitbenchmarking/utils/tests/test_options_minimizers.py b/fitbenchmarking/utils/tests/test_options_minimizers.py
index 8f3b1a53..eda87815 100644
--- a/fitbenchmarking/utils/tests/test_options_minimizers.py
+++ b/fitbenchmarking/utils/tests/test_options_minimizers.py
@@ -20,6 +20,9 @@ class MininimizerOptionTests(unittest.TestCase):
         Initializes options class with defaults
         """
         self.options = Options()
+        software = ['bumps', 'dfo', 'gsl', 'mantid', 'minuit',
+                    'ralfit', 'scipy', 'scipy_ls']
+        self.options.software = software
 
     def test_minimizer_bumps(self):
         """
@@ -37,6 +40,16 @@ class MininimizerOptionTests(unittest.TestCase):
         actual = self.options.minimizers['dfo']
         self.assertEqual(expected, actual)
 
+    def test_minimizer_gsl(self):
+        """
+        Checks valid gsl minimizers are set correctly
+        """
+        expected = ['lmsder', 'lmder', 'nmsimplex', 'nmsimplex2',
+                    'conjugate_pr', 'conjugate_fr', 'vector_bfgs',
+                    'vector_bfgs2', 'steepest_descent']
+        actual = self.options.minimizers['gsl']
+        self.assertEqual(expected, actual)
+
     def test_minimizer_mantid(self):
         """
         Checks valid mantid minimizers are set correctly
@@ -137,6 +150,8 @@ class UserMininimizerOptionTests(unittest.TestCase):
         """
         opts_file = self.generate_user_ini_file(options_set, software)
         options = Options(opts_file)
+        if software not in options.software:
+            options.software.append(software)
         actual = options.minimizers[software]
         self.assertEqual(options_set, actual)
 
@@ -188,6 +203,20 @@ class UserMininimizerOptionTests(unittest.TestCase):
         set_option = ['CG']
         self.shared_invalid(set_option, 'dfo')
 
+    def test_minimizer_gsl_valid(self):
+        """
+        Checks user set gsl minimizers is valid
+        """
+        set_option = ['lmsder', 'lmder', 'nmsimplex']
+        self.shared_valid(set_option, 'gsl')
+
+    def test_minimizer_gsl_invalid(self):
+        """
+        Checks user set gsl minimizers is invalid
+        """
+        set_option = ['newton']
+        self.shared_invalid(set_option, 'gsl')
+
     def test_minimizer_mantid_valid(self):
         """
         Checks user set mantid minimizers is valid
diff --git a/fitbenchmarking/utils/tests/test_options_plotting.py b/fitbenchmarking/utils/tests/test_options_plotting.py
index 3b8ac9df..9369c201 100644
--- a/fitbenchmarking/utils/tests/test_options_plotting.py
+++ b/fitbenchmarking/utils/tests/test_options_plotting.py
@@ -62,7 +62,7 @@ class PlottingOptionTests(unittest.TestCase):
         """
         Checks results_dir default
         """
-        expected = os.path.abspath('results')
+        expected = os.path.abspath('fitbenchmarking_results')
         actual = self.options.results_dir
         self.assertEqual(expected, actual)
 
