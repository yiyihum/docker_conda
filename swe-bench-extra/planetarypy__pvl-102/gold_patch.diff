diff --git a/HISTORY.rst b/HISTORY.rst
index d3324bd..de80e6e 100644
--- a/HISTORY.rst
+++ b/HISTORY.rst
@@ -34,6 +34,10 @@ Fixed
 +++++
 * Deeply nested Aggregation Blocks (Object or Group) which had mis-matched Block Names
   should now properly result in LexerErrors instead of resulting in StopIteration Exceptions (Issue 100).
+* The default "Omni" parsing strategy, now considers the ASCII NULL character ("\0") a "reserved character."
+  The practical effect is that the ASCII NULL can not be in parameter names or unquoted strings (but would still
+  be successfully parsed in quoted strings). This means that PVL-text that might have incorrectly used ASCII NULLs
+  as delimiters will once again be consumed by our omnivorous parser (Issue 98).
 
 
 1.3.0 (2021-09-10)
diff --git a/pvl/grammar.py b/pvl/grammar.py
index 06eebf2..afa4e53 100755
--- a/pvl/grammar.py
+++ b/pvl/grammar.py
@@ -333,8 +333,10 @@ class OmniGrammar(PVLGrammar):
     def __init__(self):
         # Handle the fact that ISIS writes out unquoted plus signs.
         # See ISISGrammar for details.
+        # Also add the ASCII NULL ("\0") to the reserved_characters tuple.
         self.reserved_characters = tuple(
-            ISISGrammar.adjust_reserved_characters(self.reserved_characters)
+            ISISGrammar.adjust_reserved_characters(self.reserved_characters) +
+            ["\0", ]
         )
 
     def char_allowed(self, char):
