diff --git a/.github/workflows/unittests.yml b/.github/workflows/unittests.yml
index fb8bd86..f046eba 100644
--- a/.github/workflows/unittests.yml
+++ b/.github/workflows/unittests.yml
@@ -29,13 +29,14 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        os: [ubuntu-18.04, macos-11]
-        python-version: [3.9]
+        os: [ubuntu-20.04, ubuntu-latest, macos-11]
+        python-version: ['3.9', '3.11']
         experimental: [false]
         include:
-          - os: ubuntu-18.04
+          - os: ubuntu-20.04
+            python-version: 3.6
+          - os: macos-11
             python-version: 3.6
-            experimental: false
 
     steps:
 
@@ -43,7 +44,7 @@ jobs:
       uses: actions/checkout@v2
 
     - name: Set up Python ${{ matrix.python-version }}
-      uses: actions/setup-python@v2
+      uses: actions/setup-python@v4
       with:
         python-version: ${{ matrix.python-version }}
 
diff --git a/test/test_cubic_bezier.py b/test/test_cubic_bezier.py
index 37ef038..6927487 100644
--- a/test/test_cubic_bezier.py
+++ b/test/test_cubic_bezier.py
@@ -74,3 +74,9 @@ class TestElementCubicBezierPoint(unittest.TestCase):
             bbox2 = cubic2.bbox()
             for a, b in zip(bbox1, bbox2):
                 self.assertAlmostEqual(a, b, delta=1e-5)
+
+    def test_cubic_bounds_issue_220(self):
+        p = Path(transform=Matrix(682.657124793113, 0.000000000003, -0.000000000003, 682.657124793113, 257913.248909660178, -507946.354527872754))
+        p += CubicBezier(start=Point(-117.139521365,1480.99923469), control1=Point(-41.342266634,1505.62725567), control2=Point(40.3422666342,1505.62725567), end=Point(116.139521365,1480.99923469))
+        bounds = p.bbox()
+        self.assertNotAlmostEquals(bounds[1], bounds[3], delta=100)
