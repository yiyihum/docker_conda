diff --git a/tests/test_hierarchy.py b/tests/test_hierarchy.py
index e616d6c..34a8e56 100644
--- a/tests/test_hierarchy.py
+++ b/tests/test_hierarchy.py
@@ -42,6 +42,31 @@ class TestHierarchy(TestCase):
 
         self.assertEqual(expected, results)
 
+    @patch("pconf.store.env.Env")
+    @patch("pconf.store.file.File")
+    def test_double_forward(self, mock_file, mock_env):
+        mocked_env = MagicMock()
+        mocked_env.get.return_value = self.TEST_ENV_RESULT
+        mock_env.return_value = mocked_env
+
+        mocked_file = MagicMock()
+        mocked_file.get.return_value = self.TEST_FILE_RESULT
+        mock_file.return_value = mocked_file
+
+        Pconf.env()
+        Pconf.file(self.TEST_FILE_PATH)
+        Pconf.get()
+        results = Pconf.get()
+
+        expected = {
+            "file": "result",
+            "env": "result",
+            "overlapping": "env",
+            "deep": {"stillhere": "stillhere", "overlapping": "env"},
+        }
+
+        self.assertEqual(expected, results)
+
     @patch("pconf.store.env.Env")
     @patch("pconf.store.file.File")
     def test_backward(self, mock_file, mock_env):
@@ -65,3 +90,28 @@ class TestHierarchy(TestCase):
         }
 
         self.assertEqual(expected, results)
+
+    @patch("pconf.store.env.Env")
+    @patch("pconf.store.file.File")
+    def test_double_backward(self, mock_file, mock_env):
+        mocked_env = MagicMock()
+        mocked_env.get.return_value = self.TEST_ENV_RESULT
+        mock_env.return_value = mocked_env
+
+        mocked_file = MagicMock()
+        mocked_file.get.return_value = self.TEST_FILE_RESULT
+        mock_file.return_value = mocked_file
+
+        Pconf.file(self.TEST_FILE_PATH)
+        Pconf.env()
+        Pconf.get()
+        results = Pconf.get()
+
+        expected = {
+            "file": "result",
+            "env": "result",
+            "overlapping": "file",
+            "deep": {"stillhere": "stillhere", "overlapping": "file"},
+        }
+
+        self.assertEqual(expected, results)
