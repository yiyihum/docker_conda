diff --git a/.cirrus.yml b/.cirrus.yml
index eed71be..7df7d08 100644
--- a/.cirrus.yml
+++ b/.cirrus.yml
@@ -1,5 +1,5 @@
 freebsd_instance:
-  image_family: freebsd-13-0-snap
+  image_family: freebsd-13-1
 
 test_task:
   only_if: "$CIRRUS_BRANCH == 'main' || $CIRRUS_PR != ''"
diff --git a/docs/news.rst b/docs/news.rst
index 0ddc562..97d7b65 100644
--- a/docs/news.rst
+++ b/docs/news.rst
@@ -1,6 +1,11 @@
 Release Notes
 =============
 
+**UNRELEASED**
+
+- Added full support of the build tag syntax to ``wheel tags`` (you can now set a build
+  tag like ``123mytag``)
+
 **0.40.0 (2023-03-14)**
 
 - Added a ``wheel tags`` command to modify tags on an existing wheel
diff --git a/src/wheel/cli/__init__.py b/src/wheel/cli/__init__.py
index fa1f10b..c09f839 100644
--- a/src/wheel/cli/__init__.py
+++ b/src/wheel/cli/__init__.py
@@ -7,6 +7,7 @@ from __future__ import annotations
 import argparse
 import os
 import sys
+from argparse import ArgumentTypeError
 
 
 class WheelError(Exception):
@@ -56,6 +57,15 @@ def version_f(args):
     print("wheel %s" % __version__)
 
 
+def parse_build_tag(build_tag: str) -> str:
+    if not build_tag[0].isdigit():
+        raise ArgumentTypeError("build tag must begin with a digit")
+    elif "-" in build_tag:
+        raise ArgumentTypeError("invalid character ('-') in build tag")
+
+    return build_tag
+
+
 TAGS_HELP = """\
 Make a new wheel with given tags. Any tags unspecified will remain the same.
 Starting the tags with a "+" will append to the existing tags. Starting with a
@@ -117,7 +127,7 @@ def parser():
         "--platform-tag", metavar="TAG", help="Specify a platform tag(s)"
     )
     tags_parser.add_argument(
-        "--build", type=int, metavar="NUMBER", help="Specify a build number"
+        "--build", type=parse_build_tag, metavar="BUILD", help="Specify a build tag"
     )
     tags_parser.set_defaults(func=tags_f)
 
diff --git a/src/wheel/cli/tags.py b/src/wheel/cli/tags.py
index 0ea0f44..b9094d7 100644
--- a/src/wheel/cli/tags.py
+++ b/src/wheel/cli/tags.py
@@ -27,7 +27,7 @@ def tags(
     python_tags: str | None = None,
     abi_tags: str | None = None,
     platform_tags: str | None = None,
-    build_number: int | None = None,
+    build_tag: str | None = None,
     remove: bool = False,
 ) -> str:
     """Change the tags on a wheel file.
@@ -41,7 +41,7 @@ def tags(
     :param python_tags: The Python tags to set
     :param abi_tags: The ABI tags to set
     :param platform_tags: The platform tags to set
-    :param build_number: The build number to set
+    :param build_tag: The build tag to set
     :param remove: Remove the original wheel
     """
     with WheelFile(wheel, "r") as f:
@@ -56,7 +56,7 @@ def tags(
         original_abi_tags = f.parsed_filename.group("abi").split(".")
         original_plat_tags = f.parsed_filename.group("plat").split(".")
 
-    tags, existing_build_number = read_tags(wheel_info)
+    tags, existing_build_tag = read_tags(wheel_info)
 
     impls = {tag.split("-")[0] for tag in tags}
     abivers = {tag.split("-")[1] for tag in tags}
@@ -76,16 +76,16 @@ def tags(
         )
         raise AssertionError(msg)
 
-    if existing_build_number != build:
+    if existing_build_tag != build:
         msg = (
             f"Incorrect filename '{build}' "
-            "& *.dist-info/WHEEL '{existing_build_number}' build numbers"
+            f"& *.dist-info/WHEEL '{existing_build_tag}' build numbers"
         )
         raise AssertionError(msg)
 
     # Start changing as needed
-    if build_number is not None:
-        build = str(build_number)
+    if build_tag is not None:
+        build = build_tag
 
     final_python_tags = sorted(_compute_tags(original_python_tags, python_tags))
     final_abi_tags = sorted(_compute_tags(original_abi_tags, abi_tags))
