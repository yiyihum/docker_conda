diff --git a/tests/conftest.py b/tests/conftest.py
index b3e59ed..5236a90 100644
--- a/tests/conftest.py
+++ b/tests/conftest.py
@@ -8,10 +8,11 @@ def fullpath(fname: str):
     return str(TEST_DIR / fname)
 
 
-PATH_FNAME = fullpath('mock_path_file')
-PATH_FNAME_EMPTY = fullpath('empty_path_file')
-PATH_FNAME_CLASH = fullpath('clash_path_file')
-GROUP_FNAME = fullpath('mock_group_file')
+PATH_FNAME = fullpath("mock_path_file")
+PATH_FNAME_EMPTY = fullpath("empty_path_file")
+PATH_FNAME_CLASH = fullpath("clash_path_file")
+GROUP_FNAME = fullpath("mock_group_file")
+
 
 def async_mock():
     """
diff --git a/tests/test_info.py b/tests/test_info.py
index c234d78..0af8a47 100644
--- a/tests/test_info.py
+++ b/tests/test_info.py
@@ -4,13 +4,14 @@ from unittest.mock import patch, MagicMock
 from gita import info
 
 
-@patch('subprocess.run')
+@patch("subprocess.run")
 def test_run_quiet_diff(mock_run):
     mock_return = MagicMock()
     mock_run.return_value = mock_return
-    got = info.run_quiet_diff(['--flags'], ['my', 'args'])
+    got = info.run_quiet_diff(["--flags"], ["my", "args"], "/a/b/c")
     mock_run.assert_called_once_with(
-        ['git', '--flags', 'diff', '--quiet', 'my', 'args'],
+        ["git", "--flags", "diff", "--quiet", "my", "args"],
         stderr=subprocess.DEVNULL,
+        cwd="/a/b/c",
     )
     assert got == mock_return.returncode
diff --git a/tests/test_main.py b/tests/test_main.py
index 0f2eeb5..a892042 100644
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -71,6 +71,7 @@ class TestLsLl:
         """
         functional test
         """
+
         # avoid modifying the local configuration
         def side_effect(input, _=None):
             return tmp_path / f"{input}.txt"
diff --git a/tests/test_utils.py b/tests/test_utils.py
index 9679116..c39c626 100644
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -135,7 +135,7 @@ def test_describe(test_input, diff_return, expected, monkeypatch):
     monkeypatch.setattr(info, "get_commit_msg", lambda *_: "msg")
     monkeypatch.setattr(info, "get_commit_time", lambda *_: "xx")
     monkeypatch.setattr(info, "has_untracked", lambda *_: True)
-    monkeypatch.setattr("os.chdir", lambda x: None)
+    monkeypatch.setattr(info, "get_common_commit", lambda x: "")
 
     info.get_color_encoding.cache_clear()  # avoid side effect
     assert expected == next(utils.describe(*test_input))
