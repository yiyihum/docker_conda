diff --git a/evalutils/evalutils.py b/evalutils/evalutils.py
index b2663b0..e18b6dd 100644
--- a/evalutils/evalutils.py
+++ b/evalutils/evalutils.py
@@ -9,9 +9,9 @@ from warnings import warn
 
 from pandas import DataFrame, merge, Series, concat
 
-from evalutils.utils import score_detection
 from .exceptions import FileLoaderError, ValidationError, ConfigurationError
 from .io import first_int_in_filename_key, FileLoader, CSVLoader
+from .scorers import score_detection
 from .validators import DataFrameValidator
 
 logger = logging.getLogger(__name__)
diff --git a/evalutils/utils.py b/evalutils/scorers.py
similarity index 100%
rename from evalutils/utils.py
rename to evalutils/scorers.py
diff --git a/evalutils/template/hooks/post_gen_project.py b/evalutils/template/hooks/post_gen_project.py
index cb52c5f..bb902c3 100644
--- a/evalutils/template/hooks/post_gen_project.py
+++ b/evalutils/template/hooks/post_gen_project.py
@@ -3,12 +3,16 @@ import os
 import shutil
 from pathlib import Path
 
-templated_python_files = Path(os.getcwd()).glob('*.py.j2')
+CHALLENGE_KIND = "{{ cookiecutter.challenge_kind }}"
+
+EOL_UNIX = b"\n"
+EOL_WIN = b"\r\n"
+EOL_MAC = b"\r"
+
+templated_python_files = Path(os.getcwd()).glob("*.py.j2")
 for f in templated_python_files:
     shutil.move(f.name, f.stem)
 
-challenge_kind = "{{ cookiecutter.challenge_kind }}"
-
 
 def remove_classification_files():
     os.remove(Path("ground-truth") / "reference.csv")
@@ -29,11 +33,38 @@ def remove_detection_files():
     os.remove(Path("test") / "detection-submission.csv")
 
 
-if challenge_kind.lower() != "segmentation":
+if CHALLENGE_KIND.lower() != "segmentation":
     remove_segmentation_files()
 
-if challenge_kind.lower() != "detection":
+if CHALLENGE_KIND.lower() != "detection":
     remove_detection_files()
 
-if challenge_kind.lower() != "classification":
+if CHALLENGE_KIND.lower() != "classification":
     remove_classification_files()
+
+
+def convert_line_endings():
+    """ Enforce unix line endings for the generated files """
+    files = []
+    for ext in [
+        ".py",
+        ".sh",
+        "Dockerfile",
+        ".txt",
+        ".csv",
+        ".mhd",
+        ".gitignore",
+    ]:
+        files.extend(Path(".").glob(f"**/*{ext}"))
+
+    for file in files:
+        with open(file, "rb") as f:
+            lines = f.read()
+
+        lines = lines.replace(EOL_WIN, EOL_UNIX).replace(EOL_MAC, EOL_UNIX)
+
+        with open(file, "wb") as f:
+            f.write(lines)
+
+
+convert_line_endings()
