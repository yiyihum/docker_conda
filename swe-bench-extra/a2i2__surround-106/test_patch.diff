diff --git a/surround/tests/cli/project_cli/init_test.py b/surround/tests/cli/project_cli/init_test.py
index 24d0f53..1bbce4e 100644
--- a/surround/tests/cli/project_cli/init_test.py
+++ b/surround/tests/cli/project_cli/init_test.py
@@ -9,13 +9,13 @@ class InitTest(unittest.TestCase):
 
     def test_happy_path(self):
         process = subprocess.run(['surround', 'init', './', '-p', 'temp', '-d', 'temp'], encoding='utf-8', stdout=subprocess.PIPE)
-        self.assertEqual(process.stdout, "Project created at " + os.getcwd() + "/temp\n")
+        self.assertEqual(process.stdout, "info: project created at " + os.getcwd() + "/temp\n")
 
         is_temp = os.path.isdir(os.path.join(os.getcwd() + "/temp"))
         self.assertEqual(is_temp, True)
 
         process = subprocess.run(['surround', 'init', './', '-p', 'temp', '-d', 'temp'], encoding='utf-8', stdout=subprocess.PIPE)
-        self.assertEqual(process.stdout, "Directory ./temp already exists\n")
+        self.assertEqual(process.stdout, "error: directory ./temp already exists\n")
 
     def tearDown(self):
         # Remove residual files
diff --git a/surround/tests/cli/remote_cli/add_test.py b/surround/tests/cli/remote_cli/add_test.py
index 07c9ea4..537a8d8 100644
--- a/surround/tests/cli/remote_cli/add_test.py
+++ b/surround/tests/cli/remote_cli/add_test.py
@@ -9,7 +9,7 @@ class AddTest(unittest.TestCase):
 
     def test_rejecting_path(self):
         process = subprocess.run(['surround', 'init', './', '-p', 'temp', '-d', 'temp'], encoding='utf-8', stdout=subprocess.PIPE)
-        self.assertEqual(process.stdout, "Project created at " + os.getcwd() + "/temp\n")
+        self.assertEqual(process.stdout, "info: project created at " + os.getcwd() + "/temp\n")
 
         is_temp = os.path.isdir(os.path.join(os.getcwd() + "/temp"))
         self.assertEqual(is_temp, True)
@@ -24,7 +24,7 @@ class AddTest(unittest.TestCase):
 
     def test_happy_path(self):
         process = subprocess.run(['surround', 'init', os.getcwd(), '-p', 'temp', '-d', 'temp'], encoding='utf-8', stdout=subprocess.PIPE)
-        self.assertEqual(process.stdout, "Project created at " + os.getcwd() + "/temp\n")
+        self.assertEqual(process.stdout, "info: project created at " + os.getcwd() + "/temp\n")
 
         is_temp = os.path.isdir(os.path.join(os.getcwd() + "/temp"))
         self.assertEqual(is_temp, True)
diff --git a/surround/tests/cli/remote_cli/list_test.py b/surround/tests/cli/remote_cli/list_test.py
index 71970eb..d993284 100644
--- a/surround/tests/cli/remote_cli/list_test.py
+++ b/surround/tests/cli/remote_cli/list_test.py
@@ -9,7 +9,7 @@ class ListTest(unittest.TestCase):
 
     def test_rejecting_path(self):
         process = subprocess.run(['surround', 'init', './', '-p', 'temp', '-d', 'temp'], encoding='utf-8', stdout=subprocess.PIPE)
-        self.assertEqual(process.stdout, "Project created at " + os.getcwd() + "/temp\n")
+        self.assertEqual(process.stdout, "info: project created at " + os.getcwd() + "/temp\n")
 
         is_temp = os.path.isdir(os.path.join(os.getcwd() + "/temp"))
         self.assertEqual(is_temp, True)
@@ -19,7 +19,7 @@ class ListTest(unittest.TestCase):
 
     def test_happy_path(self):
         process = subprocess.run(['surround', 'init', './', '-p', 'temp', '-d', 'temp'], encoding='utf-8', stdout=subprocess.PIPE)
-        self.assertEqual(process.stdout, "Project created at " + os.getcwd() + "/temp\n")
+        self.assertEqual(process.stdout, "info: project created at " + os.getcwd() + "/temp\n")
 
         is_temp = os.path.isdir(os.path.join(os.getcwd() + "/temp"))
         self.assertEqual(is_temp, True)
diff --git a/surround/tests/cli/remote_cli/remote_test.py b/surround/tests/cli/remote_cli/remote_test.py
index e8ed4cd..7236530 100644
--- a/surround/tests/cli/remote_cli/remote_test.py
+++ b/surround/tests/cli/remote_cli/remote_test.py
@@ -12,7 +12,7 @@ class RemoteTest(unittest.TestCase):
         self.assertEqual(process.stdout, "error: not a surround project\nerror: goto project root directory\n")
 
         process = subprocess.run(['surround', 'init', './', '-p', 'temp', '-d', 'temp'], encoding='utf-8', stdout=subprocess.PIPE)
-        self.assertEqual(process.stdout, "Project created at " + os.getcwd() + "/temp\n")
+        self.assertEqual(process.stdout, "info: project created at " + os.getcwd() + "/temp\n")
 
         is_temp = os.path.isdir(os.path.join(os.getcwd() + "/temp"))
         self.assertEqual(is_temp, True)
@@ -22,7 +22,7 @@ class RemoteTest(unittest.TestCase):
 
     def test_remote_add(self):
         process = subprocess.run(['surround', 'init', './', '-p', 'temp', '-d', 'temp'], encoding='utf-8', stdout=subprocess.PIPE)
-        self.assertEqual(process.stdout, "Project created at " + os.getcwd() + "/temp\n")
+        self.assertEqual(process.stdout, "info: project created at " + os.getcwd() + "/temp\n")
 
         is_temp = os.path.isdir(os.path.join(os.getcwd() + "/temp"))
         self.assertEqual(is_temp, True)
