diff --git a/diff_cover/report_generator.py b/diff_cover/report_generator.py
index b77a182..35fa06f 100644
--- a/diff_cover/report_generator.py
+++ b/diff_cover/report_generator.py
@@ -172,15 +172,29 @@ class BaseReportGenerator(ABC):
 
         To make this efficient, we cache and reuse the result.
         """
+        src_paths_changed = self._diff.src_paths_changed()
         if not self._diff_violations_dict:
-            self._diff_violations_dict = {
-                src_path: DiffViolations(
-                    self._violations.violations(src_path),
-                    self._violations.measured_lines(src_path),
-                    self._diff.lines_changed(src_path),
+            try:
+                violations = self._violations.violations_batch(
+                    src_paths_changed
                 )
-                for src_path in self._diff.src_paths_changed()
-            }
+                self._diff_violations_dict = {
+                    src_path: DiffViolations(
+                        violations.get(src_path, []),
+                        self._violations.measured_lines(src_path),
+                        self._diff.lines_changed(src_path),
+                    )
+                for src_path in src_paths_changed
+                }
+            except NotImplementedError:
+                self._diff_violations_dict = {
+                    src_path: DiffViolations(
+                        self._violations.violations(src_path),
+                        self._violations.measured_lines(src_path),
+                        self._diff.lines_changed(src_path),
+                    )
+                for src_path in src_paths_changed
+                }
         return self._diff_violations_dict
 
     def report_dict(self):
diff --git a/diff_cover/violationsreporters/base.py b/diff_cover/violationsreporters/base.py
index f0d7000..3f1a6ca 100644
--- a/diff_cover/violationsreporters/base.py
+++ b/diff_cover/violationsreporters/base.py
@@ -34,6 +34,19 @@ class BaseViolationReporter(ABC):
         Return a list of Violations recorded in `src_path`.
         """
 
+    def violations_batch(self, src_paths):
+        """
+        Return a dict of Violations recorded in `src_paths`.
+
+        src_paths: Sequence[str] - sequence of paths to source files
+
+        Returns a Dict[str, List[Violation]]. Keys are paths to source files.
+
+        If a subclass does not implement this function, violations() will be
+        called instead, once for each src_path in src_paths.
+        """
+        raise NotImplementedError
+
     def measured_lines(self, src_path):
         """
         Return a list of the lines in src_path that were measured

