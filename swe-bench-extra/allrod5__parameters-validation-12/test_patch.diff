diff --git a/tests/unit/test_bultin_validations.py b/tests/unit/test_bultin_validations.py
index 8d5fb55..674c7e4 100644
--- a/tests/unit/test_bultin_validations.py
+++ b/tests/unit/test_bultin_validations.py
@@ -52,3 +52,19 @@ class TestBuiltinValidations:
     def test_strongly_typed_incorrect_usage(self):
         with pytest.raises(RuntimeError):
             bar("")
+
+    def test_unable_to_validate_non_blank(self):
+        with pytest.raises(RuntimeError):
+            foo(42, "", [None], "", 42, [1])
+
+    def test_unable_to_validate_non_empty(self):
+        with pytest.raises(RuntimeError):
+            foo("non-blank", "", None, "", 42, [1])
+
+    def test_unable_to_validate_no_whitespaces(self):
+        with pytest.raises(RuntimeError):
+            foo("non-blank", "", [None], None, 42, [1])
+
+    def test_unable_to_validate_non_negative(self):
+        with pytest.raises(RuntimeError):
+            foo("non-blank", "", [None], "", None, [1])
diff --git a/tests/unit/test_mock_validations.py b/tests/unit/test_mock_validations.py
new file mode 100644
index 0000000..d3eb050
--- /dev/null
+++ b/tests/unit/test_mock_validations.py
@@ -0,0 +1,36 @@
+import pytest
+
+from parameters_validation import validate_parameters, parameter_validation, non_blank
+
+
+@parameter_validation
+def type_error(*args, **kwargs):
+    raise TypeError
+
+
+def value_error(*args, **kwargs):
+    raise ValueError
+
+
+@validate_parameters
+def foo(arg: type_error(str)):
+    pass
+
+
+@validate_parameters
+def bar(arg: non_blank(str)):
+    pass
+
+
+class TestValidateParametersDecoratorMock:
+    def test_setup(self):
+        with pytest.raises(TypeError):
+            foo("anything")
+
+    def test_mock_validation_replaces_original(self):
+        with pytest.raises(ValueError):
+            foo.mock_validations({"arg": value_error})("anything")
+
+    def test_unmatched_mock_raises_key_error(self):
+        with pytest.raises(KeyError):
+            bar.mock_validations({"unmatched": value_error})("non_blank")
diff --git a/tests/unit/test_skip_validations.py b/tests/unit/test_skip_validations.py
new file mode 100644
index 0000000..da7d697
--- /dev/null
+++ b/tests/unit/test_skip_validations.py
@@ -0,0 +1,16 @@
+from parameters_validation import validate_parameters, parameter_validation
+
+
+@parameter_validation
+def custom_validation(param, arg_name, arg_type):
+    raise Exception
+
+
+@validate_parameters
+def foo(arg: custom_validation(str)):
+    pass
+
+
+class TestValidateParametersDecoratorSkip:
+    def test_skip_validation(self):
+        foo.skip_validations()("anything")
