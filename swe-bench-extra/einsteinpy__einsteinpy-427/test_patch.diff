diff --git a/src/einsteinpy/tests/test_symbolic/test_predefined/test_all.py b/src/einsteinpy/tests/test_symbolic/test_predefined/test_all.py
index 2bc70b3..37772f8 100644
--- a/src/einsteinpy/tests/test_symbolic/test_predefined/test_all.py
+++ b/src/einsteinpy/tests/test_symbolic/test_predefined/test_all.py
@@ -1,6 +1,8 @@
+import numpy as np
 import pytest
+from sympy import Array
 
-from einsteinpy.symbolic import MetricTensor
+from einsteinpy.symbolic import MetricTensor, simplify_sympy_array
 from einsteinpy.symbolic.predefined import (
     AntiDeSitter,
     AntiDeSitterStatic,
@@ -9,6 +11,7 @@ from einsteinpy.symbolic.predefined import (
     DeSitter,
     Godel,
     Kerr,
+    KerrNewman,
     Minkowski,
     Schwarzschild,
 )
@@ -23,6 +26,7 @@ from einsteinpy.symbolic.predefined import (
         Schwarzschild(),
         Schwarzschild(c=1, sch=2),
         Kerr(),
+        KerrNewman(),
         Minkowski(),
         CMetric(),
         Davidson(),
@@ -31,3 +35,15 @@ from einsteinpy.symbolic.predefined import (
 )
 def test_all_predefined_metrics(metric_instance):
     assert isinstance(metric_instance, MetricTensor)
+
+
+@pytest.mark.parametrize(
+    "m1, m2",
+    [
+        (Schwarzschild(), Kerr(a=0)),  # Schwarzschild is a special case of Kerr
+        (Kerr(), KerrNewman(Q=0)),  # Kerr is a special case of Kerr-Newman
+    ],
+)
+def test_check_two_metrics_are_equal(m1, m2):
+    zero_arr = Array(np.zeros(shape=m1.tensor().shape, dtype=int))
+    assert simplify_sympy_array(m1.tensor() - m2.tensor()) == zero_arr
