diff --git a/tests/test_db.py b/tests/test_db.py
index 98be17a..79547c2 100644
--- a/tests/test_db.py
+++ b/tests/test_db.py
@@ -694,16 +694,31 @@ class TestQuery(object):
         with pytest.raises(ValueError):
             query.start_at(None)
 
+    @pytest.mark.parametrize('arg', ['', 'foo', True, False, 0, 1, dict()])
+    def test_valid_start_at(self, arg):
+        query = self.ref.order_by_child('foo').start_at(arg)
+        assert query._querystr == 'orderBy="foo"&startAt={0}'.format(json.dumps(arg))
+
     def test_end_at_none(self):
         query = self.ref.order_by_child('foo')
         with pytest.raises(ValueError):
             query.end_at(None)
 
+    @pytest.mark.parametrize('arg', ['', 'foo', True, False, 0, 1, dict()])
+    def test_valid_end_at(self, arg):
+        query = self.ref.order_by_child('foo').end_at(arg)
+        assert query._querystr == 'endAt={0}&orderBy="foo"'.format(json.dumps(arg))
+
     def test_equal_to_none(self):
         query = self.ref.order_by_child('foo')
         with pytest.raises(ValueError):
             query.equal_to(None)
 
+    @pytest.mark.parametrize('arg', ['', 'foo', True, False, 0, 1, dict()])
+    def test_valid_equal_to(self, arg):
+        query = self.ref.order_by_child('foo').equal_to(arg)
+        assert query._querystr == 'equalTo={0}&orderBy="foo"'.format(json.dumps(arg))
+
     def test_range_query(self, initquery):
         query, order_by = initquery
         query.start_at(1)
