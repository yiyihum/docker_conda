diff --git a/HISTORY.rst b/HISTORY.rst
index 724abe9..f4bc806 100644
--- a/HISTORY.rst
+++ b/HISTORY.rst
@@ -3,6 +3,9 @@ History
 =======
 
 * Support Python 3.9.
+* Fix query string parameter encoding so that symbols are correctly re-encoded
+  for WSGI, for API Gateway format version 1
+  (`Issue #186 <https://github.com/adamchainz/apig-wsgi/pull/186>`__).
 
 2.9.0 (2020-10-12)
 ------------------
@@ -11,7 +14,8 @@ History
 * Always send ``isBase64Encoded`` in responses, as per the AWS documentation.
 * Support `format version
   2 <https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html>`,
-  which was introduced by API Gateway for “HTTP API's”.
+  which was introduced by API Gateway for “HTTP API's”
+  (`Issue #124 <https://github.com/adamchainz/apig-wsgi/pull/124>`__)..
 * ``binary_support`` now defaults to ``None``, which means that it will
   automatically enable binary support for format version 2 events.
 
diff --git a/src/apig_wsgi.py b/src/apig_wsgi.py
index a261c38..424d008 100644
--- a/src/apig_wsgi.py
+++ b/src/apig_wsgi.py
@@ -2,6 +2,7 @@ import sys
 from base64 import b64decode, b64encode
 from collections import defaultdict
 from io import BytesIO
+from urllib.parse import urlencode
 
 __all__ = ("make_lambda_handler",)
 
@@ -87,14 +88,13 @@ def get_environ_v1(event, context, binary_support):
 
     # Multi-value query strings need explicit activation on ALB
     if "multiValueQueryStringParameters" in event:
-        # may be None when testing on console
-        multi_params = event["multiValueQueryStringParameters"] or {}
+        environ["QUERY_STRING"] = urlencode(
+            # may be None when testing on console
+            event["multiValueQueryStringParameters"] or (),
+            doseq=True,
+        )
     else:
-        single_params = event.get("queryStringParameters") or {}
-        multi_params = {key: [value] for key, value in single_params.items()}
-    environ["QUERY_STRING"] = "&".join(
-        "{}={}".format(key, val) for (key, vals) in multi_params.items() for val in vals
-    )
+        environ["QUERY_STRING"] = urlencode(event.get("queryStringParameters") or ())
 
     # Multi-value headers need explicit activation on ALB
     if "multiValueHeaders" in event:
