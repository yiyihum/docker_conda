diff --git a/cherry_picker/test.py b/cherry_picker/test.py
index 5eb271f..c01ba26 100644
--- a/cherry_picker/test.py
+++ b/cherry_picker/test.py
@@ -636,7 +636,7 @@ def test_get_state_and_verify_fail(
         r"Valid states are: "
         r"[\w_\s]+(, [\w_\s]+)*\. "
         r"If this looks suspicious, raise an issue at "
-        r"https://github.com/python/core-workflow/issues/new\."
+        r"https://github.com/python/cherry-picker/issues/new\."
         "\n"
         r"As the last resort you can reset the runtime state "
         r"stored in Git config using the following command: "
@@ -679,6 +679,18 @@ def test_push_to_remote_botflow(tmp_git_repo_dir, monkeypatch):
     assert get_state() == WORKFLOW_STATES.PR_CREATING
 
 
+def test_push_to_remote_no_auto_pr(tmp_git_repo_dir, monkeypatch):
+    monkeypatch.setenv("GH_AUTH", "True")
+    with mock.patch("cherry_picker.cherry_picker.validate_sha", return_value=True):
+        cherry_picker = CherryPicker("origin", "xxx", [], auto_pr=False)
+
+    with mock.patch.object(cherry_picker, "run_cmd"), mock.patch.object(
+        cherry_picker, "create_gh_pr"
+    ):
+        cherry_picker.push_to_remote("main", "backport-branch-test")
+    assert get_state() == WORKFLOW_STATES.PUSHED_TO_REMOTE
+
+
 def test_backport_no_branch(tmp_git_repo_dir, monkeypatch):
     with mock.patch("cherry_picker.cherry_picker.validate_sha", return_value=True):
         cherry_picker = CherryPicker("origin", "xxx", [])
