diff --git a/cherry_picker/cherry_picker.py b/cherry_picker/cherry_picker.py
index 48baef5..5c6effc 100755
--- a/cherry_picker/cherry_picker.py
+++ b/cherry_picker/cherry_picker.py
@@ -98,6 +98,7 @@ class CherryPicker:
         prefix_commit=True,
         config=DEFAULT_CONFIG,
         chosen_config_path=None,
+        auto_pr=True,
     ):
 
         self.chosen_config_path = chosen_config_path
@@ -125,6 +126,7 @@ class CherryPicker:
         self.branches = branches
         self.dry_run = dry_run
         self.push = push
+        self.auto_pr = auto_pr
         self.prefix_commit = prefix_commit
 
     def set_paused_state(self):
@@ -297,6 +299,8 @@ Co-authored-by: {get_author_info_from_short_sha(self.commit_sha1)}"""
             click.echo(cpe.output)
             set_state(WORKFLOW_STATES.PUSHING_TO_REMOTE_FAILED)
         else:
+            if not self.auto_pr:
+                return
             gh_auth = os.getenv("GH_AUTH")
             if gh_auth:
                 set_state(WORKFLOW_STATES.PR_CREATING)
@@ -526,7 +530,7 @@ To abort the cherry-pick and cleanup:
                 "Valid states are: "
                 f'{", ".join(s.name for s in self.ALLOWED_STATES)}. '
                 "If this looks suspicious, raise an issue at "
-                "https://github.com/python/core-workflow/issues/new.\n"
+                "https://github.com/python/cherry-picker/issues/new.\n"
                 "As the last resort you can reset the runtime state "
                 "stored in Git config using the following command: "
                 "`git config --local --remove-section cherry-picker`"
@@ -577,6 +581,17 @@ CONTEXT_SETTINGS = dict(help_option_names=["-h", "--help"])
     default=True,
     help="Changes won't be pushed to remote",
 )
+@click.option(
+    "--auto-pr/--no-auto-pr",
+    "auto_pr",
+    is_flag=True,
+    default=True,
+    help=(
+        "If auto PR is enabled, cherry-picker will automatically open a PR"
+        " through API if GH_AUTH env var is set, or automatically open the PR"
+        " creation page in the web browser otherwise."
+    ),
+)
 @click.option(
     "--config-path",
     "config_path",
@@ -592,7 +607,7 @@ CONTEXT_SETTINGS = dict(help_option_names=["-h", "--help"])
 @click.argument("branches", nargs=-1)
 @click.pass_context
 def cherry_pick_cli(
-    ctx, dry_run, pr_remote, abort, status, push, config_path, commit_sha1, branches
+    ctx, dry_run, pr_remote, abort, status, push, auto_pr, config_path, commit_sha1, branches
 ):
     """cherry-pick COMMIT_SHA1 into target BRANCHES."""
 
@@ -607,6 +622,7 @@ def cherry_pick_cli(
             branches,
             dry_run=dry_run,
             push=push,
+            auto_pr=auto_pr,
             config=config,
             chosen_config_path=chosen_config_path,
         )
diff --git a/readme.rst b/readme.rst
index 9270c1f..2aa63e1 100644
--- a/readme.rst
+++ b/readme.rst
@@ -301,7 +301,7 @@ Install pytest: ``pip install -U pytest``
 
 ::
 
-    $ pytest test.py
+    $ pytest
 
 
 Publishing to PyPI
