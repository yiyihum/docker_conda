diff --git a/src/spdx/parser/jsonlikedict/file_parser.py b/src/spdx/parser/jsonlikedict/file_parser.py
index eb59fcc..3f4b565 100644
--- a/src/spdx/parser/jsonlikedict/file_parser.py
+++ b/src/spdx/parser/jsonlikedict/file_parser.py
@@ -10,7 +10,10 @@ from spdx.model.file import File, FileType
 from spdx.model.spdx_no_assertion import SpdxNoAssertion
 from spdx.model.spdx_none import SpdxNone
 from spdx.parser.jsonlikedict.checksum_parser import ChecksumParser
-from spdx.parser.jsonlikedict.dict_parsing_functions import parse_field_or_log_error
+from spdx.parser.jsonlikedict.dict_parsing_functions import (
+    parse_field_or_log_error,
+    parse_field_or_no_assertion_or_none,
+)
 from spdx.parser.jsonlikedict.license_expression_parser import LicenseExpressionParser
 from spdx.parser.logger import Logger
 from spdx.parser.parsing_functions import construct_or_raise_parsing_error, raise_parsing_error_if_logger_has_messages
@@ -37,7 +40,9 @@ class FileParser:
 
         attribution_texts: List[str] = file_dict.get("attributionTexts", [])
         comment: Optional[str] = file_dict.get("comment")
-        copyright_text: Optional[str] = file_dict.get("copyrightText")
+        copyright_text: Optional[Union[str, SpdxNoAssertion, SpdxNone]] = parse_field_or_no_assertion_or_none(
+            file_dict.get("copyrightText")
+        )
         file_contributors: List[str] = file_dict.get("fileContributors", [])
         file_types: List[FileType] = parse_field_or_log_error(
             logger, file_dict.get("fileTypes"), self.parse_file_types
diff --git a/src/spdx/parser/jsonlikedict/package_parser.py b/src/spdx/parser/jsonlikedict/package_parser.py
index c79fd11..090a7ad 100644
--- a/src/spdx/parser/jsonlikedict/package_parser.py
+++ b/src/spdx/parser/jsonlikedict/package_parser.py
@@ -58,7 +58,9 @@ class PackageParser:
             logger, package_dict.get("checksums"), self.checksum_parser.parse_checksum, field_is_list=True
         )
         comment: Optional[str] = package_dict.get("comment")
-        copyright_text: Optional[str] = package_dict.get("copyrightText")
+        copyright_text: Optional[Union[str, SpdxNoAssertion, SpdxNone]] = parse_field_or_no_assertion_or_none(
+            package_dict.get("copyrightText")
+        )
         description: Optional[str] = package_dict.get("description")
         download_location: Optional[Union[str, SpdxNoAssertion, SpdxNone]] = parse_field_or_no_assertion_or_none(
             package_dict.get("downloadLocation")
@@ -78,7 +80,9 @@ class PackageParser:
             elif files_analyzed.lower() == "false":
                 files_analyzed = False
 
-        homepage: Optional[str] = package_dict.get("homepage")
+        homepage: Optional[Union[str, SpdxNoAssertion, SpdxNone]] = parse_field_or_no_assertion_or_none(
+            package_dict.get("homepage")
+        )
         license_comments: Optional[str] = package_dict.get("licenseComments")
         license_concluded = parse_field_or_log_error(
             logger, package_dict.get("licenseConcluded"), self.license_expression_parser.parse_license_expression
diff --git a/src/spdx/parser/jsonlikedict/snippet_parser.py b/src/spdx/parser/jsonlikedict/snippet_parser.py
index 52d2194..c4f5250 100644
--- a/src/spdx/parser/jsonlikedict/snippet_parser.py
+++ b/src/spdx/parser/jsonlikedict/snippet_parser.py
@@ -10,7 +10,10 @@ from spdx.model.snippet import Snippet
 from spdx.model.spdx_no_assertion import SpdxNoAssertion
 from spdx.model.spdx_none import SpdxNone
 from spdx.parser.error import SPDXParsingError
-from spdx.parser.jsonlikedict.dict_parsing_functions import parse_field_or_log_error
+from spdx.parser.jsonlikedict.dict_parsing_functions import (
+    parse_field_or_log_error,
+    parse_field_or_no_assertion_or_none,
+)
 from spdx.parser.jsonlikedict.license_expression_parser import LicenseExpressionParser
 from spdx.parser.logger import Logger
 from spdx.parser.parsing_functions import construct_or_raise_parsing_error
@@ -43,7 +46,9 @@ class SnippetParser:
 
         attribution_texts: List[str] = snippet_dict.get("attributionTexts", [])
         comment: Optional[str] = snippet_dict.get("comment")
-        copyright_text: Optional[str] = snippet_dict.get("copyrightText")
+        copyright_text: Optional[Union[str, SpdxNoAssertion, SpdxNone]] = parse_field_or_no_assertion_or_none(
+            snippet_dict.get("copyrightText")
+        )
         license_comment: Optional[str] = snippet_dict.get("licenseComments")
         license_concluded: Optional[Union[LicenseExpression, SpdxNoAssertion, SpdxNone]] = parse_field_or_log_error(
             logger, snippet_dict.get("licenseConcluded"), self.license_expression_parser.parse_license_expression

