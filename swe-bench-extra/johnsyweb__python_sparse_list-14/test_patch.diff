diff --git a/test_sparse_list.py b/test_sparse_list.py
index ca22327..dc6feb7 100755
--- a/test_sparse_list.py
+++ b/test_sparse_list.py
@@ -141,32 +141,32 @@ class TestSparseList(unittest.TestCase):
     def test_present_item_removal(self):
         sl = sparse_list.SparseList({0: 1, 4: 1}, 0)
         del sl[0]
-        self.assertEqual([0, 0, 0, 0, 1], sl)
+        self.assertEqual([0, 0, 0, 1], sl)
 
     def test_missing_item_removal(self):
         sl = sparse_list.SparseList({0: 1, 4: 1}, 0)
         del sl[1]
-        self.assertEqual([1, 0, 0, 0, 1], sl)
+        self.assertEqual([1, 0, 0, 1], sl)
 
     def test_slice_removal(self):
         sl = sparse_list.SparseList(xrange(10), None)
         del sl[3:5]
-        self.assertEqual([0, 1, 2, None, None, 5, 6, 7, 8, 9], sl)
+        self.assertEqual([0, 1, 2, 5, 6, 7, 8, 9], sl)
 
     def test_unbounded_head_slice_removal(self):
         sl = sparse_list.SparseList(xrange(10), None)
         del sl[:3]
-        self.assertEqual([None, None, None, 3, 4, 5, 6, 7, 8, 9], sl)
+        self.assertEqual([3, 4, 5, 6, 7, 8, 9], sl)
 
     def test_unbounded_tail_slice_removal(self):
         sl = sparse_list.SparseList(xrange(10), None)
         del sl[5:]
-        self.assertEqual([0, 1, 2, 3, 4, None, None, None, None, None], sl)
+        self.assertEqual([0, 1, 2, 3, 4], sl)
 
     def test_stepped_slice_removal(self):
         sl = sparse_list.SparseList(xrange(6), None)
         del sl[::2]
-        self.assertEqual([None, 1, None, 3, None, 5], sl)
+        self.assertEqual([1, 3, 5], sl)
 
     def test_append(self):
         sl = sparse_list.SparseList(1, 0)
@@ -330,23 +330,23 @@ class TestSparseList(unittest.TestCase):
     def test_set_slice_observes_stop(self):
         sl = sparse_list.SparseList(4, None)
         sl[0:2] = [1, 2, 3]
-        self.assertEquals([1, 2, None, None], sl)
+        self.assertEqual([1, 2, None, None], sl)
 
     def test_set_slice_resizes(self):
         sl = sparse_list.SparseList(0, None)
         sl[4:] = [4, 5]
-        self.assertEquals([None, None, None, None, 4, 5], sl)
-        self.assertEquals(len(sl), 6)
+        self.assertEqual([None, None, None, None, 4, 5], sl)
+        self.assertEqual(len(sl), 6)
 
     def test_set_slice_extends_past_end(self):
         sl = sparse_list.SparseList(5, None)
         sl[3:] = [6, 7, 8]
-        self.assertEquals([None, None, None, 6, 7, 8], sl)
+        self.assertEqual([None, None, None, 6, 7, 8], sl)
 
     def test_set_slice_with_step(self):
         sl = sparse_list.SparseList(6, None)
         sl[::2] = [1, 2, 3]
-        self.assertEquals([1, None, 2, None, 3, None], sl)
+        self.assertEqual([1, None, 2, None, 3, None], sl)
 
 if __name__ == '__main__':
     unittest.main()
