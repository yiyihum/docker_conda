diff --git a/docs/azure_blobs_setup.md b/docs/azure_blobs_setup.md
index 135b7c5..447dbc7 100644
--- a/docs/azure_blobs_setup.md
+++ b/docs/azure_blobs_setup.md
@@ -11,15 +11,7 @@ Create a new storage account or use an existing one which will be used to store
     "key": "YOUR_KEY"
 }
 ```
-If you need to set a different host for Azure (for example the host for Azure Gov is `<storageAccount>.blob.core.usgovcloudapi.net`), please ADDITIONALLY set these two fields in the JSON file (the connection string can be found with the key):
-
-```
-"host": "YOUR_HOST"
-"connection_string": "YOUR_CONNECTION_STRING"
-
-```
-
-Place this file on all Apache Cassandra™ nodes running medusa under `/etc/medusa/`and set the rigths appropriately so that onyl users running Medusa can read/modify it.
+Place this file on all Apache Cassandra™ nodes running medusa under `/etc/medusa/`and set the rights appropriately so that only users running Medusa can read/modify it.
 
 ### Create a container
 
@@ -36,3 +28,8 @@ key_file = /etc/medusa/medusa-azure-credentials
 
 Medusa should now be able to access the bucket and perform all required operations.
 
+If you need to set a different host for Azure (for example the host for Azure Gov is `<storageAccount>.blob.core.usgovcloudapi.net`), please use the `host` parameter in the `[storage]` section of `/etc/medusa/medusa.ini`:
+
+```
+"host": "usgovcloudapi.net"
+```
diff --git a/medusa/storage/azure_storage.py b/medusa/storage/azure_storage.py
index 9faee5a..9d25b79 100644
--- a/medusa/storage/azure_storage.py
+++ b/medusa/storage/azure_storage.py
@@ -49,15 +49,25 @@ class AzureStorage(AbstractStorage):
         self.account_name = self.credentials.named_key.name
         self.bucket_name = config.bucket_name
 
+        self.azure_blob_service_url = self._make_blob_service_url(self.account_name, config)
+
         # disable chatty loggers
         logging.getLogger('azure.core.pipeline.policies.http_logging_policy').setLevel(logging.WARNING)
         logging.getLogger('chardet.universaldetector').setLevel(logging.WARNING)
 
         super().__init__(config)
 
+    def _make_blob_service_url(self, account_name, config):
+        domain = 'windows.net' if config.host is None else config.host
+        if config.port is None:
+            url = f"https://{account_name}.blob.core.{domain}/"
+        else:
+            url = f"https://{account_name}.blob.core.{domain}:{config.port}/"
+        return url
+
     def connect(self):
         self.azure_blob_service = BlobServiceClient(
-            account_url=f"https://{self.account_name}.blob.core.windows.net/",
+            account_url=self.azure_blob_service_url,
             credential=self.credentials
         )
         self.azure_container_client = self.azure_blob_service.get_container_client(self.bucket_name)
