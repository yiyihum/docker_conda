diff --git a/dataclasses_avroschema/fields/fields.py b/dataclasses_avroschema/fields/fields.py
index b7fee26..56b3a9e 100644
--- a/dataclasses_avroschema/fields/fields.py
+++ b/dataclasses_avroschema/fields/fields.py
@@ -692,7 +692,11 @@ class RecordField(Field):
         return record_type
 
     def default_to_avro(self, value: "schema_generator.AvroModel") -> typing.Dict:
-        return value.to_dict()
+        schema_def = value.schema_def or value._generate_avro_schema()
+        return {
+            fieldname: field.default_to_avro(getattr(value, fieldname))
+            for fieldname, field in schema_def.get_fields_map().items()
+        }
 
     def fake(self) -> typing.Any:
         return self.type.fake()
diff --git a/dataclasses_avroschema/schema_definition.py b/dataclasses_avroschema/schema_definition.py
index e988ca2..50bec76 100644
--- a/dataclasses_avroschema/schema_definition.py
+++ b/dataclasses_avroschema/schema_definition.py
@@ -170,3 +170,6 @@ class AvroSchemaDefinition(BaseSchemaDefinition):
             schema["aliases"] = self.metadata.aliases
 
         return schema
+
+    def get_fields_map(self) -> typing.Dict[str, Field]:
+        return self.fields_map
