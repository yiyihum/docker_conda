diff --git a/csv2md/test_table.py b/csv2md/test_table.py
index a6128cf..0ca823e 100644
--- a/csv2md/test_table.py
+++ b/csv2md/test_table.py
@@ -26,6 +26,15 @@ normal_cells = [
 
 normal_widths = [4, 5, 26, 33, 7]
 
+filtered_columns_cells = [
+    ['year', 'model', 'description'],
+    ['1997', 'E350', 'ac, abs, moon'],
+    ['1999', 'Venture «Extended Edition»', ''],
+    ['1996', 'Grand Cherokee', 'MUST SELL! air, moon roof, loaded']
+]
+
+filtered_columns_widths = [4, 26, 33]
+
 normal_md = (
     '| year | make  | model                      | description                       | price   |\n'
     '| ---- | ----- | -------------------------- | --------------------------------- | ------- |\n'
@@ -91,6 +100,20 @@ class TestTable(TestCase):
         self.assertEqual(expected_cells, actual.cells)
         self.assertEqual(expected_widths, actual.widths)
 
+    def test_parse_csv_with_columns(self):
+        expected_cells = filtered_columns_cells
+        expected_widths = filtered_columns_widths
+        actual = Table.parse_csv(io.StringIO(normal_csv), columns=[0, 2, 3])
+        self.assertEqual(expected_cells, actual.cells)
+        self.assertEqual(expected_widths, actual.widths)
+
+    def test_parse_csv_with_invalid_columns(self):
+        expected_cells = filtered_columns_cells
+        expected_widths = filtered_columns_widths
+        actual = Table.parse_csv(io.StringIO(normal_csv), columns=[-10, -1, 0, 2, 3, 5, 10, 100])
+        self.assertEqual(expected_cells, actual.cells)
+        self.assertEqual(expected_widths, actual.widths)
+
     def test_make_default_headers(self):
         expected = ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',
                     'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',
