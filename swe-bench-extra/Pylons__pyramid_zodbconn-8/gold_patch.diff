diff --git a/CHANGES.txt b/CHANGES.txt
index 52d8686..2d15203 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,6 +1,12 @@
 0.8 (unreleased)
 ----------------
 
+- Open primary database using ``request.tm``, if present, as the transaction
+  manager.  If not present, fall back to the default / global transaction
+  manager.  Compatibility with ``pyramid_tm >= `0.11`, which allowed the
+  user to specify an explicit per-request transaction factory.
+  https://github.com/Pylons/pyramid_zodbconn/issues/6.
+
 - Add support for Python 3.5 and 3.6.
 
 - Drop support for Python 2.6, 3.2, and 3.3.
diff --git a/pyramid_zodbconn/__init__.py b/pyramid_zodbconn/__init__.py
index 4e96b6f..9c89ac3 100644
--- a/pyramid_zodbconn/__init__.py
+++ b/pyramid_zodbconn/__init__.py
@@ -11,7 +11,7 @@ from .compat import text_
 def get_connection(request, dbname=None):
     """
     ``request`` must be a Pyramid request object.
-    
+
     When called with no ``dbname`` argument or a ``dbname`` argument of
     ``None``, return a connection to the primary datbase (the database set
     up as ``zodbconn.uri`` in the current configuration).
@@ -46,7 +46,8 @@ def get_connection(request, dbname=None):
             raise ConfigurationError(
                 'No zodbconn.uri defined in Pyramid settings')
 
-        primary_conn = primary_db.open()
+        tm = getattr(request, 'tm', None)
+        primary_conn = primary_db.open(transaction_manager=tm)
 
         registry.notify(ZODBConnectionOpened(primary_conn, request))
 
@@ -62,7 +63,7 @@ def get_connection(request, dbname=None):
 
     if dbname is None:
         return primary_conn
-    
+
     try:
         conn = primary_conn.get_connection(dbname)
     except KeyError:
