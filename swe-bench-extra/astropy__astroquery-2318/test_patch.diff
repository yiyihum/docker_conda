diff --git a/astroquery/casda/tests/test_casda.py b/astroquery/casda/tests/test_casda.py
index a868ed9b..fe74075f 100644
--- a/astroquery/casda/tests/test_casda.py
+++ b/astroquery/casda/tests/test_casda.py
@@ -284,7 +284,8 @@ def test_stage_data(patch_get):
 
 def test_download_file(patch_get):
     urls = ['https://ingest.pawsey.org/bucket_name/path/askap_img.fits?security=stuff',
-            'http://casda.csiro.au/download/web/111-000-111-000/askap_img.fits.checksum']
+            'http://casda.csiro.au/download/web/111-000-111-000/askap_img.fits.checksum',
+            'https://ingest.pawsey.org.au/casda-prd-as110-01/dc52217/primary_images/RACS-DR1_0000%2B18A.fits?security=stuff']
     casda = Casda('user', 'password')
 
     # skip the actual downloading of the file
@@ -294,3 +295,4 @@ def test_download_file(patch_get):
     filenames = casda.download_files(urls)
     assert filenames[0].endswith('askap_img.fits')
     assert filenames[1].endswith('askap_img.fits.checksum')
+    assert filenames[2].endswith('RACS-DR1_0000+18A.fits')
diff --git a/astroquery/sdss/tests/test_sdss.py b/astroquery/sdss/tests/test_sdss.py
index bb92c01b..38b7d1d4 100644
--- a/astroquery/sdss/tests/test_sdss.py
+++ b/astroquery/sdss/tests/test_sdss.py
@@ -136,7 +136,9 @@ def url_tester(data_release):
 
 
 def url_tester_crossid(data_release):
-    if data_release < 11:
+    if data_release < 10:
+        baseurl = 'http://skyserver.sdss.org/dr{}/en/tools/crossid/x_crossid.asp'
+    if data_release == 10:
         baseurl = 'http://skyserver.sdss.org/dr{}/en/tools/crossid/x_crossid.aspx'
     if data_release == 11:
         return
diff --git a/astroquery/sdss/tests/test_sdss_remote.py b/astroquery/sdss/tests/test_sdss_remote.py
index 723195f2..26251eaf 100644
--- a/astroquery/sdss/tests/test_sdss_remote.py
+++ b/astroquery/sdss/tests/test_sdss_remote.py
@@ -174,8 +174,7 @@ class TestSDSSRemote:
         assert query1.colnames == ['r', 'psfMag_r']
         assert query2.colnames == ['ra', 'dec', 'r']
 
-    # crossid doesn't work for DR<10, remove limitation once #2303 is fixed
-    @pytest.mark.parametrize("dr", dr_list[2:])
+    @pytest.mark.parametrize("dr", dr_list)
     def test_query_crossid(self, dr):
         query1 = sdss.SDSS.query_crossid(self.coords, data_release=dr)
         query2 = sdss.SDSS.query_crossid([self.coords, self.coords])
@@ -185,8 +184,7 @@ class TestSDSSRemote:
         assert isinstance(query2, Table)
         assert query2['objID'][0] == query1['objID'][0] == query2['objID'][1]
 
-    # crossid doesn't work for DR<10, remove limitation once #2303 is fixed
-    @pytest.mark.parametrize("dr", dr_list[2:])
+    @pytest.mark.parametrize("dr", dr_list)
     def test_spectro_query_crossid(self, dr):
         query1 = sdss.SDSS.query_crossid(self.coords,
                                          specobj_fields=['specObjID', 'z'],
