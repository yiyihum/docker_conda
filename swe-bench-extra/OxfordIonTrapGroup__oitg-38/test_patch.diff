diff --git a/test/test_threshold.py b/test/test_threshold.py
index 8d9f1dd..af7eb79 100755
--- a/test/test_threshold.py
+++ b/test/test_threshold.py
@@ -3,36 +3,32 @@ from oitg.threshold import *
 
 
 class ThresholdTest(unittest.TestCase):
-    def test_threshold(self):
-        bright = 4e4
-        dark = 2e4
-        t_bin = 2e-3
+    def test_optimise_readout(self):
+        bright_rate = 9.e4
+        dark_rate = 3e4
         p_bright = 0.5
-        calc_thresh_rate(bright, dark, t_bin=t_bin, p_bright=p_bright)
-
-    def test_calc_p_error(self):
-        bright = 4e4
-        dark = 2e4
-        t_bin = 2e-3
-        p_bright = 0.5
-        calc_p_error(bright, dark, t_bin, p_bright)
-
-    def test_bin_time(self):
-        bright = 4e4
-        dark = 2e4
+        dark_to_bright_rate = 1 / 1.168
+        t_bin, threshold, p_error = optimise_readout(
+            bright_rate, dark_rate, dark_to_bright_rate=dark_to_bright_rate,
+            p_bright=p_bright,)
+        self.assertAlmostEqual(0.0010438517809917116, t_bin,
+                               delta=0.01 * 0.0010438517809917116)
+        self.assertEqual(58, threshold)
+        self.assertAlmostEqual(0.000285363868745659, p_error,
+                               delta=0.01 * 0.000285363868745659)
+
+    def test_optimise_t_bin(self):
+        bright_rate = 9.e4
+        dark_rate = 3e4
         p_bright = 0.5
-        error_target = 1e-3
-
-        t_bin, thresh_rate = calc_target_bin_time(bright,
-                                                  dark,
-                                                  error_target,
-                                                  p_bright=p_bright)
-
-        self.assertAlmostEqual(error_target,
-                               calc_p_error(bright, dark, t_bin, p_bright),
-                               delta=0.01 * error_target)
-        self.assertAlmostEqual(
-            thresh_rate, calc_thresh_rate(bright, dark, t_bin=t_bin, p_bright=p_bright))
+        dark_to_bright_rate = 1 / 1.168
+        t_bin, p_error = optimise_t_bin(
+            bright_rate, dark_rate, 58,
+            dark_to_bright_rate=dark_to_bright_rate, p_bright=p_bright,)
+        self.assertAlmostEqual(0.0010438517809917116, t_bin,
+                               delta=0.01 * 0.0010438517809917116)
+        self.assertAlmostEqual(0.000285363868745659, p_error,
+                               delta=0.01 * 0.000285363868745659)
 
 
 if __name__ == '__main__':
