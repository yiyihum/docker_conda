diff --git a/tests/unit/TestJinjaCommentHasSpaces.py b/tests/unit/TestJinjaCommentHasSpaces.py
index 60796fe..ea5e59e 100644
--- a/tests/unit/TestJinjaCommentHasSpaces.py
+++ b/tests/unit/TestJinjaCommentHasSpaces.py
@@ -12,6 +12,12 @@ from tests import RunFromText
 
 GOOD_COMMENT_LINE = '''
 {#- set example='good' +#}
+
+{% raw %}
+    # The following line should be ignored as it is placed in a Jinja escape
+    # block
+    {#-set example='bad'+#}
+{% endraw %}
 '''
 
 BAD_COMMENT_LINE = '''
diff --git a/tests/unit/TestJinjaStatementHasSpaces.py b/tests/unit/TestJinjaStatementHasSpaces.py
index 947a876..f1534f6 100644
--- a/tests/unit/TestJinjaStatementHasSpaces.py
+++ b/tests/unit/TestJinjaStatementHasSpaces.py
@@ -12,6 +12,12 @@ from tests import RunFromText
 
 GOOD_STATEMENT_LINE = '''
 {%- set example='good' +%}
+
+{% raw %}
+    # The following line should be ignored as it is placed in a Jinja escape
+    # block
+    {%-set example='bad'+%}
+{% endraw %}
 '''
 
 BAD_STATEMENT_LINE = '''
diff --git a/tests/unit/TestJinjaVariableHasSpaces.py b/tests/unit/TestJinjaVariableHasSpaces.py
index 301cb8d..4e53f33 100644
--- a/tests/unit/TestJinjaVariableHasSpaces.py
+++ b/tests/unit/TestJinjaVariableHasSpaces.py
@@ -1,7 +1,7 @@
 # -*- coding: utf-8 -*-
 # Copyright (c) 2013-2018 Will Thames <will@thames.id.au>
 # Copyright (c) 2018 Ansible by Red Hat
-# Modified work Copyright (c) 2020 Warpnet B.V.
+# Modified work Copyright (c) 2020-2021 Warpnet B.V.
 
 import unittest
 
@@ -14,6 +14,19 @@ GOOD_VARIABLE_LINE = '''
 {{- variable +}}
 '''
 
+GOOD_VARIABLE_LINE_RAW = '''
+{% raw %}
+{{variable}}
+{% endraw %}
+'''
+
+BAD_VARIABLE_LINE_RAW = '''
+{% raw %}
+{{variable}}
+{% endraw %}
+{{variable}}  # line 5
+'''
+
 BAD_VARIABLE_LINE = '''
 {{-variable+}}
 '''
@@ -49,6 +62,19 @@ class TestJinjaVariableHasSpaces(unittest.TestCase):
         results = self.runner.run_state(GOOD_VARIABLE_LINE)
         self.assertEqual(0, len(results))
 
+    def test_statement_jinja_raw_positive(self):
+        """Check if Jinja looking variables between raw-blocks are ignored."""
+        results = self.runner.run_state(GOOD_VARIABLE_LINE_RAW)
+        self.assertEqual(0, len(results))
+
+    def test_statement_jinja_raw_negative(self):
+        """Check if Jinja looking variables between raw-blocks are ignored."""
+        results = self.runner.run_state(BAD_VARIABLE_LINE_RAW)
+        # Check if the correct number of matches are found
+        self.assertEqual(1, len(results))
+        # Check if the match occurred on the correct line
+        self.assertEqual(results[0].linenumber, 5)
+
     def test_statement_negative(self):
         results = self.runner.run_state(BAD_VARIABLE_LINE)
         self.assertEqual(1, len(results))
