diff --git a/src/spdx/validation/document_validator.py b/src/spdx/validation/document_validator.py
index a3fa007..fe6422a 100644
--- a/src/spdx/validation/document_validator.py
+++ b/src/spdx/validation/document_validator.py
@@ -21,6 +21,7 @@ from spdx.validation.file_validator import validate_files
 from spdx.validation.package_validator import validate_packages
 from spdx.validation.relationship_validator import validate_relationships
 from spdx.validation.snippet_validator import validate_snippets
+from spdx.validation.spdx_id_validators import get_list_of_all_spdx_ids
 from spdx.validation.validation_message import ValidationMessage, ValidationContext, SpdxElementType
 
 
@@ -74,4 +75,16 @@ def validate_full_spdx_document(document: Document, spdx_version: str = None) ->
                 ValidationContext(spdx_id=document_id,
                                   element_type=SpdxElementType.DOCUMENT)))
 
+    all_spdx_ids: List[str] = get_list_of_all_spdx_ids(document)
+    auxiliary_set = set()
+    duplicated_spdx_ids = set(
+        spdx_id for spdx_id in all_spdx_ids if spdx_id in auxiliary_set or auxiliary_set.add(spdx_id))
+
+    if duplicated_spdx_ids:
+        validation_messages.append(
+            ValidationMessage(
+                f"every spdx_id must be unique within the document, but found the following duplicates: {sorted(duplicated_spdx_ids)}",
+                context)
+        )
+
     return validation_messages
diff --git a/src/spdx/validation/spdx_id_validators.py b/src/spdx/validation/spdx_id_validators.py
index dfe25f4..cdf8f0c 100644
--- a/src/spdx/validation/spdx_id_validators.py
+++ b/src/spdx/validation/spdx_id_validators.py
@@ -53,8 +53,7 @@ def validate_spdx_id(spdx_id: str, document: Document, check_document: bool = Fa
     str]:
     """ Test that the given spdx_id (and a potential DocumentRef to an external document) is valid
     and, if it is a reference, actually exists in the document. Optionally checks files or the whole document
-    for the existence of the spdx_id (i.e. if it is used as a reference). Returns a list of validation messages,
-    and the external document ref part and id part of the provided spdx_id. """
+    for the existence of the spdx_id (i.e. if it is used as a reference). Returns a list of validation messages. """
 
     validation_messages: List[str] = []
     split_id: List[str] = spdx_id.split(":")
@@ -74,7 +73,7 @@ def validate_spdx_id(spdx_id: str, document: Document, check_document: bool = Fa
                 f'the internal SPDX id part of spdx_id must only contain letters, numbers, "." and "-" and must begin with "SPDXRef-", but is: {split_id[1]}')
         if not is_external_doc_ref_present_in_document(split_id[0], document):
             validation_messages.append(
-                f"did not find the external document reference {split_id[0]} in the SPDX document")
+                f'did not find the external document reference "{split_id[0]}" in the SPDX document')
 
         return validation_messages
 
@@ -85,10 +84,10 @@ def validate_spdx_id(spdx_id: str, document: Document, check_document: bool = Fa
 
     if check_document:
         if not is_spdx_id_present_in_document(spdx_id, document):
-            validation_messages.append(f"did not find the referenced spdx_id {spdx_id} in the SPDX document")
+            validation_messages.append(f'did not find the referenced spdx_id "{spdx_id}" in the SPDX document')
 
     if check_files:
         if not is_spdx_id_present_in_files(spdx_id, document.files):
-            validation_messages.append(f"did not find the referenced spdx_id {spdx_id} in the SPDX document's files")
+            validation_messages.append(f'did not find the referenced spdx_id "{spdx_id}" in the SPDX document\'s files')
 
     return validation_messages
