diff --git a/Testing/models/model_cmplx_in_abstr_seq1.txt b/Testing/models/model_cmplx_in_abstr_seq1.txt
new file mode 100644
index 0000000..f03c61d
--- /dev/null
+++ b/Testing/models/model_cmplx_in_abstr_seq1.txt
@@ -0,0 +1,5 @@
+#! rules
+S{i}:A():A2::cell  => A()::cell
+
+#! complexes
+A2 = A().A()
diff --git a/Testing/models/model_cmplx_in_abstr_seq2.txt b/Testing/models/model_cmplx_in_abstr_seq2.txt
new file mode 100644
index 0000000..801026b
--- /dev/null
+++ b/Testing/models/model_cmplx_in_abstr_seq2.txt
@@ -0,0 +1,2 @@
+#! rules
+S{i}:A():A().A()::cell => A()::cell
diff --git a/Testing/parsing/test_cmplx_in_abstr_seq.py b/Testing/parsing/test_cmplx_in_abstr_seq.py
new file mode 100644
index 0000000..068f47d
--- /dev/null
+++ b/Testing/parsing/test_cmplx_in_abstr_seq.py
@@ -0,0 +1,17 @@
+import pytest
+
+from Testing.models.get_model_str import get_model_str
+import Testing.objects_testing as objects
+
+
+def test_complexes_in_abstract_sequence():
+    # is allowed
+    model = get_model_str("model_cmplx_in_abstr_seq1")
+    ret1 = objects.model_parser.parse(model)
+    assert ret1.success
+
+    # should be allowed
+    model = get_model_str("model_cmplx_in_abstr_seq2")
+    ret2 = objects.model_parser.parse(model)
+    assert ret2.success
+    assert ret1.data == ret2.data
