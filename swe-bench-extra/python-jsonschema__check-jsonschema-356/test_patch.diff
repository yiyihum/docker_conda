diff --git a/tests/acceptance/test_example_files.py b/tests/acceptance/test_example_files.py
index 3b23e2c..94980f8 100644
--- a/tests/acceptance/test_example_files.py
+++ b/tests/acceptance/test_example_files.py
@@ -64,7 +64,7 @@ def test_hook_positive_examples(case_name, run_line):
 
     hook_id = POSITIVE_HOOK_CASES[case_name]
     ret = run_line(HOOK_CONFIG[hook_id] + [rcase.path] + rcase.add_args)
-    assert ret.exit_code == 0
+    assert ret.exit_code == 0, _format_cli_result(rcase, ret)
 
 
 @pytest.mark.parametrize("case_name", NEGATIVE_HOOK_CASES.keys())
@@ -73,7 +73,7 @@ def test_hook_negative_examples(case_name, run_line):
 
     hook_id = NEGATIVE_HOOK_CASES[case_name]
     ret = run_line(HOOK_CONFIG[hook_id] + [rcase.path] + rcase.add_args)
-    assert ret.exit_code == 1
+    assert ret.exit_code == 1, _format_cli_result(rcase, ret)
 
 
 @pytest.mark.parametrize("case_name", _get_explicit_cases("positive"))
@@ -167,3 +167,13 @@ def _package_is_installed(pkg: str) -> bool:
     if spec is None:
         return False
     return True
+
+
+def _format_cli_result(rcase: ResolvedCase, result) -> str:
+    return (
+        "\n"
+        f"config.add_args={rcase.add_args}\n"
+        f"{result.exit_code=}\n"
+        f"result.stdout={result.output}\n"
+        f"{result.stderr=}"
+    )
diff --git a/tests/example-files/hooks/negative/jsonschema/_config.yaml b/tests/example-files/hooks/negative/jsonschema/_config.yaml
new file mode 100644
index 0000000..68e9596
--- /dev/null
+++ b/tests/example-files/hooks/negative/jsonschema/_config.yaml
@@ -0,0 +1,3 @@
+files:
+  github-workflow-timeout-minutes-expression.yaml:
+    add_args: ["--builtin-schema", "custom.github-workflows-require-timeout"]
diff --git a/tests/example-files/hooks/negative/jsonschema/github-workflow-timeout-minutes-expression.yaml b/tests/example-files/hooks/negative/jsonschema/github-workflow-timeout-minutes-expression.yaml
new file mode 100644
index 0000000..3a7324a
--- /dev/null
+++ b/tests/example-files/hooks/negative/jsonschema/github-workflow-timeout-minutes-expression.yaml
@@ -0,0 +1,12 @@
+on:
+  workflow-call:
+    inputs:
+      qemu:
+          default: ''
+          required: false
+
+jobs:
+  job-id:
+    runs-on: ubuntu-latest
+    # missing trailing '}'
+    timeout-minutes: ${{ inputs.qemu && '60' || '20' }
diff --git a/tests/example-files/hooks/positive/jsonschema/_config.yaml b/tests/example-files/hooks/positive/jsonschema/_config.yaml
new file mode 100644
index 0000000..68e9596
--- /dev/null
+++ b/tests/example-files/hooks/positive/jsonschema/_config.yaml
@@ -0,0 +1,3 @@
+files:
+  github-workflow-timeout-minutes-expression.yaml:
+    add_args: ["--builtin-schema", "custom.github-workflows-require-timeout"]
diff --git a/tests/example-files/hooks/positive/jsonschema/github-workflow-timeout-minutes-expression.yaml b/tests/example-files/hooks/positive/jsonschema/github-workflow-timeout-minutes-expression.yaml
new file mode 100644
index 0000000..4b30a1c
--- /dev/null
+++ b/tests/example-files/hooks/positive/jsonschema/github-workflow-timeout-minutes-expression.yaml
@@ -0,0 +1,11 @@
+on:
+  workflow-call:
+    inputs:
+      qemu:
+          default: ''
+          required: false
+
+jobs:
+  job-id:
+    runs-on: ubuntu-latest
+    timeout-minutes: ${{ inputs.qemu && '60' || '20' }}
