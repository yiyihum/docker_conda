diff --git a/pybryt/annotations/annotation.py b/pybryt/annotations/annotation.py
index f386995..5abfe34 100644
--- a/pybryt/annotations/annotation.py
+++ b/pybryt/annotations/annotation.py
@@ -4,13 +4,12 @@ __all__ = ["Annotation", "AnnotationResult"]
 
 from abc import ABC, abstractmethod
 from dataclasses import dataclass
-from typing import Any, Dict, List, Optional, Tuple
+from typing import Any, Dict, List, Optional
 
 from ..execution import is_complexity_tracing_enabled, MemoryFootprint
 
 
 _TRACKED_ANNOTATIONS = []
-_GROUP_INDICES = {}
 _ANNOTATION_COUNTER = 0
 
 
@@ -71,23 +70,12 @@ class Annotation(ABC):
     
     def _track(self) -> None:
         """
-        Tracks this annotation in ``_TRACKED_ANNOTATIONS`` and updates ``_GROUP_INDICES`` with the
-        index of the annotation if ``self.group`` is present. If the annotation has children
+        Tracks this annotation in ``_TRACKED_ANNOTATIONS``. If the annotation has children
         (returned by ``self.children``), the children are removed from ``_TRACKED_ANNOTATIONS``.
         """
         if is_complexity_tracing_enabled():
             return
 
-        global _GROUP_INDICES, _TRACKED_ANNOTATIONS
-
-        idx = len(_TRACKED_ANNOTATIONS)
-        if self.name not in _GROUP_INDICES:
-            _GROUP_INDICES[self.name] = []
-        if self.limit is not None and len(_GROUP_INDICES[self.name]) >= self.limit:
-            return
-        else:
-            _GROUP_INDICES[self.name].append(idx)
-    
         for child in self.children:
             try:
                 _TRACKED_ANNOTATIONS.remove(child)
@@ -112,9 +100,8 @@ class Annotation(ABC):
         Resets the list of tracked annotations and the mapping of group names to indices in that
         list.
         """
-        global _ANNOTATION_COUNTER, _GROUP_INDICES, _TRACKED_ANNOTATIONS
+        global _ANNOTATION_COUNTER, _TRACKED_ANNOTATIONS
         _TRACKED_ANNOTATIONS.clear()
-        _GROUP_INDICES.clear()
         _ANNOTATION_COUNTER = 0
 
     @property
diff --git a/pybryt/reference.py b/pybryt/reference.py
index a635c10..4e0772b 100644
--- a/pybryt/reference.py
+++ b/pybryt/reference.py
@@ -38,7 +38,19 @@ class ReferenceImplementation(Serializable):
         if not all(isinstance(ann, Annotation) for ann in annotations):
             raise TypeError("Found non-annotation in annotations")
         
-        self.annotations = annotations
+        self.annotations, name_counts = [], {}
+        for ann in annotations:
+            track = True
+            if ann.name is not None:
+                count = name_counts.get(ann.name, 0)
+                if ann.limit is None or ann.limit > count:
+                    name_counts[ann.name] = count + 1
+                else:
+                    track = False
+
+            if track:
+                self.annotations.append(ann)
+
         self.name = name
 
     def __eq__(self, other: Any) -> bool:

