diff --git a/artifactory_cleanup/cli.py b/artifactory_cleanup/cli.py
index 312c999..b168ecf 100644
--- a/artifactory_cleanup/cli.py
+++ b/artifactory_cleanup/cli.py
@@ -1,3 +1,4 @@
+import json
 import logging
 import sys
 from datetime import timedelta, date
@@ -5,6 +6,7 @@ from datetime import timedelta, date
 import requests
 from hurry.filesize import size
 from plumbum import cli
+from plumbum.cli.switches import Set
 from prettytable import PrettyTable
 from requests.auth import HTTPBasicAuth
 
@@ -62,6 +64,19 @@ class ArtifactoryCleanupCLI(cli.Application):
         mandatory=False,
     )
 
+    _output_file = cli.SwitchAttr(
+        "--output", help="Choose the output file", mandatory=False
+    )
+
+    _output_format = cli.SwitchAttr(
+        "--output-format",
+        Set("table", "json", case_sensitive=False),
+        help="Choose the output format",
+        default="table",
+        requires=["--output"],
+        mandatory=False,
+    )
+
     @property
     def VERSION(self):
         # To prevent circular imports
@@ -83,6 +98,36 @@ class ArtifactoryCleanupCLI(cli.Application):
             print(f"Simulating cleanup actions that will occur on {today}")
         return today
 
+    def _format_table(self, result) -> PrettyTable:
+        table = PrettyTable()
+        table.field_names = ["Cleanup Policy", "Files count", "Size"]
+        table.align["Cleanup Policy"] = "l"
+
+        for policy_result in result["policies"]:
+            row = [
+                policy_result["name"],
+                policy_result["file_count"],
+                size(policy_result["size"]),
+            ]
+            table.add_row(row)
+
+        table.add_row(["", "", ""])
+        table.add_row(["Total size: {}".format(size(result["total_size"])), "", ""])
+        return table
+
+    def _print_table(self, result: dict):
+        print(self._format_table(result))
+
+    def _create_output_file(self, result, filename, format):
+        text = None
+        if format == "table":
+            text = self._format_table(result).get_string()
+        else:
+            text = json.dumps(result)
+
+        with open(filename, "w") as file:
+            file.write(text)
+
     def main(self):
         today = self._get_today()
         if self._load_rules:
@@ -112,9 +157,7 @@ class ArtifactoryCleanupCLI(cli.Application):
         if self._policy:
             cleanup.only(self._policy)
 
-        table = PrettyTable()
-        table.field_names = ["Cleanup Policy", "Files count", "Size"]
-        table.align["Cleanup Policy"] = "l"
+        result = {"policies": [], "total_size": 0}
         total_size = 0
 
         block_ctx_mgr, test_ctx_mgr = get_context_managers()
@@ -124,16 +167,21 @@ class ArtifactoryCleanupCLI(cli.Application):
             if summary is None:
                 continue
             total_size += summary.artifacts_size
-            row = [
-                summary.policy_name,
-                summary.artifacts_removed,
-                size(summary.artifacts_size),
-            ]
-            table.add_row(row)
 
-        table.add_row(["", "", ""])
-        table.add_row(["Total size: {}".format(size(total_size)), "", ""])
-        print(table)
+            result["policies"].append(
+                {
+                    "name": summary.policy_name,
+                    "file_count": summary.artifacts_removed,
+                    "size": summary.artifacts_size,
+                }
+            )
+
+        result["total_size"] = total_size
+
+        self._print_table(result)
+
+        if self._output_file:
+            self._create_output_file(result, self._output_file, self._output_format)
 
 
 if __name__ == "__main__":

