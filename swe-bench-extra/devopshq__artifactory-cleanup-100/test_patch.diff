diff --git a/tests/data/expected_output.txt b/tests/data/expected_output.txt
new file mode 100644
index 0000000..2471489
--- /dev/null
+++ b/tests/data/expected_output.txt
@@ -0,0 +1,8 @@
++--------------------------------------------------------+-------------+------+
+| Cleanup Policy                                         | Files count | Size |
++--------------------------------------------------------+-------------+------+
+| Remove all files from repo-name-here older then 7 days |      1      | 528B |
+| Use your own rules!                                    |      1      | 528B |
+|                                                        |             |      |
+| Total size: 1K                                         |             |      |
++--------------------------------------------------------+-------------+------+
\ No newline at end of file
diff --git a/tests/test_cli.py b/tests/test_cli.py
index f5c5afe..2869e23 100644
--- a/tests/test_cli.py
+++ b/tests/test_cli.py
@@ -1,4 +1,6 @@
+import json
 import pytest
+from filecmp import cmp
 
 from artifactory_cleanup import ArtifactoryCleanupCLI
 
@@ -69,3 +71,101 @@ def test_destroy(capsys, shared_datadir, requests_mock):
         last_request.url
         == "https://repo.example.com/artifactory/repo-name-here/path/to/file/filename1.json"
     )
+
+
+@pytest.mark.usefixtures("requests_repo_name_here")
+def test_output_table(capsys, shared_datadir, requests_mock):
+    _, code = ArtifactoryCleanupCLI.run(
+        [
+            "ArtifactoryCleanupCLI",
+            "--config",
+            str(shared_datadir / "cleanup.yaml"),
+            "--load-rules",
+            str(shared_datadir / "myrule.py"),
+        ],
+        exit=False,
+    )
+    stdout, stderr = capsys.readouterr()
+    print(stdout)
+    assert code == 0, stdout
+    assert (
+        "| Cleanup Policy                                         | Files count | Size |"
+        in stdout
+    )
+
+
+@pytest.mark.usefixtures("requests_repo_name_here")
+def test_output_table(capsys, shared_datadir, requests_mock, tmp_path):
+    output_file = tmp_path / "output.txt"
+    _, code = ArtifactoryCleanupCLI.run(
+        [
+            "ArtifactoryCleanupCLI",
+            "--config",
+            str(shared_datadir / "cleanup.yaml"),
+            "--load-rules",
+            str(shared_datadir / "myrule.py"),
+            "--output-format",
+            "table",
+            "--output",
+            str(output_file),
+        ],
+        exit=False,
+    )
+    stdout, stderr = capsys.readouterr()
+    print(stdout)
+    assert code == 0, stdout
+    assert cmp(output_file, shared_datadir / "expected_output.txt") is True
+
+
+@pytest.mark.usefixtures("requests_repo_name_here")
+def test_output_json(capsys, shared_datadir, requests_mock, tmp_path):
+    output_json = tmp_path / "output.json"
+    _, code = ArtifactoryCleanupCLI.run(
+        [
+            "ArtifactoryCleanupCLI",
+            "--config",
+            str(shared_datadir / "cleanup.yaml"),
+            "--load-rules",
+            str(shared_datadir / "myrule.py"),
+            "--output-format",
+            "json",
+            "--output",
+            str(output_json),
+        ],
+        exit=False,
+    )
+    stdout, stderr = capsys.readouterr()
+    assert code == 0, stdout
+    with open(output_json, "r") as file:
+        assert json.load(file) == {
+            "policies": [
+                {
+                    "name": "Remove all files from repo-name-here older then 7 days",
+                    "file_count": 1,
+                    "size": 528,
+                },
+                {"name": "Use your own rules!", "file_count": 1, "size": 528},
+            ],
+            "total_size": 1056,
+        }
+
+
+@pytest.mark.usefixtures("requests_repo_name_here")
+def test_require_output_json(capsys, shared_datadir, requests_mock):
+    _, code = ArtifactoryCleanupCLI.run(
+        [
+            "ArtifactoryCleanupCLI",
+            "--config",
+            str(shared_datadir / "cleanup.yaml"),
+            "--load-rules",
+            str(shared_datadir / "myrule.py"),
+            "--output-format",
+            "json",
+        ],
+        exit=False,
+    )
+    assert code == 2, stdout
+    stdout, stderr = capsys.readouterr()
+    assert (
+        "Error: Given --output-format, the following are missing ['output']" in stdout
+    )
