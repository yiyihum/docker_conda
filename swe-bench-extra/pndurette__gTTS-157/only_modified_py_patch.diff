diff --git a/gtts/tokenizer/symbols.py b/gtts/tokenizer/symbols.py
index 253aae7..1670360 100644
--- a/gtts/tokenizer/symbols.py
+++ b/gtts/tokenizer/symbols.py
@@ -14,3 +14,5 @@ ALL_PUNC = u"?!？！.,¡()[]¿…‥،;:—。，、：\n"
 TONE_MARKS = u"?!？！"
 
 PERIOD_COMMA = u".,"
+
+COLON = u":"
diff --git a/gtts/tokenizer/tokenizer_cases.py b/gtts/tokenizer/tokenizer_cases.py
index 1d4f6ba..e48cae0 100644
--- a/gtts/tokenizer/tokenizer_cases.py
+++ b/gtts/tokenizer/tokenizer_cases.py
@@ -31,6 +31,18 @@ def period_comma():
         pattern_func=lambda x: r"(?<!\.[a-z]){} ".format(x)).regex
 
 
+def colon():
+    """Colon case.
+
+    Match a colon ":" only if not preceeded by a digit.
+    Mainly to prevent a cut in the middle of time notations e.g. 10:01
+
+    """
+    return RegexBuilder(
+        pattern_args=symbols.COLON,
+        pattern_func=lambda x: r"(?<!\d){}".format(x)).regex
+
+
 def other_punctuation():
     """Match other punctuation.
 
@@ -38,10 +50,11 @@ def other_punctuation():
     inserts a break in speech.
 
     """
-    punc = ''.join((
+    punc = ''.join(
         set(symbols.ALL_PUNC) -
         set(symbols.TONE_MARKS) -
-        set(symbols.PERIOD_COMMA)))
+        set(symbols.PERIOD_COMMA) -
+        set(symbols.COLON))
     return RegexBuilder(
         pattern_args=punc,
         pattern_func=lambda x: u"{}".format(x)).regex
diff --git a/gtts/tts.py b/gtts/tts.py
index db20ea0..bc7ddfe 100644
--- a/gtts/tts.py
+++ b/gtts/tts.py
@@ -57,6 +57,7 @@ class gTTS:
                 Tokenizer([
                     tokenizer_cases.tone_marks,
                     tokenizer_cases.period_comma,
+                    tokenizer_cases.colon,
                     tokenizer_cases.other_punctuation
                 ]).run
 
@@ -97,6 +98,7 @@ class gTTS:
             tokenizer_func=Tokenizer([
                 tokenizer_cases.tone_marks,
                 tokenizer_cases.period_comma,
+                tokenizer_cases.colon,
                 tokenizer_cases.other_punctuation
             ]).run
     ):
