diff --git a/docs/update_readme.py b/docs/update_readme.py
index 6d5d826..0c6a123 100644
--- a/docs/update_readme.py
+++ b/docs/update_readme.py
@@ -9,9 +9,10 @@ def do_command(line):
     """ Run the command on the line and return its stdout and stderr. """
     command = shlex.split(line[2:])
     if command[0] == "next-action" and "--write-config-file" not in command:
-        command.extend(["--config", "docs/.next-action.cfg"])
+        command.insert(1, "--config")
+        command.insert(2, "docs/.next-action.cfg")
     command_output = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE,
-                                    check=True, universal_newlines=True)
+                                    universal_newlines=True)
     return command_output.stdout.strip(), command_output.stderr.strip()
 
 
diff --git a/next_action/arguments/parser.py b/next_action/arguments/parser.py
index 0d7a4b1..2e2e9e2 100644
--- a/next_action/arguments/parser.py
+++ b/next_action/arguments/parser.py
@@ -20,14 +20,16 @@ class NextActionArgumentParser(argparse.ArgumentParser):
 
     def __init__(self) -> None:
         super().__init__(
+            usage=textwrap.fill("next-action [-h] [--version] [-c [<config.cfg>] | -w] [-f <todo.txt> ...] "
+                                "[-r <ref>] [-s [<style>]] [-a | -n <number>] [-d [<due date>] | -o] "
+                                "[-p [<priority>]] [--] [<context|project> ...]",
+                                width=shutil.get_terminal_size().columns - len("usage: ")),
             description="Show the next action in your todo.txt. The next action is selected from the tasks in the "
                         "todo.txt file based on task properties such as priority, due date, and creation date. Limit "
                         "the tasks from which the next action is selected by specifying contexts the tasks must have "
                         "and/or projects the tasks must belong to.",
-            usage=textwrap.fill("next-action [-h] [--version] [-c [<config.cfg>] | -w] [-f <todo.txt> ...] "
-                                "[-r <ref>] [-s [<style>]] [-a | -n <number>] [-d [<due date>] | -o] "
-                                "[-p [<priority>]] [<context|project> ...]",
-                                width=shutil.get_terminal_size().columns - len("usage: ")))
+            epilog="Use -- to separate options with optional arguments from contexts and projects, in order to handle "
+                   "cases where a context or project is mistaken for an argument to an option.")
         self.__default_filenames = ["~/todo.txt"]
         self.add_optional_arguments()
         self.add_filter_arguments()

