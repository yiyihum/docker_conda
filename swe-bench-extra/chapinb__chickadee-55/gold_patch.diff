diff --git a/libchickadee/backends/__init__.py b/libchickadee/backends/__init__.py
index 2b110e6..d1f79ef 100644
--- a/libchickadee/backends/__init__.py
+++ b/libchickadee/backends/__init__.py
@@ -62,13 +62,18 @@ class ResolverBase(object):
         Args:
             data (list, tuple, set, str): One or more IPs to resolve
 
-        Yield:
-            (dict) request data iterator
+        Returns:
+            (list) List of collected records.
 
         Example:
             >>> records = ['1.1.1.1', '2.2.2.2']
             >>> resolver = ResolverBase()
             >>> resolved_data = resolver.query(records)
+            >>> print(resolved_data)
+            [
+             {"query": "1.1.1.1", "country": "Australia", ...},
+             {"query": "2.2.2.2", "country": "France", ...}
+            ]
         """
 
         self.data = data
diff --git a/libchickadee/backends/ipapi.py b/libchickadee/backends/ipapi.py
index 14d5dac..398d9ea 100644
--- a/libchickadee/backends/ipapi.py
+++ b/libchickadee/backends/ipapi.py
@@ -182,7 +182,7 @@ class Resolver(ResolverBase):
 
         for x in orig_recs:
             params = {
-                'fields': ','.join(self.fields),
+                'fields': ','.join(self.fields) if isinstance(self.fields, list) else self.fields,
                 'lang': self.lang,
             }
             if self.api_key:
@@ -237,7 +237,7 @@ class Resolver(ResolverBase):
         )
         if rdata.status_code == 200:
             self.rate_limit(rdata.headers)
-            return rdata.json()
+            return [rdata.json()]
         elif rdata.status_code == 429:
             self.rate_limit(rdata.headers)
             self.sleeper()
diff --git a/libchickadee/chickadee.py b/libchickadee/chickadee.py
index 4ed060a..29ad97c 100644
--- a/libchickadee/chickadee.py
+++ b/libchickadee/chickadee.py
@@ -194,7 +194,7 @@ class Chickadee(object):
         self.input_data = None
         self.outformat = outformat
         self.outfile = outfile
-        self.fields = fields
+        self.fields = fields if isinstance(fields, list) else fields.split(',')
         self.force_single = False
         self.ignore_bogon = True
         self.lang = 'en'
@@ -380,7 +380,7 @@ class Chickadee(object):
 
             for element in data:
                 resolver.data = element
-                results.append(resolver.single())
+                results += resolver.single()
         else:
             results = resolver.query(distinct_ips)
 
