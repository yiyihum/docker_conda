diff --git a/project_summarizer/cobertura_plugin.py b/project_summarizer/cobertura_plugin.py
index ef42830..73e2a89 100644
--- a/project_summarizer/cobertura_plugin.py
+++ b/project_summarizer/cobertura_plugin.py
@@ -20,6 +20,10 @@ class CoberturaPlugin(ProjectSummarizerPlugin):
     __COMMAND_LINE_ARGUMENT = "--cobertura"
     __COMMAND_LINE_OPTION = "cobertura_coverage_file"
 
+    __COVERAGE_PY_SIGNATURE = (
+        "<!-- Generated by coverage.py: https://coverage.readthedocs.io -->"
+    )
+
     def __init__(self):
         super().__init__()
         self.__output_path = os.path.join(self.REPORT_PUBLISH_PATH, "coverage.json")
@@ -49,6 +53,28 @@ class CoberturaPlugin(ProjectSummarizerPlugin):
             CoberturaPlugin.__COMMAND_LINE_OPTION,
         )
 
+    @classmethod
+    def __calculate_coverage_provider(cls, report_file):
+
+        line_count = 0
+        combined_lines = None
+        with open(report_file, "rt", encoding="utf-8") as infile:
+            next_line = infile.readline()
+            while next_line and next_line.strip() != "<sources>" and line_count < 10:
+                combined_lines = (
+                    f"{combined_lines}\n{next_line[:-1]}"
+                    if combined_lines is not None
+                    else next_line[:-1]
+                )
+                next_line = infile.readline()
+                line_count += 1
+
+        return (
+            "Coverage.py"
+            if CoberturaPlugin.__COVERAGE_PY_SIGNATURE in combined_lines
+            else "Unknown"
+        )
+
     def generate_report(self, only_changes, report_file):
         """
         Generate the report and display it.
@@ -57,8 +83,11 @@ class CoberturaPlugin(ProjectSummarizerPlugin):
         cobertura_document = self.load_xml_docment(
             report_file, "coverage", "test coverage", "Cobertura"
         )
+        coverage_provider_name = self.__calculate_coverage_provider(report_file)
 
-        new_stats = self.__compose_summary_from_cobertura_document(cobertura_document)
+        new_stats = self.__compose_summary_from_cobertura_document(
+            cobertura_document, coverage_provider_name
+        )
         self.save_summary_file(self.__output_path, new_stats, "test coverage")
 
         published_coverage_summary_path = (
@@ -70,7 +99,9 @@ class CoberturaPlugin(ProjectSummarizerPlugin):
 
         self.__report_coverage_files(new_stats, loaded_stats, only_changes)
 
-    def __compose_summary_from_cobertura_document(self, cobertura_document):
+    def __compose_summary_from_cobertura_document(
+        self, cobertura_document, coverage_provider_name
+    ):
         """
         Compose a CoverageTotals instance from the Cobetura based document.
         """
@@ -78,7 +109,7 @@ class CoberturaPlugin(ProjectSummarizerPlugin):
         project_name = cobertura_document.find("./sources/source").text
         project_name = os.path.basename(project_name)
         coverage_totals = CoverageTotals(
-            project_name=project_name, report_source="pytest"
+            project_name=project_name, report_source=coverage_provider_name
         )
 
         measured_lines, covered_lines, measured_branches, covered_branches = 0, 0, 0, 0
