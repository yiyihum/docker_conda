diff --git a/test/test_extension.py b/test/test_extension.py
index 5000c32..9d61593 100644
--- a/test/test_extension.py
+++ b/test/test_extension.py
@@ -289,3 +289,17 @@ class EnvExtensionTest(unittest.TestCase):
         self.assertEqual(p.get_snippet(mock_cliargs), '')
         self.assertEqual(p.get_preamble(mock_cliargs), '')
         self.assertEqual(p.get_docker_args(mock_cliargs), ' -e ENVVARNAME=envvar_value -e ENV2=val2 -e ENV3=val3')
+
+    def test_env_file_extension(self):
+        plugins = list_plugins()
+        env_plugin = plugins['env']
+        self.assertEqual(env_plugin.get_name(), 'env')
+
+        p = env_plugin()
+        self.assertTrue(plugin_load_parser_correctly(env_plugin))
+        
+        mock_cliargs = {'env_file': [['foo'], ['bar']]}
+
+        self.assertEqual(p.get_snippet(mock_cliargs), '')
+        self.assertEqual(p.get_preamble(mock_cliargs), '')
+        self.assertEqual(p.get_docker_args(mock_cliargs), ' --env-file foo --env-file bar')
diff --git a/test/test_nvidia.py b/test/test_nvidia.py
index b183fe6..01bf2d4 100644
--- a/test/test_nvidia.py
+++ b/test/test_nvidia.py
@@ -36,9 +36,9 @@ class X11Test(unittest.TestCase):
     def setUpClass(self):
         client = get_docker_client()
         self.dockerfile_tags = []
-        for distro_version in ['xenial', 'bionic']:
+        for distro, distro_version in [('ubuntu', 'xenial'), ('ubuntu', 'bionic'), ('ubuntu', 'focal'), ('debian', 'buster')]:
             dockerfile = """
-FROM ubuntu:%(distro_version)s
+FROM %(distro)s:%(distro_version)s
 
 RUN apt-get update && apt-get install x11-utils -y && apt-get clean
 
@@ -204,7 +204,7 @@ CMD glmark2 --validate
         self.assertEqual(cm.exception.code, 1)
 
         # unsupported os
-        mock_cliargs = {'base_image': 'debian'}
+        mock_cliargs = {'base_image': 'fedora'}
         with self.assertRaises(SystemExit) as cm:
             p.get_environment_subs(mock_cliargs)
         self.assertEqual(cm.exception.code, 1)
