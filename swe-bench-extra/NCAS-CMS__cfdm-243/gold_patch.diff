diff --git a/Changelog.rst b/Changelog.rst
index b18f7dd25..721dfade1 100644
--- a/Changelog.rst
+++ b/Changelog.rst
@@ -7,7 +7,9 @@ Version 1.10.0.2
   (https://github.com/NCAS-CMS/cfdm/issues/228)
 * Relocate the call to `NetCDFRead._customize_read_vars` to earlier in
   `NetCDFRead.read` (https://github.com/NCAS-CMS/cfdm/issues/233)
- 
+* Fixed bug that caused incorrect formula terms in output netCDF files
+  in some cases (https://github.com/NCAS-CMS/cfdm/issues/242)
+
 ----
 
 Version 1.10.0.1
diff --git a/cfdm/examplefield.py b/cfdm/examplefield.py
index 7d9acfb68..6a15fbd88 100644
--- a/cfdm/examplefield.py
+++ b/cfdm/examplefield.py
@@ -466,13 +466,19 @@ def example_field(n, _implementation=_implementation):
 
         # domain_ancillary
         c = DomainAncillary()
-        c.set_properties({"units": "m"})
+        c.set_properties(
+            {
+                "units": "m",
+                "computed_standard_name": "altitude",
+                "standard_name": "atmosphere_hybrid_height_coordinate",
+            }
+        )
         c.nc_set_variable("a")
-        data = Data([10.0], units="m", dtype="f8")
+        data = Data([20.0], units="m", dtype="f8")
         c.set_data(data)
         b = Bounds()
         b.nc_set_variable("a_bounds")
-        data = Data([[5.0, 15.0]], units="m", dtype="f8")
+        data = Data([[0, 36.6666717529297]], units="m", dtype="f8")
         b.set_data(data)
         c.set_bounds(b)
         f.set_construct(
@@ -482,11 +488,11 @@ def example_field(n, _implementation=_implementation):
         # domain_ancillary
         c = DomainAncillary()
         c.nc_set_variable("b")
-        data = Data([20.0], dtype="f8")
+        data = Data([0.997741281986237], dtype="f8")
         c.set_data(data)
         b = Bounds()
         b.nc_set_variable("b_bounds")
-        data = Data([[14.0, 26.0]], dtype="f8")
+        data = Data([[1, 0.995860934257507]], dtype="f8")
         b.set_data(data)
         c.set_bounds(b)
         f.set_construct(
@@ -946,16 +952,17 @@ def example_field(n, _implementation=_implementation):
         c = DimensionCoordinate()
         c.set_properties(
             {
+                "units": "m",
                 "computed_standard_name": "altitude",
                 "standard_name": "atmosphere_hybrid_height_coordinate",
             }
         )
         c.nc_set_variable("atmosphere_hybrid_height_coordinate")
-        data = Data([1.5], dtype="f8")
+        data = Data([20.0], dtype="f8")
         c.set_data(data)
         b = Bounds()
         b.nc_set_variable("atmosphere_hybrid_height_coordinate_bounds")
-        data = Data([[1.0, 2.0]], dtype="f8")
+        data = Data([[0, 36.6666717529297]], dtype="f8")
         b.set_data(data)
         c.set_bounds(b)
         f.set_construct(
diff --git a/cfdm/read_write/netcdf/netcdfread.py b/cfdm/read_write/netcdf/netcdfread.py
index 201fe8b7e..29aa0ef19 100644
--- a/cfdm/read_write/netcdf/netcdfread.py
+++ b/cfdm/read_write/netcdf/netcdfread.py
@@ -4569,6 +4569,9 @@ class NetCDFRead(IORead):
         elif nodes:
             attribute = "nodes"
 
+        # Make sure that the bounds attribute is removed
+        properties.pop(attribute, None)
+
         if dimension:
             properties.pop("compress", None)
             c = self.implementation.initialise_DimensionCoordinate()
@@ -4778,7 +4781,6 @@ class NetCDFRead(IORead):
 
         # Store the netCDF variable name
         self.implementation.nc_set_variable(cell_measure, ncvar)
-
         if ncvar in g["external_variables"]:
             # The cell measure variable is in an unknown external file
             self.implementation.nc_set_external(construct=cell_measure)
