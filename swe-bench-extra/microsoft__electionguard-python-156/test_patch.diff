diff --git a/tests/test_serializable.py b/tests/test_serializable.py
index 98ad413..e64ab95 100644
--- a/tests/test_serializable.py
+++ b/tests/test_serializable.py
@@ -5,13 +5,61 @@ from electionguard.serializable import (
     set_deserializers,
     set_serializers,
     write_json_file,
+    write_json_object,
+    write_json,
 )
 
 
 class TestSerializable(TestCase):
+    def test_write_json(self) -> None:
+        # Arrange
+        json_data = {
+            "from_json_file": {},
+            "test": 1,
+            "nested": {"from_json_file": {}, "test": 1},
+            "array": [{"from_json_file": {}, "test": 1}],
+        }
+        expected_json_string = (
+            '{"test": 1, "nested": {"test": 1}, "array": [{"test": 1}]}'
+        )
+
+        # Act
+        json_string = write_json(json_data)
+
+        # Assert
+        self.assertEqual(json_string, expected_json_string)
+
+    def test_write_json_object(self) -> None:
+        # Arrange
+        json_data = {
+            "from_json_file": {},
+            "test": 1,
+            "nested": {"from_json_file": {}, "test": 1},
+            "array": [{"from_json_file": {}, "test": 1}],
+        }
+        expected_json_object = {
+            "test": 1,
+            "nested": {"test": 1},
+            "array": [{"test": 1}],
+        }
+
+        # Act
+        json_object = write_json_object(json_data)
+
+        # Assert
+        self.assertEqual(json_object, expected_json_object)
+
     def test_write_json_file(self) -> None:
         # Arrange
-        json_data = '{ "test" : 1 }'
+        json_data = {
+            "from_json_file": {},
+            "test": 1,
+            "nested": {"from_json_file": {}, "test": 1},
+            "array": [{"from_json_file": {}, "test": 1}],
+        }
+        expected_json_data = (
+            '{"test": 1, "nested": {"test": 1}, "array": [{"test": 1}]}'
+        )
         file_name = "json_write_test"
         json_file = file_name + ".json"
 
@@ -20,7 +68,7 @@ class TestSerializable(TestCase):
 
         # Assert
         with open(json_file) as reader:
-            self.assertEqual(reader.read(), json_data)
+            self.assertEqual(reader.read(), expected_json_data)
 
         # Cleanup
         remove(json_file)
