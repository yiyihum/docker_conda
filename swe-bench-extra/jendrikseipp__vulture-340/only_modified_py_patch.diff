diff --git a/setup.py b/setup.py
index 3914be9..4854941 100644
--- a/setup.py
+++ b/setup.py
@@ -47,7 +47,7 @@ setuptools.setup(
         "Programming Language :: Python :: Implementation :: PyPy",
         "Topic :: Software Development :: Quality Assurance",
     ],
-    install_requires=["toml"],
+    install_requires=["tomli >= 1.1.0; python_version < '3.11'"],
     entry_points={"console_scripts": ["vulture = vulture.core:main"]},
     python_requires=">=3.8",
     packages=setuptools.find_packages(exclude=["tests"]),
diff --git a/vulture/config.py b/vulture/config.py
index 4aa0d2d..4e193fe 100644
--- a/vulture/config.py
+++ b/vulture/config.py
@@ -5,7 +5,10 @@ command-line arguments or the pyproject.toml file.
 import argparse
 import pathlib
 
-import toml
+try:
+    import tomllib
+except ModuleNotFoundError:
+    import tomli as tomllib
 
 from .version import __version__
 
@@ -76,7 +79,7 @@ def _parse_toml(infile):
         verbose = true
         paths = ["path1", "path2"]
     """
-    data = toml.load(infile)
+    data = tomllib.load(infile)
     settings = data.get("tool", {}).get("vulture", {})
     _check_input_config(settings)
     return settings
@@ -194,7 +197,7 @@ def make_config(argv=None, tomlfile=None):
     else:
         toml_path = pathlib.Path("pyproject.toml").resolve()
         if toml_path.is_file():
-            with open(toml_path) as fconfig:
+            with open(toml_path, "rb") as fconfig:
                 config = _parse_toml(fconfig)
             detected_toml_path = str(toml_path)
         else:

