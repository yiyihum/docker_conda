diff --git a/src/fparser/common/tests/test_readfortran.py b/src/fparser/common/tests/test_readfortran.py
index 8af7530..8b75af1 100644
--- a/src/fparser/common/tests/test_readfortran.py
+++ b/src/fparser/common/tests/test_readfortran.py
@@ -745,7 +745,32 @@ def test_file_reader():
         raise
 
 
-##############################################################################
+def test_none_in_fifo(log):
+    ''' Check that a None entry in the reader FIFO buffer is handled
+    correctly. '''
+    log.reset()
+    handle, filename = tempfile.mkstemp(suffix='.f90', text=True)
+    os.close(handle)
+
+    with io.open(filename, mode='w', encoding='UTF-8') as source_file:
+        source_file.write(FULL_FREE_SOURCE)
+
+    with io.open(filename, mode='r', encoding='UTF-8') as source_file:
+        unit_under_test = FortranFileReader(source_file)
+        while True:
+            try:
+                _ = unit_under_test.next(ignore_comments=False)
+            except StopIteration:
+                break
+        # Erroneously push a None to the FIFO buffer
+        unit_under_test.put_item(None)
+        # Attempt to read the next item
+        with pytest.raises(StopIteration):
+            _ = unit_under_test.next(ignore_comments=False)
+        # Check that nothing has been logged
+        for log_level in ["debug", "info", "warning", "error", "critical"]:
+            assert log.messages[log_level] == []
+
 
 def test_bad_file_reader():
     '''
diff --git a/src/fparser/two/tests/test_scripts.py b/src/fparser/two/tests/test_scripts.py
index 7225b7f..3770e87 100644
--- a/src/fparser/two/tests/test_scripts.py
+++ b/src/fparser/two/tests/test_scripts.py
@@ -275,10 +275,11 @@ def test_runner_multi_output_except(tmpdir, capsys):
 # fparser2.py script function main()
 
 
-def test_main_output_task_default(tmpdir, capsys, monkeypatch):
+def test_main_output_task_default(tmpdir, capsys, monkeypatch, log):
     '''Test that the script main() function outputs the code it has parsed
-    by default.'''
+    by default and that no errors are logged.'''
     import sys
+    log.reset()
     # Create a temporary file containing Fortran code to pass into runner()
     my_file = tmpdir.mkdir("sub").join("hello.f90")
     my_file.write("program hello\nend program hello\n")
@@ -290,6 +291,9 @@ def test_main_output_task_default(tmpdir, capsys, monkeypatch):
     stdout, stderr = capsys.readouterr()
     assert stdout == "PROGRAM hello\nEND PROGRAM hello\n"
     assert "File: '" in stderr and "hello.f90'" in stderr
+    # Check that nothing has been logged (apart from some 'debug' msgs)
+    for log_level in ["info", "warning", "error", "critical"]:
+        assert log.messages[log_level] == []
 
 
 def test_main_output_task_show(tmpdir, capsys, monkeypatch):
