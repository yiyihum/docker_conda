diff --git a/dvc/utils/_benedict.py b/dvc/utils/_benedict.py
new file mode 100644
--- /dev/null
+++ b/dvc/utils/_benedict.py
@@ -0,0 +1,26 @@
+"""
+Rollbacks monkeypatching of `json.encoder` by benedict.
+
+It monkeypatches json to use Python-based encoder instead of C-based
+during import.
+
+We rollback that monkeypatch by keeping reference to that C-based
+encoder and reinstate them after importing benedict.
+See: https://github.com/iterative/dvc/issues/6423
+     https://github.com/fabiocaccamo/python-benedict/issues/62
+and the source of truth:
+https://github.com/fabiocaccamo/python-benedict/blob/c98c471065/benedict/dicts/__init__.py#L282-L285
+"""
+from json import encoder
+
+try:
+    c_make_encoder = encoder.c_make_encoder  # type: ignore[attr-defined]
+except AttributeError:
+    c_make_encoder = None
+
+
+from benedict import benedict  # noqa: E402
+
+encoder.c_make_encoder = c_make_encoder  # type: ignore[attr-defined]
+# Please import benedict from here lazily
+__all__ = ["benedict"]
diff --git a/dvc/utils/collections.py b/dvc/utils/collections.py
--- a/dvc/utils/collections.py
+++ b/dvc/utils/collections.py
@@ -82,19 +82,10 @@ def chunk_dict(d: Dict[_KT, _VT], size: int = 1) -> List[Dict[_KT, _VT]]:
 
 def merge_params(src: Dict, to_update: Dict) -> Dict:
     """Recursively merges params with benedict's syntax support in-place."""
-    from benedict import benedict
+    from ._benedict import benedict
 
     data = benedict(src)
-    if src:
-        data.merge(to_update, overwrite=True)
-    else:
-        # NOTE: the following line may seem like an unnecessary duplication
-        # data.merge might affect the `src` if it's not empty, so we cannot
-        # check `if src` later, as it may have been mutated already.
-        data.merge(to_update, overwrite=True)
-        # benedict has issues keeping references to an empty dictionary
-        # see: https://github.com/iterative/dvc/issues/6374.
-        src.update(data)
+    data.merge(to_update, overwrite=True)
     return src
 
 
