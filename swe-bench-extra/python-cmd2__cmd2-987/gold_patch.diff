diff --git a/CHANGELOG.md b/CHANGELOG.md
index acb29c93..12478a29 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,8 @@
+## 1.3.7 (August 27, 2020)
+* Bug Fixes
+    * Fixes an issue introduced in 1.3.0 with processing command strings containing terminator/separator 
+      character(s) that are manually passed to a command that uses argparse.
+
 ## 1.3.6 (August 27, 2020)
 * Breaking changes
     * The functions cmd2 adds to Namespaces (`get_statement()` and `get_handler()`) are now 
diff --git a/cmd2/decorators.py b/cmd2/decorators.py
index c2689102..4ee61754 100644
--- a/cmd2/decorators.py
+++ b/cmd2/decorators.py
@@ -35,7 +35,7 @@ def with_category(category: str) -> Callable:
     return cat_decorator
 
 ##########################
-# The _parse_positionals and _swap_args decorators allow for additional positional args to be preserved
+# The _parse_positionals and _arg_swap functions allow for additional positional args to be preserved
 # in cmd2 command functions/callables. As long as the 2-ple of arguments we expect to be there can be
 # found we can swap out the statement with each decorator's specific parameters
 ##########################
@@ -276,9 +276,9 @@ def with_argparser(parser: argparse.ArgumentParser, *,
             :return: return value of command function
             :raises: Cmd2ArgparseError if argparse has error parsing command line
             """
-            cmd2_app, statement = _parse_positionals(args)
+            cmd2_app, statement_arg = _parse_positionals(args)
             statement, parsed_arglist = cmd2_app.statement_parser.get_command_arg_list(command_name,
-                                                                                       statement,
+                                                                                       statement_arg,
                                                                                        preserve_quotes)
 
             if ns_provider is None:
@@ -314,7 +314,7 @@ def with_argparser(parser: argparse.ArgumentParser, *,
                 if hasattr(ns, constants.NS_ATTR_SUBCMD_HANDLER):
                     delattr(ns, constants.NS_ATTR_SUBCMD_HANDLER)
 
-                args_list = _arg_swap(args, statement, *new_args)
+                args_list = _arg_swap(args, statement_arg, *new_args)
                 return func(*args_list, **kwargs)
 
         # argparser defaults the program name to sys.argv[0], but we want it to be the name of our command
