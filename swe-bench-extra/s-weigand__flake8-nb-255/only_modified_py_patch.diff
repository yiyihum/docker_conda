diff --git a/flake8_nb/flake8_integration/cli.py b/flake8_nb/flake8_integration/cli.py
index 960aa1d..d5991cd 100644
--- a/flake8_nb/flake8_integration/cli.py
+++ b/flake8_nb/flake8_integration/cli.py
@@ -144,9 +144,16 @@ def hack_config_module() -> None:
     with it with ``"flake8_nb"`` to create our own hacked version and replace
     the references to the original module with the hacked one.
 
-    See: https://github.com/s-weigand/flake8-nb/issues/249
+    See:
+        https://github.com/s-weigand/flake8-nb/issues/249
+        https://github.com/s-weigand/flake8-nb/issues/254
     """
-    hacked_config_source = Path(config.__file__).read_text().replace('"flake8"', '"flake8_nb"')
+    hacked_config_source = (
+        Path(config.__file__)
+        .read_text()
+        .replace('"flake8"', '"flake8_nb"')
+        .replace('".flake8"', '".flake8_nb"')
+    )
     hacked_config_path = Path(__file__).parent / "hacked_config.py"
     hacked_config_path.write_text(hacked_config_source)
 
@@ -155,6 +162,10 @@ def hack_config_module() -> None:
     sys.modules["flake8.options.config"] = hacked_config
     aggregator.config = hacked_config
 
+    import flake8.main.application as application_module
+
+    application_module.config = hacked_config
+
 
 class Flake8NbApplication(Application):  # type: ignore[misc]
     r"""Subclass of ``flake8.main.application.Application``.
@@ -183,6 +194,7 @@ class Flake8NbApplication(Application):  # type: ignore[misc]
                 self.parse_configuration_and_cli_legacy  # type: ignore[assignment]
             )
         else:
+            hack_config_module()
             self.register_plugin_options = self.hacked_register_plugin_options
 
     def apply_hacks(self) -> None:
@@ -377,7 +389,6 @@ class Flake8NbApplication(Application):  # type: ignore[misc]
         assert self.plugins is not None
 
         self.apply_hacks()
-        hack_config_module()
 
         self.options = aggregator.aggregate_options(
             self.option_manager,
