diff --git a/elasticsearch/client/tasks.py b/elasticsearch/client/tasks.py
index 0f253ca1..4c4f6d1f 100644
--- a/elasticsearch/client/tasks.py
+++ b/elasticsearch/client/tasks.py
@@ -1,3 +1,4 @@
+import warnings
 from .utils import NamespacedClient, query_params, _make_path, SKIP_IN_PATH
 
 
@@ -58,7 +59,7 @@ class TasksClient(NamespacedClient):
         )
 
     @query_params("timeout", "wait_for_completion")
-    def get(self, task_id, params=None, headers=None):
+    def get(self, task_id=None, params=None, headers=None):
         """
         Returns information about a task.
         `<https://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html>`_
@@ -70,7 +71,11 @@ class TasksClient(NamespacedClient):
             complete (default: false)
         """
         if task_id in SKIP_IN_PATH:
-            raise ValueError("Empty value passed for a required argument 'task_id'.")
+            warnings.warn(
+                "Calling client.tasks.get() without a task_id is deprecated "
+                "and will be removed in v8.0. Use client.tasks.list() instead.",
+                DeprecationWarning,
+            )
 
         return self.transport.perform_request(
             "GET", _make_path("_tasks", task_id), params=params, headers=headers
diff --git a/utils/generate_api.py b/utils/generate_api.py
index 0e76617d..183934e4 100644
--- a/utils/generate_api.py
+++ b/utils/generate_api.py
@@ -146,6 +146,13 @@ class API:
                 p in url.get("parts", {}) for url in self._def["url"]["paths"]
             )
 
+            # This piece of logic corresponds to calling
+            # client.tasks.get() w/o a task_id which was erroneously
+            # allowed in the 7.1 client library. This functionality
+            # is deprecated and will be removed in 8.x.
+            if self.namespace == "tasks" and self.name == "get":
+                parts["task_id"]["required"] = False
+
         for k, sub in SUBSTITUTIONS.items():
             if k in parts:
                 parts[sub] = parts.pop(k)
diff --git a/utils/templates/overrides/tasks/get b/utils/templates/overrides/tasks/get
new file mode 100644
index 00000000..ca855ab9
--- /dev/null
+++ b/utils/templates/overrides/tasks/get
@@ -0,0 +1,12 @@
+{% extends "base" %}
+{% block request %}
+        if task_id in SKIP_IN_PATH:
+            warnings.warn(
+                "Calling client.tasks.get() without a task_id is deprecated "
+                "and will be removed in v8.0. Use client.tasks.list() instead.",
+                DeprecationWarning,
+            )
+
+        {{ super()|trim }}
+{% endblock %}
+
