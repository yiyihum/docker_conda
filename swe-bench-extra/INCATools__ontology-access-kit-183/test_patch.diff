diff --git a/tests/test_utilities/test_cross_ontology_diff.py b/tests/test_utilities/test_cross_ontology_diff.py
index 33a3e800..09ace3de 100644
--- a/tests/test_utilities/test_cross_ontology_diff.py
+++ b/tests/test_utilities/test_cross_ontology_diff.py
@@ -4,6 +4,7 @@ import yaml
 from linkml_runtime.dumpers import yaml_dumper
 
 from oaklib.datamodels.cross_ontology_diff import RelationalDiff
+from oaklib.datamodels.vocabulary import IS_A, PART_OF
 from oaklib.implementations.pronto.pronto_implementation import ProntoImplementation
 from oaklib.implementations.sparql.sparql_implementation import SparqlImplementation
 from oaklib.resource import OntologyResource
@@ -36,3 +37,25 @@ class TestStructuralDiff(unittest.TestCase):
             results = list(calculate_pairwise_relational_diff(oi, oi, ["X", "Y", "Z"]))
             yaml_dumper.dump(results, str(TEST_OUT))
             self.assertCountEqual(expected_results, results)
+
+    def test_structural_diff_with_preds(self):
+        expected_results = yaml.safe_load(open(EXPECTED))
+        expected_results = [RelationalDiff(**obj) for obj in expected_results]
+        for oi in [self.oi, self.owl_oi]:
+            results = list(
+                calculate_pairwise_relational_diff(
+                    oi, oi, ["X", "Y", "Z"], predicates=[IS_A, PART_OF]
+                )
+            )
+            yaml_dumper.dump(results, str(TEST_OUT))
+            self.assertCountEqual(expected_results, results)
+            results = list(
+                calculate_pairwise_relational_diff(oi, oi, ["X", "Y", "Z"], predicates=[PART_OF])
+            )
+            # print(yaml_dumper.dumps(results))
+            self.assertEqual(2, len(results))
+
+    def test_restrict_to_sources(self):
+        for oi in [self.oi, self.owl_oi]:
+            results = list(calculate_pairwise_relational_diff(oi, oi, ["Z"]))
+            self.assertEqual([], results)
