diff --git a/src/mbed_tools/cli/configure.py b/src/mbed_tools/cli/configure.py
index 360c389..24b49d8 100644
--- a/src/mbed_tools/cli/configure.py
+++ b/src/mbed_tools/cli/configure.py
@@ -25,6 +25,7 @@ from mbed_tools.build import generate_config
     help="The toolchain you are using to build your app.",
 )
 @click.option("-m", "--mbed-target", required=True, help="A build target for an Mbed-enabled device, eg. K64F")
+@click.option("-b", "--profile", default="develop", help="The build type (release, develop or debug).")
 @click.option("-o", "--output-dir", type=click.Path(), default=None, help="Path to output directory.")
 @click.option(
     "-p",
@@ -42,6 +43,7 @@ from mbed_tools.build import generate_config
 def configure(
     toolchain: str,
     mbed_target: str,
+    profile: str,
     program_path: str,
     mbed_os_path: str,
     output_dir: str,
@@ -61,12 +63,13 @@ def configure(
         custom_targets_json: the path to custom_targets.json
         toolchain: the toolchain you are using (eg. GCC_ARM, ARM)
         mbed_target: the target you are building for (eg. K64F)
+        profile: The Mbed build profile (debug, develop or release).
         program_path: the path to the local Mbed program
         mbed_os_path: the path to the local Mbed OS directory
         output_dir: the path to the output directory
         app_config: the path to the application configuration file
     """
-    cmake_build_subdir = pathlib.Path(mbed_target.upper(), "develop", toolchain.upper())
+    cmake_build_subdir = pathlib.Path(mbed_target.upper(), profile.lower(), toolchain.upper())
     if mbed_os_path is None:
         program = MbedProgram.from_existing(pathlib.Path(program_path), cmake_build_subdir)
     else:

