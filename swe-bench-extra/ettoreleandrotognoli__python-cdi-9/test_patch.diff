diff --git a/tests/common/test_injection_point.py b/tests/common/test_injection_point.py
new file mode 100644
index 0000000..af2f327
--- /dev/null
+++ b/tests/common/test_injection_point.py
@@ -0,0 +1,50 @@
+# -*- encoding: utf-8 -*-
+import unittest
+from random import random, choice
+
+from pycdi import Producer, Inject
+from pycdi.core import InjectionPoint, PyCDIContainer
+
+
+class InjectionPointTest(unittest.TestCase):
+    float_injection_point = None
+    str_injection_point = None
+
+    def test_injection_points(self):
+        container = PyCDIContainer()
+
+        @Producer(produce_type=float, _container=container)
+        @Inject(injection_point=InjectionPoint)
+        def float_producer(injection_point):
+            self.assertEqual(injection_point.type, float)
+            self.assertIsNotNone(injection_point.member)
+            self.assertIsNotNone(injection_point.name)
+            self.assertIsNotNone(injection_point.context)
+            self.float_injection_point = injection_point
+            return random()
+
+        @Producer(produce_type=str, _container=container)
+        @Inject(injection_point=InjectionPoint)
+        def float_producer(injection_point):
+            self.assertEqual(injection_point.type, str)
+            self.assertIsNotNone(injection_point.member)
+            self.assertIsNotNone(injection_point.name)
+            self.assertIsNotNone(injection_point.context)
+            self.str_injection_point = injection_point
+            letters = [chr(i) for i in range(97, 97 + 26)]
+            return choice(letters)
+
+        @Inject(random_float=float)
+        def receive_float(random_float):
+            self.assertIsNotNone(random_float)
+
+        container.call(receive_float)
+
+        @Inject(random_str=str)
+        def receive_str(random_str):
+            self.assertIsNotNone(random_str)
+
+        container.call(receive_str)
+
+        self.assertIsNotNone(self.float_injection_point)
+        self.assertIsNotNone(self.str_injection_point)
diff --git a/tests/common/test_interface.py b/tests/common/test_interface.py
index d276126..48dbce9 100644
--- a/tests/common/test_interface.py
+++ b/tests/common/test_interface.py
@@ -21,6 +21,8 @@ class InterfaceCDITest(unittest.TestCase):
             container.register_producer(None)
         with self.assertRaises(NotImplementedError):
             container.sub_container()
+        with self.assertRaises(NotImplementedError):
+            container.resolve(None)
 
     def test_decorator(self):
         with self.assertRaises(NotImplementedError):
