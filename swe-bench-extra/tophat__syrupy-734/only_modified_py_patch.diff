diff --git a/src/syrupy/__init__.py b/src/syrupy/__init__.py
index 5f1a646..560ddb0 100644
--- a/src/syrupy/__init__.py
+++ b/src/syrupy/__init__.py
@@ -41,11 +41,6 @@ def __import_extension(value: Optional[str]) -> Any:
         raise argparse.ArgumentTypeError(e)
 
 
-def __default_extension_option(value: Optional[str]) -> Any:
-    __import_extension(value)
-    return value
-
-
 def pytest_addoption(parser: Any) -> None:
     """
     Exposes snapshot plugin configuration to pytest.
@@ -78,7 +73,6 @@ def pytest_addoption(parser: Any) -> None:
     # all pytest options to be serializable.
     group.addoption(
         "--snapshot-default-extension",
-        type=__default_extension_option,
         default=None,
         dest="default_extension",
         help="Specify the default snapshot extension",
diff --git a/src/syrupy/utils.py b/src/syrupy/utils.py
index c086173..4dd08cd 100644
--- a/src/syrupy/utils.py
+++ b/src/syrupy/utils.py
@@ -48,11 +48,14 @@ def import_module_member(path: str) -> Any:
             )
         )
     try:
-        return getattr(import_module(module_name), module_member_name)
+        module = import_module(module_name)
     except ModuleNotFoundError:
         raise FailedToLoadModuleMember(
             gettext("Module '{}' does not exist.").format(module_name)
         )
+
+    try:
+        return getattr(module, module_member_name)
     except AttributeError:
         raise FailedToLoadModuleMember(
             gettext("Member '{}' not found in module '{}'.").format(
diff --git a/tasks/build.py b/tasks/build.py
index ef05530..e66f769 100644
--- a/tasks/build.py
+++ b/tasks/build.py
@@ -58,7 +58,7 @@ def release(ctx, dry_run=True, version=None):
     """
     Build and publish package to pypi index based on scm version
     """
-    from semver import parse_version_info
+    from semver.version import Version
 
     if not dry_run and not os.environ.get("CI"):
         print("This is a CI only command")
@@ -72,7 +72,8 @@ def release(ctx, dry_run=True, version=None):
         exit(1)
 
     try:
-        should_publish_to_pypi = not dry_run and parse_version_info(version)
+        Version.parse(version)
+        should_publish_to_pypi = not dry_run
     except ValueError:
         should_publish_to_pypi = False
 

