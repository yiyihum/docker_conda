diff --git a/README.md b/README.md
index 7d67e81..e02f2f1 100644
--- a/README.md
+++ b/README.md
@@ -31,6 +31,7 @@ sentry_sdk.init()  # pass dsn in argument or via SENTRY_DSN env variable
 
 structlog.configure(
     processors=[
+        structlog.stdlib.add_logger_name,  # optional, but before SentryProcessor()
         structlog.stdlib.add_log_level,  # required before SentryProcessor()
         SentryProcessor(level=logging.ERROR),
     ],
@@ -42,8 +43,9 @@ structlog.configure(
 log = structlog.get_logger()
 ```
 
-Do not forget to add the `structlog.stdlib.add_log_level` processor before
-`SentryProcessor`. The `SentryProcessor` class takes the following arguments:
+Do not forget to add the `structlog.stdlib.add_log_level` and optionally the
+`structlog.stdlib.add_logger_name` processors before `SentryProcessor`. The
+`SentryProcessor` class takes the following arguments:
 
 - `level` - events of this or higher levels will be reported to Sentry,
   default is `WARNING`
@@ -95,6 +97,7 @@ You can set some or all of key/value pairs of structlog `event_dict` as sentry `
 ```python
 structlog.configure(
     processors=[
+        structlog.stdlib.add_logger_name,
         structlog.stdlib.add_log_level,
         SentryProcessor(level=logging.ERROR, tag_keys=["city", "timezone"]),
     ],...
@@ -109,6 +112,7 @@ If you want to have all event data as tags, create the `SentryProcessor` with `t
 ```python
 structlog.configure(
     processors=[
+        structlog.stdlib.add_logger_name,
         structlog.stdlib.add_log_level,
         SentryProcessor(level=logging.ERROR, tag_keys="__all__"),
     ],...
@@ -123,6 +127,7 @@ Sometimes you may want to skip this, specially when sending the `event_dict` as
 ```python
 structlog.configure(
     processors=[
+        structlog.stdlib.add_logger_name,
         structlog.stdlib.add_log_level,
         SentryProcessor(level=logging.ERROR, as_extra=False, tag_keys="__all__"),
     ],...
diff --git a/structlog_sentry/__init__.py b/structlog_sentry/__init__.py
index d175653..f63ce6b 100644
--- a/structlog_sentry/__init__.py
+++ b/structlog_sentry/__init__.py
@@ -52,6 +52,8 @@ class SentryProcessor:
 
         event["message"] = event_dict.get("event")
         event["level"] = event_dict.get("level")
+        if "logger" in event_dict:
+            event["logger"] = event_dict["logger"]
 
         if self._as_extra:
             event["extra"] = self._original_event_dict
