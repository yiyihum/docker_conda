diff --git a/sqlglot/expressions.py b/sqlglot/expressions.py
index ddad8f83..2286d682 100644
--- a/sqlglot/expressions.py
+++ b/sqlglot/expressions.py
@@ -1667,6 +1667,7 @@ class Index(Expression):
         "unique": False,
         "primary": False,
         "amp": False,  # teradata
+        "include": False,
         "partition_by": False,  # teradata
         "where": False,  # postgres partial indexes
     }
diff --git a/sqlglot/generator.py b/sqlglot/generator.py
index 977185ff..79e4b898 100644
--- a/sqlglot/generator.py
+++ b/sqlglot/generator.py
@@ -1111,7 +1111,10 @@ class Generator:
         partition_by = self.expressions(expression, key="partition_by", flat=True)
         partition_by = f" PARTITION BY {partition_by}" if partition_by else ""
         where = self.sql(expression, "where")
-        return f"{unique}{primary}{amp}{index}{name}{table}{using}{columns}{partition_by}{where}"
+        include = self.expressions(expression, key="include", flat=True)
+        if include:
+            include = f" INCLUDE ({include})"
+        return f"{unique}{primary}{amp}{index}{name}{table}{using}{columns}{include}{partition_by}{where}"
 
     def identifier_sql(self, expression: exp.Identifier) -> str:
         text = expression.name
diff --git a/sqlglot/parser.py b/sqlglot/parser.py
index 5fb40b95..54d09715 100644
--- a/sqlglot/parser.py
+++ b/sqlglot/parser.py
@@ -2681,6 +2681,8 @@ class Parser(metaclass=_Parser):
         else:
             columns = None
 
+        include = self._parse_wrapped_id_vars() if self._match_text_seq("INCLUDE") else None
+
         return self.expression(
             exp.Index,
             this=index,
@@ -2690,6 +2692,7 @@ class Parser(metaclass=_Parser):
             unique=unique,
             primary=primary,
             amp=amp,
+            include=include,
             partition_by=self._parse_partition_by(),
             where=self._parse_where(),
         )

