diff --git a/tests/setup_cfg_fmt_test.py b/tests/setup_cfg_fmt_test.py
index cfda96a..c01262c 100644
--- a/tests/setup_cfg_fmt_test.py
+++ b/tests/setup_cfg_fmt_test.py
@@ -1,8 +1,21 @@
 import pytest
 
+from setup_cfg_fmt import _case_insensitive_glob
 from setup_cfg_fmt import main
 
 
+@pytest.mark.parametrize(
+    ('s', 'expected'),
+    (
+        ('foo', '[Ff][Oo][Oo]'),
+        ('FOO', '[Ff][Oo][Oo]'),
+        ('licen[sc]e', '[Ll][Ii][Cc][Ee][Nn][SsCc][Ee]'),
+    ),
+)
+def test_case_insensitive_glob(s, expected):
+    assert _case_insensitive_glob(s) == expected
+
+
 def test_noop(tmpdir):
     setup_cfg = tmpdir.join('setup.cfg')
     setup_cfg.write(
@@ -87,8 +100,18 @@ def test_rewrite(input_s, expected, tmpdir):
     assert setup_cfg.read() == expected
 
 
-def test_adds_long_description_with_readme(tmpdir):
-    tmpdir.join('README.md').write('my project!')
+@pytest.mark.parametrize(
+    ('filename', 'content_type'),
+    (
+        ('README.rst', 'text/x-rst'),
+        ('README.markdown', 'text/markdown'),
+        ('README.md', 'text/markdown'),
+        ('README', 'text/plain'),
+        ('readme.txt', 'text/plain'),
+    ),
+)
+def test_adds_long_description_with_readme(filename, content_type, tmpdir):
+    tmpdir.join(filename).write('my project!')
     setup_cfg = tmpdir.join('setup.cfg')
     setup_cfg.write(
         '[metadata]\n'
@@ -99,16 +122,19 @@ def test_adds_long_description_with_readme(tmpdir):
     assert main((str(setup_cfg),))
 
     assert setup_cfg.read() == (
-        '[metadata]\n'
-        'name = pkg\n'
-        'version = 1.0\n'
-        'long_description = file: README.md\n'
-        'long_description_content_type = text/markdown\n'
+        f'[metadata]\n'
+        f'name = pkg\n'
+        f'version = 1.0\n'
+        f'long_description = file: {filename}\n'
+        f'long_description_content_type = {content_type}\n'
     )
 
 
-def test_sets_license_file_if_license_exists(tmpdir):
-    tmpdir.join('LICENSE').write('COPYRIGHT (C) 2019 ME')
+@pytest.mark.parametrize(
+    'filename', ('LICENSE', 'LICENCE', 'LICENSE.md', 'license.txt'),
+)
+def test_sets_license_file_if_license_exists(filename, tmpdir):
+    tmpdir.join(filename).write('COPYRIGHT (C) 2019 ME')
     setup_cfg = tmpdir.join('setup.cfg')
     setup_cfg.write(
         '[metadata]\n'
@@ -119,10 +145,10 @@ def test_sets_license_file_if_license_exists(tmpdir):
     assert main((str(setup_cfg),))
 
     assert setup_cfg.read() == (
-        '[metadata]\n'
-        'name = pkg\n'
-        'version = 1.0\n'
-        'license_file = LICENSE\n'
+        f'[metadata]\n'
+        f'name = pkg\n'
+        f'version = 1.0\n'
+        f'license_file = {filename}\n'
     )
 
 
