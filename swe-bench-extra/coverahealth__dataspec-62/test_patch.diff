diff --git a/tests/test_api.py b/tests/test_api.py
index b5c19a5..af391e7 100644
--- a/tests/test_api.py
+++ b/tests/test_api.py
@@ -7,15 +7,11 @@ from dataspec.base import PredicateSpec, ValidatorSpec, pred_to_validator
 
 
 class TestSpecConstructor:
-    @pytest.mark.parametrize("v", [None, 5, 3.14, 8j])
+    @pytest.mark.parametrize("v", [5, 3.14, 8j, "a value"])
     def test_invalid_specs(self, v):
         with pytest.raises(TypeError):
             s(v)
 
-    def test_spec_with_no_pred(self):
-        with pytest.raises(IndexError):
-            s("string")
-
     def test_validator_spec(self):
         def is_valid(v) -> Iterator[ErrorDetails]:
             if v:
diff --git a/tests/test_base.py b/tests/test_base.py
index f0a45c6..4dc09d6 100644
--- a/tests/test_base.py
+++ b/tests/test_base.py
@@ -665,6 +665,7 @@ class TestTypeSpec:
     @pytest.mark.parametrize(
         "tp,vals",
         [
+            (None, [None]),
             (bool, [True, False]),
             (bytes, [b"", b"a", b"bytes"]),
             (dict, [{}, {"a": "b"}]),
@@ -683,6 +684,7 @@ class TestTypeSpec:
     @pytest.fixture
     def python_vals(self):
         return [
+            None,
             True,
             False,
             b"",
