diff --git a/tests/_apis/test_LeagueApiV4.py b/tests/_apis/test_LeagueApiV4.py
index 02120b6..5acaaa0 100644
--- a/tests/_apis/test_LeagueApiV4.py
+++ b/tests/_apis/test_LeagueApiV4.py
@@ -104,6 +104,54 @@ class TestLeagueApiV4(object):
 
         assert ret is expected_return
 
+    def test_by_summoner(self):
+        mock_base_api = MagicMock()
+        expected_return = object()
+        mock_base_api.raw_request.return_value = expected_return
+
+        league = LeagueApiV4(mock_base_api)
+        region = "fdsga"
+        encrypted_summoner_id = "enc_summoner_1"
+
+        ret = league.by_summoner(region, encrypted_summoner_id)
+
+        mock_base_api.raw_request.assert_called_once_with(
+            LeagueApiV4.__name__,
+            league.by_summoner.__name__,
+            region,
+            "https://{region}.api.riotgames.com/lol/league/v4/entries/by-summoner/{encrypted_summonerI_id}".format(
+                region=region, encrypted_summonerI_id=encrypted_summoner_id
+            ),
+            {},
+        )
+
+        assert ret is expected_return
+
+    def test_entries(self):
+        mock_base_api = MagicMock()
+        expected_return = object()
+        mock_base_api.raw_request.return_value = expected_return
+
+        league = LeagueApiV4(mock_base_api)
+        region = "hfhafg"
+        queue = "yolo_q"
+        tier = "wood"
+        division = "VI"
+
+        ret = league.entries(region, queue, tier, division)
+
+        mock_base_api.raw_request.assert_called_once_with(
+            LeagueApiV4.__name__,
+            league.entries.__name__,
+            region,
+            "https://{region}.api.riotgames.com/lol/league/v4/entries/{queue}/{tier}/{division}".format(
+                region=region, queue=queue, tier=tier, division=division
+            ),
+            {},
+        )
+
+        assert ret is expected_return
+
     def test_positions_by_summoner(self):
         mock_base_api = MagicMock()
         expected_return = object()
diff --git a/tests/integration/test_LeagueApiV4.py b/tests/integration/test_LeagueApiV4.py
index f3a8f30..bc903ee 100644
--- a/tests/integration/test_LeagueApiV4.py
+++ b/tests/integration/test_LeagueApiV4.py
@@ -90,6 +90,43 @@ class TestLeagueApiV4(object):
             headers={"X-Riot-Token": mock_context_v4.api_key},
         )
 
+    @pytest.mark.parametrize(
+        "encrypted_summoner_id",
+        ["50", "424299938281", "9999999999999999999999", "rtbf12345"],
+    )
+    def test_by_summoner(self, mock_context_v4, region, encrypted_summoner_id):
+        actual_response = mock_context_v4.watcher.league.by_summoner(
+            region, encrypted_summoner_id
+        )
+
+        assert mock_context_v4.expected_response == actual_response
+        mock_context_v4.get.assert_called_once_with(
+            "https://{region}.api.riotgames.com/lol/league/v4/entries/by-summoner/{encrypted_summoner_id}".format(
+                region=region, encrypted_summoner_id=encrypted_summoner_id
+            ),
+            params={},
+            headers={"X-Riot-Token": mock_context_v4.api_key},
+        )
+
+    @pytest.mark.parametrize(
+        "queue", ["RANKED_SOLO_5x5", "RANKED_FLEX_SR", "RANKED_FLEX_TT"]
+    )
+    @pytest.mark.parametrize("tier", ["IRON", "SILVER", "DIAMOND"])
+    @pytest.mark.parametrize("division", ["I", "IV"])
+    def test_entries(self, mock_context_v4, region, queue, tier, division):
+        actual_response = mock_context_v4.watcher.league.entries(
+            region, queue, tier, division
+        )
+
+        assert mock_context_v4.expected_response == actual_response
+        mock_context_v4.get.assert_called_once_with(
+            "https://{region}.api.riotgames.com/lol/league/v4/entries/{queue}/{tier}/{division}".format(
+                region=region, queue=queue, tier=tier, division=division
+            ),
+            params={},
+            headers={"X-Riot-Token": mock_context_v4.api_key},
+        )
+
     @pytest.mark.parametrize(
         "encrypted_summoner_id",
         ["50", "424299938281", "9999999999999999999999", "rtbf12345"],
