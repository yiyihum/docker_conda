diff --git a/.gitignore b/.gitignore
index 17341c6..f3a28e9 100644
--- a/.gitignore
+++ b/.gitignore
@@ -63,3 +63,4 @@ target/
 .vscode/
 
 api_key
+.venv
diff --git a/README.rst b/README.rst
index b7d555e..d0482ad 100644
--- a/README.rst
+++ b/README.rst
@@ -7,7 +7,7 @@ Check for full (read: slightly better) documentation `here <http://riot-watcher.
 
 RiotWatcher is a thin wrapper on top of the `Riot Games API for League
 of Legends <https://developer.riotgames.com/>`__. All public methods as
-of 1/7/2019 are supported in full.
+of 4/19/2019 are supported in full.
 
 RiotWatcher by default supports a naive rate limiter. This rate limiter will
 try to stop you from making too many requests, and in a single threaded test
@@ -114,6 +114,8 @@ vNext - Unlreleased
 
 Removed deprecated v3 endpoints
 
+Add support for league v4 entry/by-summoner and entry/queue/tier/division endpoints
+
 v2.5.0 - 1/7/2019
 ~~~~~~~~~~~~~~~~~
 
diff --git a/src/riotwatcher/_apis/LeagueApiV4.py b/src/riotwatcher/_apis/LeagueApiV4.py
index 945fcaa..a0cd40d 100644
--- a/src/riotwatcher/_apis/LeagueApiV4.py
+++ b/src/riotwatcher/_apis/LeagueApiV4.py
@@ -65,8 +65,40 @@ class LeagueApiV4(NamedEndpoint):
         url, query = LeagueApiV4Urls.by_id(region=region, league_id=league_id)
         return self._raw_request(self.by_id.__name__, region, url, query)
 
+    def by_summoner(self, region, encrypted_summoner_id):
+        """
+        Get league entries in all queues for a given summoner ID
+
+        :param string region:                   the region to execute this request on
+        :param string encrypted_summoner_id:    the summoner ID to query
+
+        :returns: Set[LeagueEntryDTO]
+        """
+        url, query = LeagueApiV4Urls.by_summoner(
+            region=region, encrypted_summoner_id=encrypted_summoner_id
+        )
+        return self._raw_request(self.by_summoner.__name__, region, url, query)
+
+    def entries(self, region, queue, tier, division):
+        """
+        Get all the league entries
+
+        :param string region:   the region to execute this request on
+        :param string queue:    the queue to query, i.e. RANKED_SOLO_5x5
+        :param string tier:     the tier to query, i.e. DIAMOND
+        :param string division: the division to query, i.e. III
+
+        :returns: Set[LeagueEntryDTO]
+        """
+        url, query = LeagueApiV4Urls.entries(
+            region=region, queue=queue, tier=tier, division=division
+        )
+        return self._raw_request(self.entries.__name__, region, url, query)
+
     def positions_by_summoner(self, region, encrypted_summoner_id):
         """
+        DEPRECATED
+
         Get league positions in all queues for a given summoner ID
 
         :param string region:                   the region to execute this request on
diff --git a/src/riotwatcher/_apis/urls/LeagueApiUrls.py b/src/riotwatcher/_apis/urls/LeagueApiUrls.py
index a45f1c2..0e0ffb2 100644
--- a/src/riotwatcher/_apis/urls/LeagueApiUrls.py
+++ b/src/riotwatcher/_apis/urls/LeagueApiUrls.py
@@ -12,6 +12,10 @@ class LeagueApiV4Urls(object):
     grandmaster_by_queue = LeagueV4Endpoint("/grandmasterleagues/by-queue/{queue}")
     by_id = LeagueV4Endpoint("/leagues/{league_id}")
     master_by_queue = LeagueV4Endpoint("/masterleagues/by-queue/{queue}")
+    by_summoner = LeagueV4Endpoint("/entries/by-summoner/{encrypted_summoner_id}")
+    entries = LeagueV4Endpoint("/entries/{queue}/{tier}/{division}")
+
+    # deprecated
     positions_by_summoner = LeagueV4Endpoint(
         "/positions/by-summoner/{encrypted_summoner_id}"
     )
