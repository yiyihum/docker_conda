diff --git a/test/test_cmdstan_args.py b/test/test_cmdstan_args.py
index 8c6364d..049c592 100644
--- a/test/test_cmdstan_args.py
+++ b/test/test_cmdstan_args.py
@@ -6,6 +6,7 @@ import platform
 from test import check_present
 from time import time
 
+import numpy as np
 import pytest
 
 from cmdstanpy import _TMPDIR, cmdstan_path
@@ -349,6 +350,23 @@ def test_args_good() -> None:
     cmd = cmdstan_args.compose_command(idx=0, csv_file='bern-output-1.csv')
     assert 'id=7 random seed=' in ' '.join(cmd)
 
+    # integer type
+    rng = np.random.default_rng(42)
+    seed = rng.integers(low=0, high=int(1e7))
+    assert not isinstance(seed, int)
+    assert isinstance(seed, np.integer)
+
+    cmdstan_args = CmdStanArgs(
+        model_name='bernoulli',
+        model_exe=exe,
+        chain_ids=[7, 11, 18, 29],
+        data=jdata,
+        seed=seed,
+        method_args=sampler_args,
+    )
+    cmd = cmdstan_args.compose_command(idx=0, csv_file='bern-output-1.csv')
+    assert f'id=7 random seed={seed}' in ' '.join(cmd)
+
     dirname = 'tmp' + str(time())
     if os.path.exists(dirname):
         os.rmdir(dirname)
diff --git a/test/test_model.py b/test/test_model.py
index 700e6ed..7127a8e 100644
--- a/test/test_model.py
+++ b/test/test_model.py
@@ -451,6 +451,35 @@ def test_model_compile_space() -> None:
         assert exe_time == os.path.getmtime(model2.exe_file)
 
 
+def test_model_includes_space() -> None:
+    """Test model with include file in path with spaces."""
+    stan = os.path.join(DATAFILES_PATH, 'bernoulli_include.stan')
+    stan_divide = os.path.join(DATAFILES_PATH, 'divide_real_by_two.stan')
+
+    with tempfile.TemporaryDirectory(
+        prefix="cmdstanpy_testfolder_"
+    ) as tmp_path:
+        path_with_space = os.path.join(tmp_path, "space in path")
+        os.makedirs(path_with_space, exist_ok=True)
+        bern_stan_new = os.path.join(path_with_space, os.path.split(stan)[1])
+        stan_divide_new = os.path.join(
+            path_with_space, os.path.split(stan_divide)[1]
+        )
+        shutil.copyfile(stan, bern_stan_new)
+        shutil.copyfile(stan_divide, stan_divide_new)
+
+        model = CmdStanModel(
+            stan_file=bern_stan_new,
+            stanc_options={'include-paths': path_with_space},
+        )
+        assert "space in path" in str(model.exe_file)
+
+        assert "space in path" in model.src_info()['included_files'][0]
+        assert (
+            "divide_real_by_two.stan" in model.src_info()['included_files'][0]
+        )
+
+
 def test_model_includes_explicit() -> None:
     if os.path.exists(BERN_EXE):
         os.remove(BERN_EXE)
