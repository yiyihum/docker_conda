diff --git a/tests/test_envvars.py b/tests/test_envvars.py
index 038da27..49be0f3 100644
--- a/tests/test_envvars.py
+++ b/tests/test_envvars.py
@@ -75,49 +75,49 @@ def test_envvar_clean():
 def test_in_command_list_true_1():
     output = Output()
     envvars = EnvVars(output)
-    assert envvars.in_command_list("solution create test_solution", ["init", "e2e", "solution create", "create", "simulator stop"])
+    assert envvars.in_command_list("solution new test_solution", ["init", "e2e", "solution new", "new", "simulator stop"])
 
 
 def test_in_command_list_true_2():
     output = Output()
     envvars = EnvVars(output)
-    assert envvars.in_command_list("solution create", ["init", "e2e", "solution create", "create", "simulator stop"])
+    assert envvars.in_command_list("solution new", ["init", "e2e", "solution new", "new", "simulator stop"])
 
 
 def test_in_command_list_false_1():
     output = Output()
     envvars = EnvVars(output)
-    assert not envvars.in_command_list("solution add filtermodule", ["init", "e2e", "solution create", "create", "simulator stop"])
+    assert not envvars.in_command_list("solution add filtermodule", ["init", "e2e", "solution new", "new", "simulator stop"])
 
 
 def test_in_command_list_false_2():
     output = Output()
     envvars = EnvVars(output)
-    assert not envvars.in_command_list("solution addotherstuff filtermodule", ["init", "e2e", "solution add", "create", "simulator stop"])
+    assert not envvars.in_command_list("solution addotherstuff filtermodule", ["init", "e2e", "solution add", "new", "simulator stop"])
 
 
 def test_in_command_list_empty_1():
     output = Output()
     envvars = EnvVars(output)
-    assert not envvars.in_command_list("", ["init", "e2e", "solution create", "create", "simulator stop"])
+    assert not envvars.in_command_list("", ["init", "e2e", "solution new", "new", "simulator stop"])
 
 
 def test_in_command_list_empty_2():
     output = Output()
     envvars = EnvVars(output)
-    assert not envvars.in_command_list("solution create test_solution", ["init", "e2e", "", "create", "simulator stop"])
+    assert not envvars.in_command_list("solution new test_solution", ["init", "e2e", "", "new", "simulator stop"])
 
 
 def test_in_command_list_empty_3():
     output = Output()
     envvars = EnvVars(output)
-    assert envvars.in_command_list("", ["init", "e2e", "", "create", "simulator stop"])
+    assert envvars.in_command_list("", ["init", "e2e", "", "new", "simulator stop"])
 
 
 def test_is_bypass_command_true():
     output = Output()
     envvars = EnvVars(output)
-    assert envvars.is_bypass_command("solution create EdgeSolution")
+    assert envvars.is_bypass_command("solution new EdgeSolution")
 
 
 def test_is_bypass_command_false():
@@ -141,7 +141,7 @@ def test_is_terse_command_true():
 def test_is_terse_command_false():
     output = Output()
     envvars = EnvVars(output)
-    assert not envvars.is_terse_command("solution create")
+    assert not envvars.is_terse_command("solution new")
 
 
 def test_is_terse_command_empty():
diff --git a/tests/test_iotedgedev.py b/tests/test_iotedgedev.py
index c436ca8..60d7f06 100644
--- a/tests/test_iotedgedev.py
+++ b/tests/test_iotedgedev.py
@@ -36,7 +36,7 @@ def create_solution(request):
 
     runner = CliRunner()
     os.chdir(tests_dir)
-    result = runner.invoke(cli.main, ['solution', 'create', test_solution])
+    result = runner.invoke(cli.main, ['solution', 'new', test_solution])
     print(result.output)
     assert 'AZURE IOT EDGE SOLUTION CREATED' in result.output
 
@@ -58,7 +58,7 @@ def test_solution_create_in_non_empty_current_path(request):
 
     cli = __import__("iotedgedev.cli", fromlist=['main'])
     runner = CliRunner()
-    result = runner.invoke(cli.main, ['solution', 'create', '.'])
+    result = runner.invoke(cli.main, ['solution', 'new', '.'])
     print(result.output)
 
     assert "Directory is not empty" in result.output
@@ -75,7 +75,7 @@ def test_solution_create_in_empty_current_path(request):
 
     cli = __import__("iotedgedev.cli", fromlist=['main'])
     runner = CliRunner()
-    result = runner.invoke(cli.main, ['solution', 'create', '.'])
+    result = runner.invoke(cli.main, ['solution', 'new', '.'])
     print(result.output)
 
     assert 'AZURE IOT EDGE SOLUTION CREATED' in result.output
@@ -88,7 +88,7 @@ def test_solution_create_in_non_empty_dir(request):
 
     cli = __import__("iotedgedev.cli", fromlist=['main'])
     runner = CliRunner()
-    result = runner.invoke(cli.main, ['solution', 'create', test_solution])
+    result = runner.invoke(cli.main, ['solution', 'new', test_solution])
     print(result.output)
 
     assert "Directory is not empty" in result.output
@@ -104,7 +104,7 @@ def test_solution_create_in_empty_child_dir(request):
 
     cli = __import__("iotedgedev.cli", fromlist=['main'])
     runner = CliRunner()
-    result = runner.invoke(cli.main, ['solution', 'create', dirname])
+    result = runner.invoke(cli.main, ['solution', 'new', dirname])
     print(result.output)
 
     assert 'AZURE IOT EDGE SOLUTION CREATED' in result.output
diff --git a/tests/test_simulator.py b/tests/test_simulator.py
index 5ba1e56..38849d6 100644
--- a/tests/test_simulator.py
+++ b/tests/test_simulator.py
@@ -26,7 +26,7 @@ def create_solution(request):
 
     runner = CliRunner()
     os.chdir(tests_dir)
-    result = runner.invoke(cli.main, ['solution', 'create', test_solution])
+    result = runner.invoke(cli.main, ['solution', 'new', test_solution])
     print(result.output)
 
     assert 'AZURE IOT EDGE SOLUTION CREATED' in result.output
