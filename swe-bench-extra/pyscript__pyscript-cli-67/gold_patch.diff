diff --git a/src/pyscript/__init__.py b/src/pyscript/__init__.py
index eb2c702..6b07387 100644
--- a/src/pyscript/__init__.py
+++ b/src/pyscript/__init__.py
@@ -5,11 +5,11 @@ from pathlib import Path
 import platformdirs
 from rich.console import Console
 
+LATEST_PYSCRIPT_VERSION = "2022.12.1"
 APPNAME = "pyscript"
 APPAUTHOR = "python"
 DEFAULT_CONFIG_FILENAME = ".pyscriptconfig"
 
-
 # Default initial data for the command line.
 DEFAULT_CONFIG = {
     # Name of config file for PyScript projects.
diff --git a/src/pyscript/_generator.py b/src/pyscript/_generator.py
index aedac05..e46d373 100644
--- a/src/pyscript/_generator.py
+++ b/src/pyscript/_generator.py
@@ -6,7 +6,7 @@ from typing import Optional
 import jinja2
 import toml
 
-from pyscript import config
+from pyscript import LATEST_PYSCRIPT_VERSION, config
 
 _env = jinja2.Environment(loader=jinja2.PackageLoader("pyscript"))
 TEMPLATE_PYTHON_CODE = """# Replace the code below with your own
@@ -15,7 +15,11 @@ print("Hello, world!")
 
 
 def create_project_html(
-    title: str, python_file_path: str, config_file_path: str, output_file_path: Path
+    title: str,
+    python_file_path: str,
+    config_file_path: str,
+    output_file_path: Path,
+    pyscript_version: str = LATEST_PYSCRIPT_VERSION,
 ) -> None:
     """Write a Python script string to an HTML file template."""
     template = _env.get_template("basic.html")
@@ -25,6 +29,7 @@ def create_project_html(
                 python_file_path=python_file_path,
                 config_file_path=config_file_path,
                 title=title,
+                pyscript_version=pyscript_version,
             )
         )
 
@@ -49,7 +54,11 @@ def save_config_file(config_file: Path, configuration: dict):
 
 
 def string_to_html(
-    code: str, title: str, output_path: Path, template_name: str = "basic.html"
+    code: str,
+    title: str,
+    output_path: Path,
+    template_name: str = "basic.html",
+    pyscript_version: str = LATEST_PYSCRIPT_VERSION,
 ) -> None:
     """Write a Python script string to an HTML file template.
 
@@ -59,14 +68,18 @@ def string_to_html(
                      PyScript app template
         - title(str): application title, that will be placed as title of the html
                       app template
+        - output_path(Path): path where to write the new html file
         - template_name(str): name of the template to be used
+        - pyscript_version(str): version of pyscript to be used
 
     Output:
         (None)
     """
     template = _env.get_template(template_name)
     with output_path.open("w") as fp:
-        fp.write(template.render(code=code, title=title))
+        fp.write(
+            template.render(code=code, title=title, pyscript_version=pyscript_version)
+        )
 
 
 def file_to_html(
@@ -74,11 +87,12 @@ def file_to_html(
     title: str,
     output_path: Optional[Path],
     template_name: str = "basic.html",
+    pyscript_version: str = LATEST_PYSCRIPT_VERSION,
 ) -> None:
     """Write a Python script string to an HTML file template."""
     output_path = output_path or input_path.with_suffix(".html")
     with input_path.open("r") as fp:
-        string_to_html(fp.read(), title, output_path, template_name)
+        string_to_html(fp.read(), title, output_path, template_name, pyscript_version)
 
 
 def create_project(
@@ -86,6 +100,7 @@ def create_project(
     app_description: str,
     author_name: str,
     author_email: str,
+    pyscript_version: str = LATEST_PYSCRIPT_VERSION,
 ) -> None:
     """
     New files created:
@@ -124,4 +139,5 @@ def create_project(
         config["project_main_filename"],
         config["project_config_filename"],
         index_file,
+        pyscript_version=pyscript_version,
     )
diff --git a/src/pyscript/plugins/create.py b/src/pyscript/plugins/create.py
index aeed292..e51ecd0 100644
--- a/src/pyscript/plugins/create.py
+++ b/src/pyscript/plugins/create.py
@@ -1,4 +1,4 @@
-from pyscript import app, cli, plugins
+from pyscript import LATEST_PYSCRIPT_VERSION, app, cli, plugins
 from pyscript._generator import create_project
 
 try:
@@ -13,6 +13,11 @@ def create(
     app_description: str = typer.Option(..., prompt=True),
     author_name: str = typer.Option(..., prompt=True),
     author_email: str = typer.Option(..., prompt=True),
+    pyscript_version: str = typer.Option(
+        LATEST_PYSCRIPT_VERSION,
+        "--pyscript-version",
+        help="If provided, defines what version of pyscript will be used to create the app",
+    ),
 ):
     """
     Create a new pyscript project with the passed in name, creating a new
@@ -21,7 +26,9 @@ def create(
     TODO: Agree on the metadata to be collected from the user.
     """
     try:
-        create_project(app_name, app_description, author_name, author_email)
+        create_project(
+            app_name, app_description, author_name, author_email, pyscript_version
+        )
     except FileExistsError:
         raise cli.Abort(
             f"A directory called {app_name} already exists in this location."
diff --git a/src/pyscript/plugins/wrap.py b/src/pyscript/plugins/wrap.py
index 931f406..d4f68a7 100644
--- a/src/pyscript/plugins/wrap.py
+++ b/src/pyscript/plugins/wrap.py
@@ -3,7 +3,7 @@ import webbrowser
 from pathlib import Path
 from typing import Optional
 
-from pyscript import app, cli, console, plugins
+from pyscript import LATEST_PYSCRIPT_VERSION, app, cli, console, plugins
 from pyscript._generator import file_to_html, string_to_html
 
 try:
@@ -29,6 +29,11 @@ def wrap(
     ),
     show: Optional[bool] = typer.Option(None, help="Open output file in web browser."),
     title: Optional[str] = typer.Option(None, help="Add title to HTML file."),
+    pyscript_version: str = typer.Option(
+        LATEST_PYSCRIPT_VERSION,
+        "--pyscript-version",
+        help="If provided, defines what version of pyscript will be used to create the app",
+    ),
 ) -> None:
     """Wrap a Python script inside an HTML file."""
     title = title or "PyScript App"
@@ -52,9 +57,21 @@ def wrap(
         else:
             raise cli.Abort("Must provide an output file or use `--show` option")
     if input_file is not None:
-        file_to_html(input_file, title, output, template_name="wrap.html")
+        file_to_html(
+            input_file,
+            title,
+            output,
+            template_name="wrap.html",
+            pyscript_version=pyscript_version,
+        )
     if command:
-        string_to_html(command, title, output, template_name="wrap.html")
+        string_to_html(
+            command,
+            title,
+            output,
+            template_name="wrap.html",
+            pyscript_version=pyscript_version,
+        )
     if output:
         if show:
             console.print("Opening in web browser!")
diff --git a/src/pyscript/templates/basic.html b/src/pyscript/templates/basic.html
index 82817fa..256a406 100644
--- a/src/pyscript/templates/basic.html
+++ b/src/pyscript/templates/basic.html
@@ -2,8 +2,8 @@
 <html lang="en">
 <head>
     <title>{{ title }}</title>
-    <link rel="stylesheet" href="https://pyscript.net/alpha/pyscript.css"/>
-    <script defer src="https://pyscript.net/alpha/pyscript.js"></script>
+    <link rel="stylesheet" href="https://pyscript.net/releases/{{ pyscript_version }}/pyscript.css"/>
+    <script defer src="https://pyscript.net/releases/{{ pyscript_version }}/pyscript.js"></script>
 </head>
 <body>
     <py-config src="./{{ config_file_path }}"></py-config>
diff --git a/src/pyscript/templates/wrap.html b/src/pyscript/templates/wrap.html
index 16c1a3a..2b84760 100644
--- a/src/pyscript/templates/wrap.html
+++ b/src/pyscript/templates/wrap.html
@@ -2,8 +2,8 @@
 <html lang="en">
 <head>
     <title>{{ title }}</title>
-    <link rel="stylesheet" href="https://pyscript.net/alpha/pyscript.css"/>
-    <script defer src="https://pyscript.net/alpha/pyscript.js"></script>
+    <link rel="stylesheet" href="https://pyscript.net/releases/{{ pyscript_version }}/pyscript.css"/>
+    <script defer src="https://pyscript.net/releases/{{ pyscript_version }}/pyscript.js"></script>
 </head>
 <body>
 <py-script>
