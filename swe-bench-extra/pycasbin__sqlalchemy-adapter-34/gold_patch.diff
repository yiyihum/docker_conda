diff --git a/.travis.yml b/.travis.yml
index ec8e9e5..5763d29 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,9 +1,10 @@
 language: python
 python:
-- '3.4'
 - '3.5'
 - '3.6'
 - '3.7'
+- '3.8'
+- '3.9'
 install:
 - pip install -r requirements.txt
 - pip install coveralls
diff --git a/README.md b/README.md
index 37fb3e8..56ea6ed 100644
--- a/README.md
+++ b/README.md
@@ -1,7 +1,7 @@
 SQLAlchemy Adapter for PyCasbin 
 ====
 
-[![Build Status](https://www.travis-ci.org/pycasbin/sqlalchemy-adapter.svg?branch=master)](https://www.travis-ci.org/pycasbin/sqlalchemy-adapter)
+[![Build Status](https://www.travis-ci.com/pycasbin/sqlalchemy-adapter.svg?branch=master)](https://www.travis-ci.com/pycasbin/sqlalchemy-adapter)
 [![Coverage Status](https://coveralls.io/repos/github/pycasbin/sqlalchemy-adapter/badge.svg)](https://coveralls.io/github/pycasbin/sqlalchemy-adapter)
 [![Version](https://img.shields.io/pypi/v/casbin_sqlalchemy_adapter.svg)](https://pypi.org/project/casbin_sqlalchemy_adapter/)
 [![PyPI - Wheel](https://img.shields.io/pypi/wheel/casbin_sqlalchemy_adapter.svg)](https://pypi.org/project/casbin_sqlalchemy_adapter/)
diff --git a/casbin_sqlalchemy_adapter/adapter.py b/casbin_sqlalchemy_adapter/adapter.py
index 9f47816..d7b3881 100644
--- a/casbin_sqlalchemy_adapter/adapter.py
+++ b/casbin_sqlalchemy_adapter/adapter.py
@@ -123,6 +123,12 @@ class Adapter(persist.Adapter):
         self._save_policy_line(ptype, rule)
         self._commit()
 
+    def add_policies(self, sec, ptype, rules):
+        """adds a policy rules to the storage."""
+        for rule in rules:
+            self._save_policy_line(ptype, rule)
+        self._commit()
+
     def remove_policy(self, sec, ptype, rule):
         """removes a policy rule from the storage."""
         query = self._session.query(self._db_class)
@@ -134,6 +140,16 @@ class Adapter(persist.Adapter):
 
         return True if r > 0 else False
 
+    def remove_policies(self, sec, ptype, rules):
+        """removes a policy rules from the storage."""
+        query = self._session.query(self._db_class)
+        query = query.filter(self._db_class.ptype == ptype)
+        for rule in rules:
+            query = query.filter(or_(getattr(self._db_class, "v{}".format(i)) == v for i, v in enumerate(rule)))
+        query.delete()
+        self._commit()
+
+
     def remove_filtered_policy(self, sec, ptype, field_index, *field_values):
         """removes policy rules that match the filter from the storage.
         This is part of the Auto-Save feature.
