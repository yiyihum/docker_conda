diff --git a/tests/test_models/test_li_ion.py b/tests/test_models/test_li_ion.py
index d14c23c8..e0a1e59c 100644
--- a/tests/test_models/test_li_ion.py
+++ b/tests/test_models/test_li_ion.py
@@ -17,23 +17,24 @@ class TestLiIonSPM(unittest.TestCase):
 
         modeltest.test_all()
 
+    def test_surface_concentrartion(self):
+        model = pybamm.li_ion.SPM()
+        params = model.default_parameter_values
+        params.process_model(model)
+        disc = model.default_discretisation
+        disc.process_model(model)
+        t_eval = np.linspace(0, 1, 100)
+        solver = model.default_solver
+        solver.solve(model, t_eval)
+        T, Y = solver.t, solver.y
 
-def test_surface_concentrartion(self):
-    model = pybamm.li_ion.SPM()
-    disc = model.default_discretisation
-    disc.process_model(model)
-    t_eval = np.linspace(0, 1, 100)
-    solver = model.default_solver
-    solver.solve(model, t_eval)
-    T, Y = solver.t, solver.y
-
-    # check surface concentration decreases in negative particle and
-    # increases in positive particle for discharge
-    np.testing.assert_array_less(
-        model.variables["cn_surf"].evaluate(T, Y)[:, 1:],
-        model.variables["cn_surf"].evaluate(T, Y)[:, :-1],
-    )
-    np.testing.assert_array_less(
-        model.variables["cp_surf"].evaluate(T, Y)[:, :-1],
-        model.variables["cp_surf"].evaluate(T, Y)[:, 1:],
-    )
+        # check surface concentration decreases in negative particle and
+        # increases in positive particle for discharge
+        np.testing.assert_array_less(
+            model.variables["cn_surf"].evaluate(T, Y)[:, 1:],
+            model.variables["cn_surf"].evaluate(T, Y)[:, :-1],
+        )
+        np.testing.assert_array_less(
+            model.variables["cp_surf"].evaluate(T, Y)[:, :-1],
+            model.variables["cp_surf"].evaluate(T, Y)[:, 1:],
+        )
