diff --git a/test/test_expressions.py b/test/test_expressions.py
index 3074ef4..7c42e8a 100644
--- a/test/test_expressions.py
+++ b/test/test_expressions.py
@@ -55,6 +55,16 @@ class TestExpressions(TestBase):
             " | extend ['foo.bar'] = (shoo * 2)",
             Query().extend((col.shoo * 2).assign_to(col.foo.bar)).render(),
         )
+        self.assertEqual(
+            " | extend foo = (shoo * 2)",
+            Query().extend(foo=(col.shoo * 2)).render(),
+        )
+
+    def test_extend_const(self):
+        self.assertEqual(
+            " | extend foo = (5), bar = (\"bar\"), other_col = other",
+            Query().extend(foo=5, bar="bar", other_col=col.other).render(),
+        )
 
     def test_between_timespan(self):
         self.assertEqual(
diff --git a/test/test_functions.py b/test/test_functions.py
index 247142d..55fc998 100644
--- a/test/test_functions.py
+++ b/test/test_functions.py
@@ -7,7 +7,7 @@ from pykusto.query import Query
 from test.test_base import TestBase
 
 
-# TODO dcount_hll, iif
+# TODO dcount_hll
 
 class TestFunction(TestBase):
     def test_acos(self):
@@ -629,3 +629,16 @@ class TestFunction(TestBase):
             " | summarize active_days = dcount(bin(timestamp, time(1.0:0:0.0)))",
             Query().summarize(active_days=f.dcount(f.bin(col.timestamp, datetime.timedelta(1)))).render()
         )
+
+    def test_iff(self):
+        self.assertEqual(
+            " | project foo = (iff(foo > (ago(time(2.0:0:0.0))), time(3.0:0:0.0), time(4.0:0:0.0)))",
+            Query().project(foo=f.iff(col.foo > f.ago(datetime.timedelta(2)), datetime.timedelta(3), datetime.timedelta(4))).render()
+        )
+
+    def test_iif(self):
+        # iif is just an alias to iff
+        self.assertEqual(
+            " | project foo = (iff(foo > (ago(time(2.0:0:0.0))), time(3.0:0:0.0), time(4.0:0:0.0)))",
+            Query().project(foo=f.iif(col.foo > f.ago(datetime.timedelta(2)), datetime.timedelta(3), datetime.timedelta(4))).render()
+        )
