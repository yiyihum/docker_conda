diff --git a/.gitignore b/.gitignore
index 456846f..78112ac 100644
--- a/.gitignore
+++ b/.gitignore
@@ -334,3 +334,4 @@ ASALocalRun/
 /.idea/checkstyle-idea.xml
 *.iml
 /.idea/misc.xml
+/venv
diff --git a/pykusto/functions.py b/pykusto/functions.py
index 8450ef8..210958f 100644
--- a/pykusto/functions.py
+++ b/pykusto/functions.py
@@ -120,6 +120,8 @@ def ceiling(expr: NumberType) -> NumberExpression:
 
 def cos(expr: NumberType) -> NumberExpression:
     return expr.cos()
+
+
 #
 # def cot(self): return
 
@@ -257,12 +259,12 @@ def hourofday(expr: DatetimeType) -> NumberExpression:
     return expr.hourofday()
 
 
-def iif(predicate: BooleanType, if_true: ExpressionType, if_false: ExpressionType) -> BaseExpression:
-    return BaseExpression(KQL('iif({}, {}, {})'.format(predicate, if_true, if_false)))
+def iff(predicate: BooleanType, if_true: ExpressionType, if_false: ExpressionType) -> BaseExpression:
+    return BaseExpression(KQL('iff({}, {}, {})'.format(predicate, _subexpr_to_kql(if_true), _subexpr_to_kql(if_false))))
 
 
-def iff(predicate: BooleanType, if_true: ExpressionType, if_false: ExpressionType) -> BaseExpression:
-    return BaseExpression(KQL('iff({}, {}, {})'.format(predicate, if_true, if_false)))
+def iif(predicate: BooleanType, if_true: ExpressionType, if_false: ExpressionType) -> BaseExpression:
+    return iff(predicate, if_true, if_false)
 
 
 #
diff --git a/pykusto/query.py b/pykusto/query.py
index 5025977..b7157fb 100644
--- a/pykusto/query.py
+++ b/pykusto/query.py
@@ -12,7 +12,7 @@ from pykusto.expressions import BooleanType, ExpressionType, AggregationExpressi
     StringType, AssignmentBase, AssignmentFromAggregationToColumn, AssignmentToSingleColumn, Column, BaseExpression, \
     AssignmentFromColumnToColumn
 from pykusto.udf import stringify_python_func
-from pykusto.utils import KQL, logger
+from pykusto.utils import KQL, logger, to_kql
 
 
 class Order(Enum):
@@ -137,7 +137,10 @@ class Query:
             else:
                 assignments.append(arg)
         for column_name, expression in kwargs.items():
-            assignments.append(expression.assign_to(Column(column_name)))
+            if isinstance(expression, BaseExpression):
+                assignments.append(expression.assign_to(Column(column_name)))
+            else:
+                assignments.append(BaseExpression(to_kql(expression)).assign_to(Column(column_name)))
         return ExtendQuery(self, *assignments)
 
     def summarize(self, *args: Union[AggregationExpression, AssignmentFromAggregationToColumn],
diff --git a/setup.py b/setup.py
index 605de64..b31e771 100644
--- a/setup.py
+++ b/setup.py
@@ -2,7 +2,7 @@ from setuptools import setup, find_packages
 
 setup(
     name='pykusto',
-    version='0.0.4',
+    version='0.0.5',
     packages=find_packages(exclude=['test']),
     url='https://github.com/Azure/pykusto',
     license='MIT License',
