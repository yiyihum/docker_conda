diff --git a/tests/test_resource.py b/tests/test_resource.py
index 882d4bc..3abaa88 100644
--- a/tests/test_resource.py
+++ b/tests/test_resource.py
@@ -28,46 +28,6 @@ class TestResource(unittest.TestCase):
         with self.assertRaises(ValueError):
             self.assertEqual(cast(obj), obj)
 
-    def test_cast_from_response(self):
-        resp = MagicMock()
-        resp.headers = {
-            "X-Request-Id": "0av50sm5l2n2gkf88ehg",
-            "X-RateLimit-Limit": "2000",
-            "X-RateLimit-Remaining": "1985",
-            "X-RateLimit-Reset": "1564624560",
-            "Date": "Thu, 01 Aug 2019 01:26:44 GMT",
-            "Server": "cloudflare",
-            "CF-RAY": "4ff4b71268424738-EWR",
-        }
-
-        request = Request("GET", "/sites", {})
-        empty = cast({}, "Empty", Response(resp, request))
-        response = empty.get_response()
-
-        self.assertEqual(type(response), Response)
-        self.assertEqual(response.request_id, "0av50sm5l2n2gkf88ehg")
-        self.assertEqual(response.rate_limit, 2000)
-        self.assertEqual(response.rate_limit_remaining, 1985)
-        self.assertEqual(response.rate_limit_reset, datetime(2019, 8, 1, 1, 56))
-        self.assertEqual(response.date, "Thu, 01 Aug 2019 01:26:44 GMT")
-        self.assertEqual(response.proxy_metadata["server"], "cloudflare")
-        self.assertEqual(response.proxy_metadata["cf-ray"], "4ff4b71268424738-EWR")
-        self.assertEqual(response.request.method, "GET")
-        self.assertEqual(response.request.path, "/sites")
-        self.assertEqual(response.request.body, {})
-
-        resp = MagicMock()
-        resp.headers = {
-            "X-Request-Id": "abcd123",
-            "X-RateLimit-Limit": "invalid2000",
-            "X-RateLimit-Remaining": "1985",
-            "X-RateLimit-Reset": "1564624560",
-            "Date": "Thu, 01 Aug 2019 01:26:44 GMT",
-        }
-
-        with self.assertRaises(ValueError):
-            cast({}, "Empty", Response(resp, request))
-
     def test_cast_page(self):
         # should return a page of cast data
         page = cast(
diff --git a/tests/test_response.py b/tests/test_response.py
new file mode 100644
index 0000000..6b83b1d
--- /dev/null
+++ b/tests/test_response.py
@@ -0,0 +1,79 @@
+import unittest
+import recurly
+from datetime import datetime
+from recurly import Response, Request
+from unittest.mock import Mock, MagicMock
+
+
+class TestResponse(unittest.TestCase):
+    def test_init(self):
+        resp = MagicMock()
+        resp.headers = {
+            "X-Request-Id": "0av50sm5l2n2gkf88ehg",
+            "X-RateLimit-Limit": "2000",
+            "X-RateLimit-Remaining": "1985",
+            "X-RateLimit-Reset": "1564624560",
+            "Recurly-Total-Records": "100",
+            "Date": "Thu, 01 Aug 2019 01:26:44 GMT",
+            "Server": "cloudflare",
+            "CF-RAY": "4ff4b71268424738-EWR",
+        }
+
+        req = Request("GET", "/sites", {})
+        response = Response(resp, req)
+
+        self.assertEqual(type(response), Response)
+        self.assertEqual(response.request_id, "0av50sm5l2n2gkf88ehg")
+        self.assertEqual(response.rate_limit, 2000)
+        self.assertEqual(response.rate_limit_remaining, 1985)
+        self.assertEqual(response.rate_limit_reset, datetime(2019, 8, 1, 1, 56))
+        self.assertEqual(response.total_records, 100)
+        self.assertEqual(response.date, "Thu, 01 Aug 2019 01:26:44 GMT")
+        self.assertEqual(response.proxy_metadata["server"], "cloudflare")
+        self.assertEqual(response.proxy_metadata["cf-ray"], "4ff4b71268424738-EWR")
+        self.assertEqual(response.request.method, "GET")
+        self.assertEqual(response.request.path, "/sites")
+        self.assertEqual(response.request.body, {})
+
+    def test_init_with_invalid_headers(self):
+        resp = MagicMock()
+        resp.headers = {
+            "X-Request-Id": "0av50sm5l2n2gkf88ehg",
+            "X-RateLimit-Limit": "notanum",
+            "X-RateLimit-Remaining": "notanum",
+            "X-RateLimit-Reset": "notanum",
+            "recurly-total-records": "notanum",
+            "Date": "Thu, 01 Aug 2019 01:26:44 GMT",
+            "Server": "cloudflare",
+            "CF-RAY": "4ff4b71268424738-EWR",
+        }
+
+        req = Request("GET", "/sites", {})
+        response = Response(resp, req)
+
+        self.assertEqual(type(response), Response)
+        self.assertEqual(response.request_id, "0av50sm5l2n2gkf88ehg")
+        self.assertEqual(response.rate_limit, None)
+        self.assertEqual(response.rate_limit_remaining, None)
+        self.assertEqual(response.rate_limit_reset, None)
+        self.assertEqual(response.total_records, None)
+        self.assertEqual(response.date, "Thu, 01 Aug 2019 01:26:44 GMT")
+        self.assertEqual(response.proxy_metadata["server"], "cloudflare")
+        self.assertEqual(response.proxy_metadata["cf-ray"], "4ff4b71268424738-EWR")
+
+    def test_init_with_missing_headers(self):
+        resp = MagicMock()
+        resp.headers = {}
+
+        req = Request("GET", "/sites", {})
+        response = Response(resp, req)
+
+        self.assertEqual(type(response), Response)
+        self.assertEqual(response.request_id, None)
+        self.assertEqual(response.rate_limit, None)
+        self.assertEqual(response.rate_limit_remaining, None)
+        self.assertEqual(response.rate_limit_reset, None)
+        self.assertEqual(response.total_records, None)
+        self.assertEqual(response.date, None)
+        self.assertEqual(response.proxy_metadata["server"], None)
+        self.assertEqual(response.proxy_metadata["cf-ray"], None)
