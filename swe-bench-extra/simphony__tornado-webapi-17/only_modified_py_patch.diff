diff --git a/tornadowebapi/__init__.py b/tornadowebapi/__init__.py
index 12f7bda..f080b6e 100644
--- a/tornadowebapi/__init__.py
+++ b/tornadowebapi/__init__.py
@@ -1,10 +1,9 @@
-from .handler import ResourceHandler, CollectionHandler
-from .utils import url_path_join, with_end_slash
+from . import registry
 
 MAJOR = 0
-MINOR = 1
+MINOR = 2
 MICRO = 0
-IS_RELEASED = True
+IS_RELEASED = False
 
 __version__ = '%d.%d.%d' % (MAJOR, MINOR, MICRO)
 
@@ -30,13 +29,4 @@ def api_handlers(base_urlpath, version="v1"):
     The current implementation does not support multiple API versions yet.
     The version option is only provided for futureproofing.
     """
-    return [
-        (with_end_slash(
-            url_path_join(base_urlpath, "api", version, "(.*)", "(.*)")),
-         ResourceHandler
-         ),
-        (with_end_slash(
-            url_path_join(base_urlpath, "api", version, "(.*)")),
-         CollectionHandler
-         ),
-        ]
+    return registry.registry.api_handlers(base_urlpath, version)
diff --git a/tornadowebapi/handler.py b/tornadowebapi/handler.py
index f9c8956..609a1c5 100644
--- a/tornadowebapi/handler.py
+++ b/tornadowebapi/handler.py
@@ -4,11 +4,14 @@ from tornado.log import app_log
 from . import exceptions
 from .http import httpstatus
 from .http.payloaded_http_error import PayloadedHTTPError
-from .registry import registry
 from .utils import url_path_join, with_end_slash
 
 
 class BaseHandler(web.RequestHandler):
+    def initialize(self, registry):
+        """Initialization method for when the class is instantiated."""
+        self._registry = registry
+
     @gen.coroutine
     def prepare(self):
         """Runs before any specific handler. """
@@ -17,8 +20,8 @@ class BaseHandler(web.RequestHandler):
 
     @property
     def registry(self):
-        """Returns the global class vs Resource registry"""
-        return registry
+        """Returns the class vs Resource registry"""
+        return self._registry
 
     @property
     def log(self):
diff --git a/tornadowebapi/registry.py b/tornadowebapi/registry.py
index c5bac97..ee6bfe0 100644
--- a/tornadowebapi/registry.py
+++ b/tornadowebapi/registry.py
@@ -1,3 +1,5 @@
+from .handler import ResourceHandler, CollectionHandler
+from .utils import url_path_join, with_end_slash
 from .resource import Resource
 from .authenticator import NullAuthenticator
 
@@ -63,5 +65,36 @@ class Registry:
         """If the registry contains the given item"""
         return item in self._registered_types
 
+    def api_handlers(self, base_urlpath, version="v1"):
+        """Returns the API handlers for the interface.
+        Add these handlers to your application to provide an
+        interface to your Resources.
+
+
+        Parameters
+        ----------
+        base_urlpath: str
+            The base url path to serve
+        version: str
+            A string identifying the version of the API.
+
+        Notes
+        -----
+        The current implementation does not support multiple API versions yet.
+        The version option is only provided for futureproofing.
+        """
+        return [
+            (with_end_slash(
+                url_path_join(base_urlpath, "api", version, "(.*)", "(.*)")),
+             ResourceHandler,
+             dict(registry=self)
+             ),
+            (with_end_slash(
+                url_path_join(base_urlpath, "api", version, "(.*)")),
+             CollectionHandler,
+             dict(registry=self)
+             ),
+        ]
+
 #: global registry for registration of the classes.
 registry = Registry()

