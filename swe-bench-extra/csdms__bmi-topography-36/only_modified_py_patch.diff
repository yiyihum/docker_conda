diff --git a/bmi_topography/cli.py b/bmi_topography/cli.py
index 20c2121..4bbf24a 100644
--- a/bmi_topography/cli.py
+++ b/bmi_topography/cli.py
@@ -8,7 +8,7 @@ from .topography import Topography
 @click.version_option()
 @click.option("-q", "--quiet", is_flag=True, help="Enables quiet mode.")
 @click.option(
-    "--dem_type",
+    "--dem-type",
     type=click.Choice(Topography.VALID_DEM_TYPES, case_sensitive=True),
     default=Topography.DEFAULT["dem_type"],
     help="The global raster dataset.",
@@ -43,19 +43,19 @@ from .topography import Topography
     show_default=True,
 )
 @click.option(
-    "--output_format",
+    "--output-format",
     type=click.Choice(Topography.VALID_OUTPUT_FORMATS.keys(), case_sensitive=True),
     default=Topography.DEFAULT["output_format"],
     help="Output file format.",
     show_default=True,
 )
 @click.option(
-    "--api_key",
+    "--api-key",
     type=str,
     help="OpenTopography API key.",
     show_default=True,
 )
-@click.option("--no_fetch", is_flag=True, help="Do not fetch data from server.")
+@click.option("--no-fetch", is_flag=True, help="Do not fetch data from server.")
 def main(quiet, dem_type, south, north, west, east, output_format, api_key, no_fetch):
     """Fetch and cache NASA SRTM and JAXA ALOS land elevation data
 
@@ -73,9 +73,12 @@ def main(quiet, dem_type, south, north, west, east, output_format, api_key, no_f
     topo = Topography(dem_type, south, north, west, east, output_format)
     if not no_fetch:
         if not quiet:
-            click.secho("Fetching data...", fg="yellow")
-        topo.fetch()
+            click.secho("Fetching data...", fg="yellow", err=True)
+        path_to_dem = topo.fetch()
         if not quiet:
             click.secho(
-                "File downloaded to {}".format(getattr(topo, "cache_dir")), fg="green"
+                "File downloaded to {}".format(getattr(topo, "cache_dir")),
+                fg="green",
+                err=True,
             )
+        print(path_to_dem)
diff --git a/bmi_topography/topography.py b/bmi_topography/topography.py
index 6198662..91070dd 100644
--- a/bmi_topography/topography.py
+++ b/bmi_topography/topography.py
@@ -1,6 +1,7 @@
 """Base class to access elevation data"""
 import os
 import urllib
+import warnings
 from pathlib import Path
 
 import requests
@@ -9,7 +10,7 @@ import xarray as xr
 from .bbox import BoundingBox
 
 
-def find_api_key():
+def find_user_api_key():
     """Search for an API key."""
     if "OPENTOPOGRAPHY_API_KEY" in os.environ:
         api_key = os.environ["OPENTOPOGRAPHY_API_KEY"]
@@ -21,6 +22,15 @@ def find_api_key():
     return api_key
 
 
+def use_demo_key():
+    warnings.warn(
+        "You are using a demo key to fetch data from OpenTopography, functionality "
+        "will be limited. See https://bmi-topography.readthedocs.io/en/latest/#api-key "
+        "for more information."
+    )
+    return "demoapikeyot2022"
+
+
 def read_first_of(files):
     """Read the contents of the first file encountered."""
     contents = ""
@@ -67,7 +77,7 @@ class Topography:
         api_key=None,
     ):
         if api_key is None:
-            self._api_key = find_api_key()
+            self._api_key = find_user_api_key() or use_demo_key()
         else:
             self._api_key = api_key
 
