diff --git a/mockito/matchers.py b/mockito/matchers.py
index 9a44584..36c3815 100644
--- a/mockito/matchers.py
+++ b/mockito/matchers.py
@@ -61,7 +61,6 @@ The one usage you should not care about is a loose signature when using
 
 import re
 
-
 __all__ = [
     'and_', 'or_', 'not_',
     'eq', 'neq',
@@ -77,6 +76,7 @@ __all__ = [
     'kwargs', 'KWARGS'
 ]
 
+
 class _ArgsSentinel(object):
     def __repr__(self):
         return '*args'
@@ -106,6 +106,13 @@ KWARGS = kwargs = {KWARGS_SENTINEL: '_'}
 
 # """
 
+
+class MatcherError(RuntimeError):
+    '''Indicates generic runtime error raised by mockito-python matchers
+    '''
+    pass
+
+
 class Matcher:
     def matches(self, arg):
         pass
@@ -246,18 +253,24 @@ class Matches(Matcher):
 class ArgumentCaptor(Matcher):
     def __init__(self, matcher=None):
         self.matcher = matcher or Any()
-        self.value = None
+        self.all_values = []
 
     def matches(self, arg):
         result = self.matcher.matches(arg)
         if not result:
             return
-        self.value = arg
+        self.all_values.append(arg)
         return True
 
+    @property
+    def value(self):
+        if not self.all_values:
+            raise MatcherError("No argument value was captured!")
+        return self.all_values[-1]
+
     def __repr__(self):
-        return "<ArgumentCaptor: matcher=%s value=%s>" % (
-            repr(self.matcher), self.value,
+        return "<ArgumentCaptor: matcher=%s values=%s>" % (
+            repr(self.matcher), self.all_values,
         )
 
 
diff --git a/mockito/verification.py b/mockito/verification.py
index e7f766e..c36241b 100644
--- a/mockito/verification.py
+++ b/mockito/verification.py
@@ -22,6 +22,7 @@ import operator
 
 __all__ = ['never', 'VerificationError']
 
+
 class VerificationError(AssertionError):
     '''Indicates error during verification of invocations.
 

