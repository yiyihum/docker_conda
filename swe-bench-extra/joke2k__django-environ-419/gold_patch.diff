diff --git a/CHANGELOG.rst b/CHANGELOG.rst
index aa7b3ff..8e181b1 100644
--- a/CHANGELOG.rst
+++ b/CHANGELOG.rst
@@ -17,6 +17,8 @@ Added
   `#468 <https://github.com/joke2k/django-environ/pull/468>`_.
 - Added capability to handle comments after #, after quoted values, like ``KEY= 'part1 # part2' # comment``
   `#475 <https://github.com/joke2k/django-environ/pull/475>`_.
+- Added support for ``interpolate`` parameter
+  `#419 <https://github.com/joke2k/django-environ/pull/419>`_.
 
 Changed
 +++++++
diff --git a/docs/tips.rst b/docs/tips.rst
index 20b8c3e..ab59f69 100644
--- a/docs/tips.rst
+++ b/docs/tips.rst
@@ -226,7 +226,7 @@ Proxy value
 ===========
 
 Values that being with a ``$`` may be interpolated. Pass ``interpolate=True`` to
-``environ.Env()`` to enable this feature:
+``environ.Env()`` to enable this feature (``True`` by default):
 
 .. code-block:: python
 
diff --git a/environ/environ.py b/environ/environ.py
index 644286e..f35470c 100644
--- a/environ/environ.py
+++ b/environ/environ.py
@@ -197,11 +197,12 @@ class Env:
     VAR = re.compile(r'(?<!\\)\$\{?(?P<name>[A-Z_][0-9A-Z_]*)}?',
                      re.IGNORECASE)
 
-    def __init__(self, **scheme):
+    def __init__(self, interpolate=True, **scheme):
         self._local = threading.local()
         self.smart_cast = True
         self.escape_proxy = False
         self.prefix = ""
+        self.interpolate = interpolate
         self.scheme = scheme
 
     def __call__(self, var, cast=None, default=NOTSET, parse_default=False):
@@ -425,7 +426,8 @@ class Env:
             value = default
 
         # Expand variables
-        if isinstance(value, (bytes, str)) and var_name not in NOT_EXPANDED:
+        if self.interpolate and isinstance(value, (bytes, str)) \
+                and var_name not in NOT_EXPANDED:
             def repl(match_):
                 return self.get_value(
                     match_.group('name'), cast=cast, default=default,
