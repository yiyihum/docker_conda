diff --git a/pika/connection.py b/pika/connection.py
index e5f3cfa..aeddae3 100644
--- a/pika/connection.py
+++ b/pika/connection.py
@@ -1995,7 +1995,8 @@ class Connection(pika.compat.AbstractBase):
         """
         LOGGER.info(
             'AMQP stack terminated, failed to connect, or aborted: '
-            'error-arg=%r; pending-error=%r', error, self._error)
+            'opened=%r, error-arg=%r; pending-error=%r',
+            self._opened, error, self._error)
 
         if error is not None:
             if self._error is not None:
@@ -2016,11 +2017,11 @@ class Connection(pika.compat.AbstractBase):
                                [spec.Connection.Close, spec.Connection.Start])
 
         if self.params.blocked_connection_timeout is not None:
-            self._remove_callbacks(
-                0, [spec.Connection.Blocked, spec.Connection.Unblocked])
+            self._remove_callbacks(0,
+                    [spec.Connection.Blocked, spec.Connection.Unblocked])
 
         if not self._opened and isinstance(self._error,
-                                           exceptions.StreamLostError):
+                (exceptions.StreamLostError, exceptions.ConnectionClosedByBroker)):
             # Heuristically deduce error based on connection state
             if self.connection_state == self.CONNECTION_PROTOCOL:
                 LOGGER.error('Probably incompatible Protocol Versions')
diff --git a/pika/data.py b/pika/data.py
index d4264d2..e50a7b2 100644
--- a/pika/data.py
+++ b/pika/data.py
@@ -273,9 +273,11 @@ def decode_value(encoded, offset): # pylint: disable=R0912,R0915
         offset += 4
         value = decimal.Decimal(raw) * (decimal.Decimal(10)**-decimals)
 
-    # Short String
+    # https://github.com/pika/pika/issues/1205
+    # Short Signed Int
     elif kind == b's':
-        value, offset = decode_short_string(encoded, offset)
+        value = struct.unpack_from('>h', encoded, offset)[0]
+        offset += 2
 
     # Long String
     elif kind == b'S':
