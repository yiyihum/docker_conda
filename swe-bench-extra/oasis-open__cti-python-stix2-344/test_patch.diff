diff --git a/stix2/test/v21/test_indicator.py b/stix2/test/v21/test_indicator.py
index 152f253..23bad29 100644
--- a/stix2/test/v21/test_indicator.py
+++ b/stix2/test/v21/test_indicator.py
@@ -271,7 +271,7 @@ def test_indicator_stix20_invalid_pattern():
         )
 
     assert excinfo.value.cls == stix2.v21.Indicator
-    assert "FAIL: The same qualifier is used more than once" in str(excinfo.value)
+    assert "FAIL: Duplicate qualifier type encountered" in str(excinfo.value)
 
     ind = stix2.v21.Indicator(
         type="indicator",
diff --git a/stix2/test/v21/test_observed_data.py b/stix2/test/v21/test_observed_data.py
index 371018c..71bad46 100644
--- a/stix2/test/v21/test_observed_data.py
+++ b/stix2/test/v21/test_observed_data.py
@@ -1540,37 +1540,45 @@ def test_deterministic_id_no_contributing_props():
     assert uuid_obj_2.version == 4
 
 
-def test_ipv4_resolves_to_refs_deprecation():
-    with pytest.warns(stix2.exceptions.STIXDeprecationWarning):
-
-        stix2.v21.IPv4Address(
-            value="26.09.19.70",
-            resolves_to_refs=["mac-addr--08900593-0265-52fc-93c0-5b4a942f5887"],
-        )
-
-
-def test_ipv4_belongs_to_refs_deprecation():
-    with pytest.warns(stix2.exceptions.STIXDeprecationWarning):
-
-        stix2.v21.IPv4Address(
-            value="21.12.19.64",
-            belongs_to_refs=["autonomous-system--52e0a49d-d683-5801-a7b8-145765a1e116"],
-        )
-
-
-def test_ipv6_resolves_to_refs_deprecation():
-    with pytest.warns(stix2.exceptions.STIXDeprecationWarning):
+def test_id_gen_recursive_dict_conversion_1():
+    file_observable = stix2.v21.File(
+        name="example.exe",
+        size=68 * 1000,
+        magic_number_hex="50000000",
+        hashes={
+            "SHA-256": "841a8921140aba50671ebb0770fecc4ee308c4952cfeff8de154ab14eeef4649",
+        },
+        extensions={
+            "windows-pebinary-ext": stix2.v21.WindowsPEBinaryExt(
+                pe_type="exe",
+                machine_hex="014c",
+                sections=[
+                    stix2.v21.WindowsPESection(
+                        name=".data",
+                        size=4096,
+                        entropy=7.980693,
+                        hashes={"SHA-256": "6e3b6f3978e5cd96ba7abee35c24e867b7e64072e2ecb22d0ee7a6e6af6894d0"},
+                    ),
+                ],
+            ),
+        },
+    )
 
-        stix2.v21.IPv6Address(
-            value="2001:0db8:85a3:0000:0000:8a2e:0370:7334",
-            resolves_to_refs=["mac-addr--08900593-0265-52fc-93c0-5b4a942f5887"],
-        )
+    assert file_observable.id == "file--5219d93d-13c1-5f1f-896b-039f10ec67ea"
 
 
-def test_ipv6_belongs_to_refs_deprecation():
-    with pytest.warns(stix2.exceptions.STIXDeprecationWarning):
+def test_id_gen_recursive_dict_conversion_2():
+    wrko = stix2.v21.WindowsRegistryKey(
+        values=[
+            stix2.v21.WindowsRegistryValueType(
+                name="Foo",
+                data="qwerty",
+            ),
+            stix2.v21.WindowsRegistryValueType(
+                name="Bar",
+                data="42",
+            ),
+        ],
+    )
 
-        stix2.v21.IPv6Address(
-            value="2001:0db8:85a3:0000:0000:8a2e:0370:7334",
-            belongs_to_refs=["autonomous-system--52e0a49d-d683-5801-a7b8-145765a1e116"],
-        )
+    assert wrko.id == "windows-registry-key--c087d9fe-a03e-5922-a1cd-da116e5b8a7b"
diff --git a/stix2/test/v21/test_pattern_expressions.py b/stix2/test/v21/test_pattern_expressions.py
index 76880be..0c298f8 100644
--- a/stix2/test/v21/test_pattern_expressions.py
+++ b/stix2/test/v21/test_pattern_expressions.py
@@ -1,6 +1,7 @@
 import datetime
 
 import pytest
+from stix2patterns.exceptions import ParseException
 
 import stix2
 from stix2.pattern_visitor import create_pattern_object
@@ -515,3 +516,8 @@ def test_list_constant():
 def test_parsing_multiple_slashes_quotes():
     patt_obj = create_pattern_object("[ file:name = 'weird_name\\'' ]")
     assert str(patt_obj) == "[file:name = 'weird_name\\'']"
+
+
+def test_parse_error():
+    with pytest.raises(ParseException):
+        create_pattern_object("[ file: name = 'weirdname]")
