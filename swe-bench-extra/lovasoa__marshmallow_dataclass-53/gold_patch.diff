diff --git a/CHANGELOG.md b/CHANGELOG.md
index 982f4eb..ffe5fdc 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,11 @@
 # marshmallow_dataclass change log
 
+## v7.1.1
+ - Fix behavior when `base_schema` is passed to a nested dataclass/schema
+   ([#52](https://github.com/lovasoa/marshmallow_dataclass/issues/52)).
+   Thanks [@ADR-007-SoftServe](https://github.com/ADR-007-SoftServe)
+   for the catch and patch.
+
 ## v7.1.0
  - Improved documentation
  - The library now has more unit tests
diff --git a/marshmallow_dataclass/__init__.py b/marshmallow_dataclass/__init__.py
index a9b3119..a2dd954 100644
--- a/marshmallow_dataclass/__init__.py
+++ b/marshmallow_dataclass/__init__.py
@@ -117,7 +117,7 @@ def add_schema(_cls: Type[_U]) -> Type[_U]:
 
 @overload
 def add_schema(
-    base_schema: Type[marshmallow.Schema] = None
+    base_schema: Type[marshmallow.Schema] = None,
 ) -> Callable[[Type[_U]], Type[_U]]:
     ...
 
@@ -422,9 +422,15 @@ def field_for_schema(
 
         return marshmallow_enum.EnumField(typ, **metadata)
 
+    # Nested marshmallow dataclass
+    nested_schema = getattr(typ, "Schema", None)
+
     # Nested dataclasses
     forward_reference = getattr(typ, "__forward_arg__", None)
-    nested = forward_reference or class_schema(typ, base_schema=base_schema)
+    nested = (
+        nested_schema or forward_reference or class_schema(typ, base_schema=base_schema)
+    )
+
     return marshmallow.fields.Nested(nested, **metadata)
 
 
