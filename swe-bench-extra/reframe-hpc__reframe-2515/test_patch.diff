diff --git a/unittests/resources/checks_unlisted/externalvars.py b/unittests/resources/checks_unlisted/externalvars.py
index eaafa529..113061fe 100644
--- a/unittests/resources/checks_unlisted/externalvars.py
+++ b/unittests/resources/checks_unlisted/externalvars.py
@@ -3,19 +3,33 @@ import reframe.utility.sanity as sn
 import reframe.utility.typecheck as typ
 
 
+class Bacon(rfm.RunOnlyRegressionTest):
+    bacon = variable(int, value=-1)
+    executable = 'echo'
+    sanity_patterns = sn.assert_true(1)
+
+
+class Eggs(rfm.RunOnlyRegressionTest):
+    eggs = fixture(Bacon)
+    executable = 'echo'
+    sanity_patterns = sn.assert_true(1)
+
+
 @rfm.simple_test
 class external_x(rfm.RunOnlyRegressionTest):
     valid_systems = ['*']
     valid_prog_environs = ['*']
     foo = variable(int, value=1)
     ham = variable(typ.Bool, value=False)
+    spam = fixture(Eggs)
     executable = 'echo'
 
     @sanity_function
     def assert_foo(self):
         return sn.all([
             sn.assert_eq(self.foo, 3),
-            sn.assert_true(self.ham)
+            sn.assert_true(self.ham),
+            sn.assert_eq(self.spam.eggs.bacon, 10)
         ])
 
 
diff --git a/unittests/test_cli.py b/unittests/test_cli.py
index ce762d2a..4bb5f52e 100644
--- a/unittests/test_cli.py
+++ b/unittests/test_cli.py
@@ -837,13 +837,17 @@ def test_detect_host_topology_file(run_reframe, tmp_path):
 def test_external_vars(run_reframe):
     returncode, stdout, stderr = run_reframe(
         checkpath=['unittests/resources/checks_unlisted/externalvars.py'],
-        more_options=['-S', 'external_x.foo=3', '-S', 'external_y.foo=2',
-                      '-S', 'foolist=3,4', '-S', 'bar=@none',
+        more_options=['-S', 'external_x.foo=3',
                       '-S', 'external_x.ham=true',
-                      '-S', 'external_y.baz=false']
+                      '-S', 'external_x.spam.eggs.bacon=10',
+                      '-S', 'external_y.foo=2',
+                      '-S', 'external_y.baz=false',
+                      '-S', 'foolist=3,4',
+                      '-S', 'bar=@none']
     )
+    assert 'PASSED' in stdout
+    assert 'Ran 6/6 test case(s)' in stdout
     assert 'Traceback' not in stdout
-    assert 'Ran 2/2 test case(s)' in stdout
     assert 'Traceback' not in stderr
     assert returncode == 0
 
