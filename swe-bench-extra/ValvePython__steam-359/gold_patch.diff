diff --git a/requirements.txt b/requirements.txt
index 92661a9..14293fb 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -3,7 +3,8 @@ pycryptodomex>=3.7.0
 requests>=2.9.1
 vdf>=3.3
 gevent>=1.3.0
-protobuf>=3.0.0
+protobuf>~3.0; python_version >= '3'
+protobuf<3.18.0; python_version < '3'
 gevent-eventemitter~=2.1
 cachetools>=3.0.0
 enum34==1.1.2; python_version < '3.4'
diff --git a/setup.py b/setup.py
index 16b8870..382f8f2 100644
--- a/setup.py
+++ b/setup.py
@@ -26,7 +26,8 @@ install_requires = [
 install_extras = {
     'client': [
         'gevent>=1.3.0',
-        'protobuf>=3.0.0',
+        'protobuf>~3.0; python_version >= "3"',
+        'protobuf<3.18.0; python_version < "3"',
         'gevent-eventemitter~=2.1',
     ],
 }
diff --git a/steam/game_servers.py b/steam/game_servers.py
index 07b09f1..80bf108 100644
--- a/steam/game_servers.py
+++ b/steam/game_servers.py
@@ -142,8 +142,11 @@ def _u(data):
 
 
 class StructReader(_StructReader):
-    def read_cstring(self):
-        return _u(super(StructReader, self).read_cstring())
+    def read_cstring(self, binary=False):
+        raw = super(StructReader, self).read_cstring()
+        if binary:
+            return raw
+        return _u(raw)
 
 
 class MSRegion(IntEnum):
@@ -526,7 +529,7 @@ def a2s_players(server_addr, timeout=2, challenge=0):
     return players
 
 
-def a2s_rules(server_addr, timeout=2, challenge=0):
+def a2s_rules(server_addr, timeout=2, challenge=0, binary=False):
     """Get rules from server
 
     :param server_addr: (ip, port) for the server
@@ -535,9 +538,11 @@ def a2s_rules(server_addr, timeout=2, challenge=0):
     :type  timeout: float
     :param challenge: (optional) challenge number
     :type  challenge: int
+    :param binary: (optional) return rules as raw bytes
+    :type  binary: bool
     :raises: :class:`RuntimeError`, :class:`socket.timeout`
     :returns: a list of rules
-    :rtype: :class:`list`
+    :rtype: :class:`dict`
     """
     ss = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
     ss.connect(server_addr)
@@ -571,13 +576,14 @@ def a2s_rules(server_addr, timeout=2, challenge=0):
     rules = {}
 
     while len(rules) != num_rules:
-        name = data.read_cstring()
-        value = data.read_cstring()
-
-        if _re_match(r'^\-?[0-9]+$', value):
-            value = int(value)
-        elif _re_match(r'^\-?[0-9]+\.[0-9]+$', value):
-            value = float(value)
+        name = data.read_cstring(binary=binary)
+        value = data.read_cstring(binary=binary)
+
+        if not binary:
+            if _re_match(r'^\-?[0-9]+$', value):
+                value = int(value)
+            elif _re_match(r'^\-?[0-9]+\.[0-9]+$', value):
+                value = float(value)
 
         rules[name] = value
 
