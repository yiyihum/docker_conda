diff --git a/tests/conftest.py b/tests/conftest.py
index 07e8313..ffafd35 100644
--- a/tests/conftest.py
+++ b/tests/conftest.py
@@ -587,7 +587,14 @@ def message_history(request: Any) -> List[Dict[str, Any]]:
 
 @pytest.fixture
 def topics() -> List[str]:
-    return ["Topic 1", "This is a topic", "Hello there!"]
+    return [
+        "Topic 1",
+        "This is a topic",
+        "Hello there!",
+        "He-llo there!",
+        "Hello t/here!",
+        "Hello from out-er_space!",
+    ]
 
 
 @pytest.fixture(
diff --git a/tests/ui_tools/test_boxes.py b/tests/ui_tools/test_boxes.py
index d9fb8b1..975b14c 100644
--- a/tests/ui_tools/test_boxes.py
+++ b/tests/ui_tools/test_boxes.py
@@ -96,22 +96,39 @@ class TestWriteBox:
         [
             ("#**Stream 1>T", 0, True, "#**Stream 1>Topic 1**"),
             ("#**Stream 1>T", 1, True, "#**Stream 1>This is a topic**"),
-            ("#**Stream 1>T", 2, True, None),
-            ("#**Stream 1>T", -1, True, "#**Stream 1>This is a topic**"),
-            ("#**Stream 1>T", -2, True, "#**Stream 1>Topic 1**"),
-            ("#**Stream 1>T", -3, True, None),
+            ("#**Stream 1>T", 2, True, "#**Stream 1>Hello there!**"),
+            ("#**Stream 1>T", 3, True, "#**Stream 1>He-llo there!**"),
+            ("#**Stream 1>T", 4, True, "#**Stream 1>Hello t/here!**"),
+            ("#**Stream 1>T", 5, True, None),
+            ("#**Stream 1>T", -1, True, "#**Stream 1>Hello t/here!**"),
+            ("#**Stream 1>T", -2, True, "#**Stream 1>He-llo there!**"),
+            ("#**Stream 1>T", -3, True, "#**Stream 1>Hello there!**"),
+            ("#**Stream 1>T", -4, True, "#**Stream 1>This is a topic**"),
+            ("#**Stream 1>T", -5, True, "#**Stream 1>Topic 1**"),
+            ("#**Stream 1>T", -6, True, None),
             ("#**Stream 1>To", 0, True, "#**Stream 1>Topic 1**"),
             ("#**Stream 1>H", 0, True, "#**Stream 1>Hello there!**"),
             ("#**Stream 1>Hello ", 0, True, "#**Stream 1>Hello there!**"),
             ("#**Stream 1>", 0, True, "#**Stream 1>Topic 1**"),
             ("#**Stream 1>", 1, True, "#**Stream 1>This is a topic**"),
-            ("#**Stream 1>", -1, True, "#**Stream 1>Hello there!**"),
-            ("#**Stream 1>", -2, True, "#**Stream 1>This is a topic**"),
+            ("#**Stream 1>", 2, True, "#**Stream 1>Hello there!**"),
+            ("#**Stream 1>", 3, True, "#**Stream 1>He-llo there!**"),
+            ("#**Stream 1>", 4, True, "#**Stream 1>Hello t/here!**"),
+            ("#**Stream 1>", 5, True, "#**Stream 1>Hello from out-er_space!**"),
+            ("#**Stream 1>", 6, True, None),
+            ("#**Stream 1>", -1, True, "#**Stream 1>Hello from out-er_space!**"),
+            ("#**Stream 1>", -2, True, "#**Stream 1>Hello t/here!**"),
+            ("#**Stream 1>", -3, True, "#**Stream 1>He-llo there!**"),
+            ("#**Stream 1>", -4, True, "#**Stream 1>Hello there!**"),
+            ("#**Stream 1>", -5, True, "#**Stream 1>This is a topic**"),
+            ("#**Stream 1>", -6, True, "#**Stream 1>Topic 1**"),
+            ("#**Stream 1>", -7, True, None),
             # Fenced prefix
             ("#**Stream 1**>T", 0, True, "#**Stream 1>Topic 1**"),
             # Unfenced prefix
             ("#Stream 1>T", 0, True, "#**Stream 1>Topic 1**"),
             ("#Stream 1>T", 1, True, "#**Stream 1>This is a topic**"),
+            ("#Stream 1>T", 2, True, "#**Stream 1>Hello there!**"),
             # Invalid stream
             ("#**invalid stream>", 0, False, None),
             ("#**invalid stream**>", 0, False, None),
@@ -1306,12 +1323,30 @@ class TestWriteBox:
     @pytest.mark.parametrize(
         "text, matching_topics",
         [
-            ("", ["Topic 1", "This is a topic", "Hello there!"]),
-            ("Th", ["This is a topic"]),
+            (
+                "",
+                [
+                    "Topic 1",
+                    "This is a topic",
+                    "Hello there!",
+                    "He-llo there!",
+                    "Hello t/here!",
+                    "Hello from out-er_space!",
+                ],
+            ),
+            ("Th", ["This is a topic", "Hello there!", "He-llo there!"]),
+            ("ll", ["He-llo there!"]),
+            ("her", ["Hello t/here!"]),
+            ("er", ["Hello from out-er_space!"]),
+            ("spa", ["Hello from out-er_space!"]),
         ],
         ids=[
             "no_search_text",
             "single_word_search_text",
+            "split_in_first_word",
+            "split_in_second_word",
+            "first_split_in_third_word",
+            "second_split_in_third_word",
         ],
     )
     def test__topic_box_autocomplete(
