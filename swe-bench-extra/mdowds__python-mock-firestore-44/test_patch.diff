diff --git a/tests/test_collection_reference.py b/tests/test_collection_reference.py
index 59397be..ed34c8b 100644
--- a/tests/test_collection_reference.py
+++ b/tests/test_collection_reference.py
@@ -81,6 +81,16 @@ class TestCollectionReference(TestCase):
         docs = list(fs.collection('foo').where('valid', '==', True).stream())
         self.assertEqual({'valid': True}, docs[0].to_dict())
 
+    def test_collection_whereNotEquals(self):
+        fs = MockFirestore()
+        fs._data = {'foo': {
+            'first': {'count': 1},
+            'second': {'count': 5}
+        }}
+
+        docs = list(fs.collection('foo').where('count', '!=', 1).stream())
+        self.assertEqual({'count': 5}, docs[0].to_dict())
+
     def test_collection_whereLessThan(self):
         fs = MockFirestore()
         fs._data = {'foo': {
diff --git a/tests/test_mock_client.py b/tests/test_mock_client.py
index 227c5c7..7f99414 100644
--- a/tests/test_mock_client.py
+++ b/tests/test_mock_client.py
@@ -16,4 +16,18 @@ class TestMockFirestore(TestCase):
         expected_doc_snapshot = doc.get().to_dict()
         self.assertEqual(returned_doc_snapshot, expected_doc_snapshot)
 
+    def test_client_collections(self):
+        fs = MockFirestore()
+        fs._data = {
+            'foo': {
+                'first': {'id': 1},
+                'second': {'id': 2}
+            },
+            'bar': {}
+        }
+        collections = fs.collections()
+        expected_collections = fs._data
 
+        self.assertEqual(len(collections), len(expected_collections))
+        for collection in collections:
+            self.assertTrue(collection._path[0] in expected_collections)
