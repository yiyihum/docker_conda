diff --git a/tests/db/dynamodb_test.py b/tests/db/dynamodb_test.py
index 030ae9b..2ddc61a 100644
--- a/tests/db/dynamodb_test.py
+++ b/tests/db/dynamodb_test.py
@@ -38,7 +38,7 @@ def test_store_invalid_user(ddb_connection):
 def test_store_invalid_team(ddb_connection):
     """Test handling of invalid team."""
     ddb = ddb_connection
-    team = Team('', 'Brussel Sprouts')
+    team = Team('1', '', 'Brussel Sprouts')
     success = ddb.store_team(team)
     assert not success
 
@@ -108,11 +108,11 @@ def test_retrieve_invalid_team(ddb_connection):
     """Test to see if we can retrieve a non-existent team."""
     ddb = ddb_connection
     try:
-        team = ddb.retrieve_team('rocket2.0')
+        team = ddb.retrieve_team('1')
 
         assert False
     except LookupError as e:
-        assert str(e) == 'Team "{}" not found'.format('rocket2.0')
+        assert str(e) == 'Team "{}" not found'.format('1')
 
 
 @pytest.mark.db
@@ -135,38 +135,38 @@ def test_update_user(ddb_connection):
 def test_update_team(ddb_connection):
     """Test to see if we can update a team."""
     ddb = ddb_connection
-    t = Team('brussel-sprouts', 'Brussel Sprouts')
+    t = Team('1', 'brussel-sprouts', 'Brussel Sprouts')
     ddb.store_team(t)
 
-    t = ddb.retrieve_team('brussel-sprouts')
+    t = ddb.retrieve_team('1')
     t.add_member('abc_123')
     t.add_member('123_abc')
     ddb.store_team(t)
 
-    assert len(ddb.retrieve_team('brussel-sprouts').get_members()) == 2
+    assert len(ddb.retrieve_team('1').get_members()) == 2
 
-    ddb.delete_team('brussel-sprouts')
+    ddb.delete_team('1')
 
 
 @pytest.mark.db
 def test_store_retrieve_team(ddb_connection):
     """Test to see if we can store and retrieve the same team."""
     ddb = ddb_connection
-    team = create_test_team('rocket2.0', 'Rocket 2.0')
+    team = create_test_team('1', 'rocket2.0', 'Rocket 2.0')
     assert ddb.store_team(team)
-    another_team = ddb.retrieve_team('rocket2.0')
+    another_team = ddb.retrieve_team('1')
 
     assert team == another_team
 
-    ddb.delete_team('rocket2.0')
+    ddb.delete_team('1')
 
 
 @pytest.mark.db
 def test_query_team(ddb_connection):
     """Test to see if we can store and query the same team."""
     ddb = ddb_connection
-    team = create_test_team('rocket2.0', 'Rocket 2.0')
-    team2 = create_test_team('lame-o', 'Lame-O Team')
+    team = create_test_team('1', 'rocket2.0', 'Rocket 2.0')
+    team2 = create_test_team('2', 'lame-o', 'Lame-O Team')
     team2.add_member('apple')
     ddb.store_team(team)
     ddb.store_team(team2)
@@ -185,8 +185,8 @@ def test_query_team(ddb_connection):
     assert team == multiple_queries[0]
     assert team2 == member_team[0]
 
-    ddb.delete_team('rocket2.0')
-    ddb.delete_team('lame-o')
+    ddb.delete_team('1')
+    ddb.delete_team('2')
 
 
 @pytest.mark.db
@@ -205,9 +205,9 @@ def test_delete_user(ddb_connection):
 def test_delete_team(ddb_connection):
     """Test to see if we can successfully delete a team."""
     ddb = ddb_connection
-    team = create_test_team('rocket-2.0', 'Rocket 2.0')
+    team = create_test_team('1', 'rocket-2.0', 'Rocket 2.0')
     ddb.store_team(team)
 
     assert len(ddb.query_team([])) == 1
-    ddb.delete_team('rocket-2.0')
+    ddb.delete_team('1')
     assert len(ddb.query_team([])) == 0
diff --git a/tests/db/facade_test.py b/tests/db/facade_test.py
index 0d225d2..9561052 100644
--- a/tests/db/facade_test.py
+++ b/tests/db/facade_test.py
@@ -40,7 +40,7 @@ def test_query_user(ddb):
 def test_store_team(ddb):
     """Test storing team calls correct functions."""
     dbf = DBFacade(ddb)
-    test_team = create_test_team('brussel-sprouts', 'Brussel Sprouts')
+    test_team = create_test_team('1', 'brussel-sprouts', 'Brussel Sprouts')
     dbf.store_team(test_team)
     ddb.store_team.assert_called_with(test_team)
 
diff --git a/tests/model/team_test.py b/tests/model/team_test.py
index c5ad2bd..c02a1f1 100644
--- a/tests/model/team_test.py
+++ b/tests/model/team_test.py
@@ -5,62 +5,75 @@ from tests.util import create_test_team
 
 def test_team_equality():
     """Test the Team class method __eq__() and __ne__()."""
-    team = Team("brussel-sprouts", "Brussel Sprouts")
-    team2 = Team("brussel-sprouts", "Brussel Sprouts")
-    team3 = Team("brussel-trouts", "Brussel Trouts")
+    team = Team("1", "brussel-sprouts", "Brussel Sprouts")
+    team2 = Team("1", "brussel-sprouts", "Brussel Sprouts")
+    team3 = Team("1", "brussel-trouts", "Brussel Trouts")
     assert team == team2
     assert team != team3
 
 
 def test_valid_team():
     """Test the Team static class method is_valid()."""
-    team = Team("", "Brussel Sprouts")
+    team = Team("1", "", "Brussel Sprouts")
     assert not Team.is_valid(team)
-    team = create_test_team("brussel-sprouts", "Brussel Sprouts")
+    team = create_test_team("1", "brussel-sprouts", "Brussel Sprouts")
     assert Team.is_valid(team)
 
 
+def test_get_github_team_id():
+    """Test the Team class method get_github_team_id()."""
+    team = Team('1', 'brussel-sprouts', 'Brussel Sprouts')
+    assert team.get_github_team_id() == '1'
+
+
+def test_set_github_team_id():
+    """Test the Team class method set_github_team_id()."""
+    team = Team('1', 'brussel-sprouts', 'Brussel Sprouts')
+    team.set_github_team_id('2')
+    assert team.get_github_team_id() == '2'
+
+
 def test_get_github_team_name():
     """Test the Team class method set_github_team_name()."""
-    team = Team("brussel-sprouts", "Brussel Sprouts")
+    team = Team("1", "brussel-sprouts", "Brussel Sprouts")
     assert team.get_github_team_name() == "brussel-sprouts"
 
 
 def test_get_display_name():
     """Test the Team class method get_display_name()."""
-    team = Team("brussel-sprouts", "Brussel Sprouts")
+    team = Team("1", "brussel-sprouts", "Brussel Sprouts")
     assert team.get_display_name() == "Brussel Sprouts"
 
 
 def test_set_display_name():
     """Test the Team class method set_display_name(display_name)."""
-    team = Team("brussel-sprouts", "Brussel Sprouts")
+    team = Team("1", "brussel-sprouts", "Brussel Sprouts")
     team.set_display_name("Corn Cobs")
     assert team.get_display_name() == "Corn Cobs"
 
 
 def test_get_platform():
     """Test the Team class method get_platform()."""
-    team = Team("brussel-sprouts", "Brussel Sprouts")
+    team = Team("1", "brussel-sprouts", "Brussel Sprouts")
     assert team.get_platform() == ""
 
 
 def test_set_platform():
     """Test the Team class method set_platform(platform)."""
-    team = Team("brussel-sprouts", "Brussel Sprouts")
+    team = Team("1", "brussel-sprouts", "Brussel Sprouts")
     team.set_platform("web")
     assert team.get_platform() == "web"
 
 
 def test_get_members():
     """Test the Team class method get_members()."""
-    team = Team("brussel-sprouts", "Brussel Sprouts")
+    team = Team("1", "brussel-sprouts", "Brussel Sprouts")
     assert team.get_members() == set()
 
 
 def test_add_member():
     """Test the Team class method add_member(uuid)."""
-    team = Team("brussel-sprouts", "Brussel Sprouts")
+    team = Team("1", "brussel-sprouts", "Brussel Sprouts")
     new_slack_id = "U0G9QF9C6"
     team.add_member(new_slack_id)
     assert new_slack_id in team.get_members()
@@ -68,7 +81,7 @@ def test_add_member():
 
 def test_discard_member():
     """Test the Team class method discard_member(slack_id)."""
-    team = Team("brussel-sprouts", "Brussel Sprouts")
+    team = Team("1", "brussel-sprouts", "Brussel Sprouts")
     new_slack_id = "U0G9QF9C6"
     team.add_member(new_slack_id)
     team.discard_member(new_slack_id)
@@ -77,7 +90,7 @@ def test_discard_member():
 
 def test_is_member():
     """Test the Team class method is_member(slack_id)."""
-    team = Team("brussel-sprouts", "Brussel Sprouts")
+    team = Team("1", "brussel-sprouts", "Brussel Sprouts")
     new_slack_id = "U0G9QF9C6"
     assert team.is_member(new_slack_id) is False
     team.add_member(new_slack_id)
@@ -86,11 +99,12 @@ def test_is_member():
 
 def test_print():
     """Test print team class."""
-    team = Team("brussel-sprouts", "Brussel Sprouts")
+    team = Team("1", "brussel-sprouts", "Brussel Sprouts")
     new_slack_id = "U0G9QF9C6"
     team.add_member(new_slack_id)
     team.set_platform("web")
-    assert str(team) == "{'_Team__github_team_name': 'brussel-sprouts'," \
+    assert str(team) == "{'_Team__github_team_id': '1'," \
+                        " '_Team__github_team_name': 'brussel-sprouts'," \
                         " '_Team__display_name': 'Brussel Sprouts'," \
                         " '_Team__platform': 'web'," \
                         " '_Team__members': {'U0G9QF9C6'}}"
diff --git a/tests/util.py b/tests/util.py
index 37bb6b7..bea3875 100644
--- a/tests/util.py
+++ b/tests/util.py
@@ -23,14 +23,14 @@ def create_test_user(slack_id):
     return u
 
 
-def create_test_team(team_name, display_name):
+def create_test_team(tid, team_name, display_name):
     """
     Create a test team with team name, and with all other attributes the same.
 
     :param team_name: The github team name string
     :return: returns a filled-in user model (no empty strings)
     """
-    t = Team(team_name, display_name)
+    t = Team(tid, team_name, display_name)
     t.set_platform('slack')
     t.add_member('abc_123')
     return t
