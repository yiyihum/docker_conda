diff --git a/tests/test_tifffile.py b/tests/test_tifffile.py
index 5ab5ce7..ea7ad7d 100644
--- a/tests/test_tifffile.py
+++ b/tests/test_tifffile.py
@@ -34,16 +34,29 @@ def test_tifffile_reading_writing():
     imageio.imsave(filename1, im2)
     im = imageio.imread(filename1)
     ims = imageio.mimread(filename1)
+    assert im.shape == im2.shape
     assert (im == im2).all()
     assert len(ims) == 1
-
+    
     # Multiple images
     imageio.mimsave(filename1, [im2, im2, im2])
     im = imageio.imread(filename1)
     ims = imageio.mimread(filename1)
-    assert (im == im2).all()
-    assert len(ims) == 3, ims[0].shape
-
+    assert im.shape == im2.shape
+    assert (im == im2).all()  # note: this does not imply that the shape match!
+    assert len(ims) == 3
+    for i in range(3):
+        assert ims[i].shape == im2.shape
+        assert (ims[i] == im2).all()
+
+    # Read all planes as one array - we call it a volume for clarity
+    vol = imageio.volread(filename1)
+    vols = imageio.mvolread(filename1)
+    assert vol.shape == (3, ) + im2.shape
+    assert len(vols) == 1 and vol.shape == vols[0].shape
+    for i in range(3):
+        assert (vol[i] == im2).all()
+    
     # remote multipage rgb file
     filename2 = get_remote_file('images/multipage_rgb.tif')
     img = imageio.mimread(filename2)
@@ -67,13 +80,24 @@ def test_tifffile_reading_writing():
     # Fail
     raises(IndexError, R.get_data, -1)
     raises(IndexError, R.get_data, 3)
-
-    # Ensure imwrite write works round trip
+    
+    # Ensure imread + imwrite works round trip
+    filename3 = os.path.join(test_dir, 'test_tiff2.tiff')
+    im1 = imageio.imread(filename1)
+    imageio.imwrite(filename3, im1)
+    im3 = imageio.imread(filename3)
+    assert im1.ndim == 3
+    assert im1.shape == im3.shape
+    assert (im1 == im3).all()
+    
+    # Ensure imread + imwrite works round trip - volume like
     filename3 = os.path.join(test_dir, 'test_tiff2.tiff')
-    R = imageio.imread(filename1)
-    imageio.imwrite(filename3, R)
-    R2 = imageio.imread(filename3)
-    assert (R == R2).all()
+    im1 = imageio.volread(filename1)
+    imageio.volwrite(filename3, im1)
+    im3 = imageio.volread(filename3)
+    assert im1.ndim == 4
+    assert im1.shape == im3.shape
+    assert (im1 == im3).all()
 
 
 run_tests_if_main()
