diff --git a/tests/integration/test_export.py b/tests/integration/test_export.py
index bbb2397..09543b7 100644
--- a/tests/integration/test_export.py
+++ b/tests/integration/test_export.py
@@ -37,3 +37,37 @@ def test_export_upstart(testenv):
                      'trunk-web-1.conf'):
         expected = testenv.path('elephant', filename)
         assert os.path.exists(expected)
+
+
+@pytest.mark.parametrize('testenv', [{
+    'Procfile': "web: python web.py",
+    '.env': """
+NORMAL=ok
+SQ_SPACES='sqspace sqspace'
+DQ_SPACES="dqspace dqspace"
+SQ="it's got single quotes"
+DQ='it has "double" quotes'
+EXCL='an exclamation mark!'
+SQ_DOLLAR='costs $UNINTERPOLATED amount'
+DQ_DOLLAR="costs $UNINTERPOLATED amount"
+"""
+}], indirect=True)
+def test_export_upstart_environment(testenv):
+    ret, out, err = testenv.run_honcho([
+        'export',
+        'upstart',
+        testenv.path('test'),
+        '-a', 'envvars',
+    ])
+
+    assert ret == 0
+
+    lines = open(testenv.path('test', 'envvars-web-1.conf')).readlines()
+    assert 'env NORMAL=ok\n' in lines
+    assert "env SQ_SPACES='sqspace sqspace'\n" in lines
+    assert "env DQ_SPACES='dqspace dqspace'\n" in lines
+    assert "env SQ='it'\"'\"'s got single quotes'\n" in lines
+    assert "env DQ='it has \"double\" quotes'\n" in lines
+    assert "env EXCL='an exclamation mark!'\n" in lines
+    assert "env SQ_DOLLAR='costs $UNINTERPOLATED amount'\n" in lines
+    assert "env DQ_DOLLAR='costs $UNINTERPOLATED amount'\n" in lines
diff --git a/tests/test_manager.py b/tests/test_manager.py
index abee53c..ae028c6 100644
--- a/tests/test_manager.py
+++ b/tests/test_manager.py
@@ -59,12 +59,13 @@ class FakeEnv(object):
 
 class FakeProcess(object):
 
-    def __init__(self, cmd, name=None, colour=None, quiet=None, env=None):
+    def __init__(self, cmd, name=None, colour=None, quiet=None, env=None, cwd=None):
         self.cmd = cmd
         self.name = name
         self.colour = colour
         self.quiet = quiet
         self.env = env
+        self.cwd = cwd
 
         self._events = None
         self._options = {}
@@ -229,6 +230,10 @@ class TestManager(object):
         with pytest.raises(AssertionError):
             self.m.add_process('foo', 'another command')
 
+    def test_add_process_sets_cwd(self):
+        proc = self.m.add_process('foo', 'ruby server.rb', cwd='foo-dir')
+        assert proc.cwd == 'foo-dir'
+
     def test_loop_with_empty_manager_returns_immediately(self):
         self.m.loop()
 
diff --git a/tests/test_process.py b/tests/test_process.py
index 59e1538..9002212 100644
--- a/tests/test_process.py
+++ b/tests/test_process.py
@@ -184,3 +184,9 @@ class TestProcess(object):
         proc.run(self.q)
         msg = self.q.find_message({'returncode': 42})
         assert msg.type == 'stop'
+
+    def test_cwd_passed_along(self):
+        proc = Process('echo 123', cwd='fake-dir')
+        proc._child_ctor = FakePopen
+        proc.run(self.q)
+        assert proc._child.kwargs['cwd'] == 'fake-dir'
