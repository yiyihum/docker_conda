diff --git a/honcho/export/templates/upstart/process.conf b/honcho/export/templates/upstart/process.conf
index 8a05378..fe6b451 100644
--- a/honcho/export/templates/upstart/process.conf
+++ b/honcho/export/templates/upstart/process.conf
@@ -2,8 +2,7 @@ start on starting {{ group_name }}
 stop on stopping {{ group_name }}
 respawn
 
-exec su - {{ user }} -s {{ shell }} -c 'cd {{ app_root }};
-{%- for k, v in process.env.items() -%}
-  export {{ k }}={{ v | shellquote }};
-{%- endfor -%}
-exec {{ process.cmd }} >> {{ log }}/{{ process.name|dashrepl }}.log 2>&1'
+{% for k, v in process.env.items() -%}
+env {{ k }}={{ v | shellquote }}
+{% endfor %}
+exec su - {{ user }} -m -s {{ shell }} -c 'cd {{ app_root }}; exec {{ process.cmd }} >> {{ log }}/{{ process.name|dashrepl }}.log 2>&1'
diff --git a/honcho/manager.py b/honcho/manager.py
index 218f2b4..ff31a8e 100644
--- a/honcho/manager.py
+++ b/honcho/manager.py
@@ -53,7 +53,7 @@ class Manager(object):
 
         self._terminating = False
 
-    def add_process(self, name, cmd, quiet=False, env=None):
+    def add_process(self, name, cmd, quiet=False, env=None, cwd=None):
         """
         Add a process to this manager instance. The process will not be started
         until #loop() is called.
@@ -63,7 +63,8 @@ class Manager(object):
                                   name=name,
                                   quiet=quiet,
                                   colour=next(self._colours),
-                                  env=env)
+                                  env=env,
+                                  cwd=cwd)
         self._processes[name] = {}
         self._processes[name]['obj'] = proc
 
diff --git a/honcho/process.py b/honcho/process.py
index 669c8ef..c211af1 100644
--- a/honcho/process.py
+++ b/honcho/process.py
@@ -21,12 +21,14 @@ class Process(object):
                  name=None,
                  colour=None,
                  quiet=False,
-                 env=None):
+                 env=None,
+                 cwd=None):
         self.cmd = cmd
         self.colour = colour
         self.quiet = quiet
         self.name = name
         self.env = os.environ.copy() if env is None else env
+        self.cwd = cwd
 
         # This is a honcho.environ.Env object, to allow for stubbing of
         # external calls, not the operating system environment.
@@ -36,7 +38,7 @@ class Process(object):
 
     def run(self, events=None, ignore_signals=False):
         self._events = events
-        self._child = self._child_ctor(self.cmd, env=self.env)
+        self._child = self._child_ctor(self.cmd, env=self.env, cwd=self.cwd)
         self._send_message({'pid': self._child.pid}, type='start')
 
         # Don't pay attention to SIGINT/SIGTERM. The process itself is
