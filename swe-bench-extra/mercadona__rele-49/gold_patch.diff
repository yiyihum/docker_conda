diff --git a/docs/index.rst b/docs/index.rst
index 648a4cb..659092f 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -42,18 +42,10 @@ _______
 .. toctree::
     :maxdepth: 2
 
-    subscription
+    modules/subscription
     modules/client
-
-.. toctree::
-   :maxdepth: 2
-
-   publish
-
-.. toctree::
-   :maxdepth: 2
-
-   worker
+    modules/publish
+    modules/worker
 
 Indices and tables
 ==================
diff --git a/docs/publish.rst b/docs/modules/publish.rst
similarity index 88%
rename from docs/publish.rst
rename to docs/modules/publish.rst
index 1b87350..866fb91 100644
--- a/docs/publish.rst
+++ b/docs/modules/publish.rst
@@ -1,4 +1,4 @@
-.. _publish
+.. _ publish
 
 Publish
 =======
diff --git a/docs/subscription.rst b/docs/modules/subscription.rst
similarity index 85%
rename from docs/subscription.rst
rename to docs/modules/subscription.rst
index ef3f215..f80da4b 100644
--- a/docs/subscription.rst
+++ b/docs/modules/subscription.rst
@@ -1,8 +1,9 @@
-.. _subscription
+.. _ subscription
 
 Subscription
 ============
 
+
 .. automodule:: rele
    :members:
 
diff --git a/docs/worker.rst b/docs/modules/worker.rst
similarity index 88%
rename from docs/worker.rst
rename to docs/modules/worker.rst
index c068446..65b3eae 100644
--- a/docs/worker.rst
+++ b/docs/modules/worker.rst
@@ -1,4 +1,4 @@
-.. _worker
+.. _ worker
 
 Worker
 =======
diff --git a/rele/client.py b/rele/client.py
index dda57fe..f67514d 100644
--- a/rele/client.py
+++ b/rele/client.py
@@ -15,6 +15,7 @@ USE_EMULATOR = True if os.environ.get('PUBSUB_EMULATOR_HOST') else False
 
 
 class Subscriber:
+    DEFAULT_ACK_DEADLINE = 60
 
     def __init__(self, gc_project_id, credentials):
         self._gc_project_id = gc_project_id
@@ -23,14 +24,21 @@ class Subscriber:
         else:
             self._client = pubsub_v1.SubscriberClient(credentials=credentials)
 
-    def create_subscription(self, subscription, topic):
+    def get_default_ack_deadline(self):
+        return int(os.environ.get('DEFAULT_ACK_DEADLINE', self.DEFAULT_ACK_DEADLINE))
+
+    def create_subscription(self, subscription, topic, ack_deadline_seconds=None):
+        ack_deadline_seconds = ack_deadline_seconds or self.get_default_ack_deadline()
+
         subscription_path = self._client.subscription_path(
             self._gc_project_id, subscription)
         topic_path = self._client.topic_path(self._gc_project_id, topic)
 
         with suppress(exceptions.AlreadyExists):
             self._client.create_subscription(
-                name=subscription_path, topic=topic_path)
+                name=subscription_path,
+                topic=topic_path,
+                ack_deadline_seconds=ack_deadline_seconds)
 
     def consume(self, subscription_name, callback):
         subscription_path = self._client.subscription_path(
