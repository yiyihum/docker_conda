diff --git a/universe/components.py b/universe/components.py
index 7bba5cb..85c9ed2 100644
--- a/universe/components.py
+++ b/universe/components.py
@@ -1,3 +1,6 @@
+import math
+import random
+
 from . import fields
 
 
@@ -30,6 +33,20 @@ class Component(metaclass=MetaComponent):
                 raise ValidationError(f"{name} is required.")
         return output
 
+    def display(self, data):
+        output = {}
+        for name, field in self._fields.items():
+            if name in data:
+                value = data[name]
+                if hasattr(self, f'_display_{name}'):
+                    value = getattr(self, f'_display_{name}')(value)
+                else:
+                    value = str(value)
+                output[name] = value
+            elif getattr(field, 'required', True):
+                raise ValidationError(f"{name} is required.")
+        return output
+
 
 class MetadataComponent(Component):
     _name = 'metadata'
@@ -74,3 +91,33 @@ class PopulationComponent(Component):
     _name = 'population'
 
     population = fields.IntField(required=False)
+
+
+class EnvironmentComponent(Component):
+    _name = 'environment'
+
+    gravity = fields.IntField(min=0, max=100)
+    temperature = fields.IntField(min=0, max=100)
+    radiation = fields.IntField(min=0, max=100)
+
+    def _display_gravity(self, value):
+        gravity = math.pow(2, 6. * value / 100 - 3)
+        return f"{gravity:0.3f}g"
+
+    def _display_temperature(self, value):
+        temp = 4 * value - 200
+        return f"{temp}\u00b0C"
+
+    def _display_radiation(self, value):
+        return f"{value}mR"
+
+    @classmethod
+    def random(cls):
+        # Random weights taken from http://stars.arglos.net/articles/hm-charts.html
+
+        weights = list(range(1, 10)) + [10] * 81 + list(reversed(range(1, 10)))
+        return {
+            'gravity': random.choices(list(range(1, 100)), weights=weights)[0],
+            'temperature': random.choices(list(range(1, 100)), weights=weights)[0],
+            'radiation': random.randint(1, 99),
+        }
diff --git a/universe/engine.py b/universe/engine.py
index 1206f24..cd93175 100644
--- a/universe/engine.py
+++ b/universe/engine.py
@@ -107,6 +107,7 @@ class GameState:
         ])
         self.manager.register_entity_type('planet', [
             components.PositionComponent(),
+            components.EnvironmentComponent(),
             components.QueueComponent([
                 BuildInstallation, Terraform, BuildStation, BuildShip, LaunchMassPacket,
             ]),
diff --git a/universe/fields.py b/universe/fields.py
index 4a45bf4..d058137 100644
--- a/universe/fields.py
+++ b/universe/fields.py
@@ -5,7 +5,9 @@ class Field:
 
 
 class IntField(Field):
-    def __init__(self, required=True):
+    def __init__(self, min=None, max=None, required=True):
+        self.min = min
+        self.max = max
         self.required = required
 
 

