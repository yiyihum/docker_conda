diff --git a/tests/test_schema.py b/tests/test_schema.py
index fa68982..0ae5d02 100644
--- a/tests/test_schema.py
+++ b/tests/test_schema.py
@@ -1,4 +1,4 @@
-from typing import List
+from typing import List, Optional
 from unittest.mock import Mock
 
 from django.db.models import Manager, QuerySet
@@ -34,11 +34,16 @@ class Tag:
         self.title = title
 
 
-# mocking some user:
+# mocking some users:
+class Boss:
+    name = "Jane Jackson"
+
+
 class User:
-    name = "John"
+    name = "John Smith"
     group_set = FakeManager([1, 2, 3])
     avatar = ImageFieldFile(None, Mock(), name=None)
+    boss: Optional[Boss] = Boss()
 
     @property
     def tags(self):
@@ -57,11 +62,27 @@ class UserSchema(Schema):
     avatar: str = None
 
 
+class UserWithBossSchema(UserSchema):
+    boss: Optional[str] = Field(None, alias="boss.name")
+    has_boss: bool
+
+    @staticmethod
+    def resolve_has_boss(obj):
+        return bool(obj.boss)
+
+
+class UserWithInitialsSchema(UserWithBossSchema):
+    initials: str
+
+    def resolve_initials(self, obj):
+        return "".join(n[:1] for n in self.name.split())
+
+
 def test_schema():
     user = User()
     schema = UserSchema.from_orm(user)
     assert schema.dict() == {
-        "name": "John",
+        "name": "John Smith",
         "groups": [1, 2, 3],
         "tags": [{"id": "1", "title": "foo"}, {"id": "2", "title": "bar"}],
         "avatar": None,
@@ -75,8 +96,47 @@ def test_schema_with_image():
     user.avatar = ImageFieldFile(None, field, name="smile.jpg")
     schema = UserSchema.from_orm(user)
     assert schema.dict() == {
-        "name": "John",
+        "name": "John Smith",
         "groups": [1, 2, 3],
         "tags": [{"id": "1", "title": "foo"}, {"id": "2", "title": "bar"}],
         "avatar": "/smile.jpg",
     }
+
+
+def test_with_boss_schema():
+    user = User()
+    schema = UserWithBossSchema.from_orm(user)
+    assert schema.dict() == {
+        "name": "John Smith",
+        "boss": "Jane Jackson",
+        "has_boss": True,
+        "groups": [1, 2, 3],
+        "tags": [{"id": "1", "title": "foo"}, {"id": "2", "title": "bar"}],
+        "avatar": None,
+    }
+
+    user_without_boss = User()
+    user_without_boss.boss = None
+    schema = UserWithBossSchema.from_orm(user_without_boss)
+    assert schema.dict() == {
+        "name": "John Smith",
+        "boss": None,
+        "has_boss": False,
+        "groups": [1, 2, 3],
+        "tags": [{"id": "1", "title": "foo"}, {"id": "2", "title": "bar"}],
+        "avatar": None,
+    }
+
+
+def test_with_initials_schema():
+    user = User()
+    schema = UserWithInitialsSchema.from_orm(user)
+    assert schema.dict() == {
+        "name": "John Smith",
+        "initials": "JS",
+        "boss": "Jane Jackson",
+        "has_boss": True,
+        "groups": [1, 2, 3],
+        "tags": [{"id": "1", "title": "foo"}, {"id": "2", "title": "bar"}],
+        "avatar": None,
+    }
