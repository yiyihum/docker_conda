diff --git a/pyquil/_parser/parser.py b/pyquil/_parser/parser.py
index 0b345fd..c8ebd28 100644
--- a/pyquil/_parser/parser.py
+++ b/pyquil/_parser/parser.py
@@ -1,3 +1,4 @@
+import json
 import pkgutil
 import operator
 from typing import List
@@ -142,10 +143,7 @@ class QuilTransformer(Transformer):  # type: ignore
         for (spec_name, spec_value) in specs:
             name = names.get(spec_name, None)
             if name:
-                if isinstance(spec_value, str) and spec_value[0] == '"' and spec_value[-1] == '"':
-                    # Strip quotes if necessary
-                    spec_value = spec_value[1:-1]
-                options[name] = spec_value
+                options[name] = json.loads(str(spec_value))
             else:
                 raise ValueError(
                     f"Unexpectected attribute {spec_name} in definition of frame {frame}. " f"{frame}, {specs}"
diff --git a/pyquil/quilbase.py b/pyquil/quilbase.py
index f3ec7b0..476602d 100644
--- a/pyquil/quilbase.py
+++ b/pyquil/quilbase.py
@@ -17,6 +17,8 @@
 Contains the core pyQuil objects that correspond to Quil instructions.
 """
 import collections
+import json
+
 from numbers import Complex
 from typing import (
     Any,
@@ -1375,7 +1377,6 @@ class DefFrame(AbstractInstruction):
             for value, name in options:
                 if value is None:
                     continue
-                if isinstance(value, str):
-                    value = f'"{value}"'
-                r += f"\n    {name}: {value}"
+                else:
+                    r += f"\n    {name}: {json.dumps(value)}"
         return r + "\n"

