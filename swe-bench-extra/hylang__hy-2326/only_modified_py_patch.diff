diff --git a/hy/cmdline.py b/hy/cmdline.py
index 446bb1c1..76f905c4 100644
--- a/hy/cmdline.py
+++ b/hy/cmdline.py
@@ -721,44 +721,27 @@ def hy_main():
 
 def hyc_main():
     parser = argparse.ArgumentParser(prog="hyc")
-    parser.add_argument(
-        "files",
-        metavar="FILE",
-        nargs="*",
-        help=("File(s) to compile (use STDIN if only" ' "-" or nothing is provided)'),
-    )
+    parser.add_argument("files", metavar="FILE", nargs="+", help="File(s) to compile")
     parser.add_argument("-v", action="version", version=VERSION)
 
     options = parser.parse_args(sys.argv[1:])
 
     rv = 0
-    if len(options.files) == 0 or (len(options.files) == 1 and options.files[0] == "-"):
-        while True:
-            filename = sys.stdin.readline()
-            if not filename:
-                break
-            filename = filename.rstrip("\n")
-            set_path(filename)
-            try:
-                py_compile.compile(filename, doraise=True)
-            except py_compile.PyCompileError as error:
-                rv = 1
-                sys.stderr.write("%s\n" % error.msg)
-            except OSError as error:
-                rv = 1
-                sys.stderr.write("%s\n" % error)
-            sys.path.pop(0)
-    else:
-        for filename in options.files:
-            set_path(filename)
-            try:
-                print("Compiling %s" % filename)
-                py_compile.compile(filename, doraise=True)
-            except py_compile.PyCompileError as error:
-                # return value to indicate at least one failure
-                rv = 1
-                sys.stderr.write("%s\n" % error.msg)
-            sys.path.pop(0)
+    for filename in options.files:
+        set_path(filename)
+        try:
+            print(
+                "Compiling {!r} --> {!r}".format(
+                    filename, importlib.util.cache_from_source(filename)
+                ),
+                file=sys.stderr,
+            )
+            py_compile.compile(filename, doraise=True)
+        except py_compile.PyCompileError as error:
+            # return value to indicate at least one failure
+            rv = 1
+            print(error.msg, file=sys.stderr)
+        sys.path.pop(0)
     return rv
 
 

