diff --git a/pqdm/_base.py b/pqdm/_base.py
index fe85482..3c119f5 100644
--- a/pqdm/_base.py
+++ b/pqdm/_base.py
@@ -1,11 +1,12 @@
 import copy
 from concurrent.futures import Executor, as_completed
-from typing import Any, Callable, Iterable
+from typing import Any, Callable, Iterable, Union
 
 from tqdm import tqdm as tqdm_cli
 from tqdm.notebook import tqdm as tqdm_notebook
+from typing_extensions import Literal
 
-from pqdm.constants import ArgumentPassing
+from pqdm.constants import ArgumentPassing, ExceptionBehaviour
 from pqdm.utils import _inside_jupyter, _divide_kwargs
 
 TQDM = tqdm_notebook if _inside_jupyter() else tqdm_cli
@@ -26,6 +27,7 @@ def _parallel_process(
     n_jobs: int,
     executor: Executor,
     argument_type: str = 'direct',
+    exception_behaviour: Union[Literal['ignore'], Literal['immediate'], Literal['deferred']] = 'ignore',
     **kwargs
 ):
     executor_opts, tqdm_opts = _divide_kwargs(kwargs, executor)
@@ -69,10 +71,19 @@ def _parallel_process(
     collecting_opts['total'] = len(futures)
 
     results = []
+    exceptions = []
     for i, future in TQDM(enumerate(futures), **collecting_opts):
         try:
             results.append(future.result())
         except Exception as e:
-            results.append(e)
+            if exception_behaviour == ExceptionBehaviour.IMMEDIATE:
+                raise e
+            if exception_behaviour == ExceptionBehaviour.IGNORE:
+                results.append(e)
+            if exception_behaviour == ExceptionBehaviour.DEFERRED:
+                exceptions.append(e)
+
+    if exceptions:
+        raise Exception(*exceptions)
 
     return results
diff --git a/pqdm/constants.py b/pqdm/constants.py
index 7fc76ca..5728586 100644
--- a/pqdm/constants.py
+++ b/pqdm/constants.py
@@ -4,3 +4,9 @@ from typing import NamedTuple
 class ArgumentPassing(NamedTuple):
     AS_ARGS = 'args'
     AS_KWARGS = 'kwargs'
+
+
+class ExceptionBehaviour(NamedTuple):
+    IGNORE = 'ignore'
+    IMMEDIATE = 'immediate'
+    DEFERRED = 'deferred'
diff --git a/pqdm/processes.py b/pqdm/processes.py
index 5a69502..fc026da 100644
--- a/pqdm/processes.py
+++ b/pqdm/processes.py
@@ -13,6 +13,7 @@ def pqdm(
     n_jobs: int,
     argument_type: Optional[Union[Literal['kwargs'], Literal['args']]] = None,
     bounded: bool = False,
+    exception_behaviour: Union[Literal['ignore'], Literal['immediate'], Literal['deferred']] = 'ignore',
     **kwargs
 ):
     return _parallel_process(
@@ -21,5 +22,6 @@ def pqdm(
         argument_type=argument_type,
         n_jobs=n_jobs,
         executor=BoundedProcessPoolExecutor if bounded else ProcessPoolExecutor,
+        exception_behaviour=exception_behaviour,
         **kwargs
     )
diff --git a/pqdm/threads.py b/pqdm/threads.py
index b9c5b8b..7957974 100644
--- a/pqdm/threads.py
+++ b/pqdm/threads.py
@@ -13,6 +13,7 @@ def pqdm(
     n_jobs: int,
     argument_type: Optional[Union[Literal['kwargs'], Literal['args']]] = None,
     bounded: bool = False,
+    exception_behaviour: Union[Literal['ignore'], Literal['immediate'], Literal['deferred']] = 'ignore',
     **kwargs
 ):
     return _parallel_process(
@@ -21,5 +22,6 @@ def pqdm(
         argument_type=argument_type,
         n_jobs=n_jobs,
         executor=BoundedThreadPoolExecutor if bounded else ThreadPoolExecutor,
+        exception_behaviour=exception_behaviour,
         **kwargs
     )
