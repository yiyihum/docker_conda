diff --git a/tests/test_rules_processor.py b/tests/test_rules_processor.py
index 167145c..eeafd0f 100644
--- a/tests/test_rules_processor.py
+++ b/tests/test_rules_processor.py
@@ -935,6 +935,45 @@ class TestRulesProcessor(unittest.TestCase):
             request={}
         )
 
+    def test_validates_sometimes(self):
+        self.assert_passes(
+            rules={'number': ['sometimes', 'max:5']},
+            request={}
+        )
+        self.assert_passes(
+            rules={'number': ['sometimes', 'max:5']},
+            request={'number': 2}
+        )
+        self.assert_fails(
+            rules={'number': ['sometimes', 'max:5']},
+            request={'number': ''}
+        )
+        self.assert_fails(
+            rules={'number': ['sometimes', 'max:5']},
+            request={'number': 10}
+        )
+        self.assert_passes(
+            rules={
+                'zipCode': ['sometimes', 'numeric'],
+                'website': ['sometimes', 'url']
+            },
+            request={}
+        )
+        self.assert_passes(
+            rules={
+                'zipCode': ['sometimes', 'numeric'],
+                'website': ['sometimes', 'url']
+            },
+            request={'website': 'https://google.com'}
+        )
+        self.assert_fails(
+            rules={
+                'zipCode': ['sometimes', 'numeric'],
+                'website': ['sometimes', 'url']
+            },
+            request={'website': 'ogle.com'}
+        )
+
 
     def test_validates_uuid(self):
         self.assert_passes(
diff --git a/tests/test_validator.py b/tests/test_validator.py
index fecfe45..9079d9d 100644
--- a/tests/test_validator.py
+++ b/tests/test_validator.py
@@ -184,41 +184,6 @@ class TestValidator(unittest.TestCase):
                 params_count=0
             )
 
-    def test_sometimes_request(self):
-        self.set_validator_params(
-            rules={'number': ['sometimes', 'max:5']},
-            request={}
-        )
-        self.assertTrue(self._validator.passes())
-
-        self.set_validator_params(
-            rules={'number': ['sometimes', 'max:5']},
-            request={'number': ''}
-        )
-        self.assertTrue(self._validator.fails())
-        self.assertDictEqual({
-            'number': [
-                'The number could not be validated since it is empty.'
-            ]
-        }, self._validator.messages())
-
-        self.set_validator_params(
-            rules={'number': ['sometimes', 'max:5']},
-            request={'number': 2}
-        )
-        self.assertTrue(self._validator.passes())
-
-        self.set_validator_params(
-            rules={'number': ['sometimes', 'max:5']},
-            request={'number': 10}
-        )
-        self.assertTrue(self._validator.fails())
-        self.assertDictEqual({
-            'number': [
-                'The number may not be greater than 5.'
-            ]
-        }, self._validator.messages())
-
     def set_validator_params(self, rules=None, request=None):
         rules = rules or {}
         request = request or {}
