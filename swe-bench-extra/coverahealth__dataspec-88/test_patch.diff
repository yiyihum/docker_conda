diff --git a/tests/test_factories.py b/tests/test_factories.py
index b532cfe..6b49918 100644
--- a/tests/test_factories.py
+++ b/tests/test_factories.py
@@ -53,6 +53,17 @@ class TestBlankableSpecValidation:
         assert blankable_spec.validate_all(v)
 
 
+class TestBlankableSpecConformation:
+    @pytest.fixture
+    def blankable_spec(self) -> Spec:
+        return s.blankable(s.date("date", format_="%Y%m%d", conformer=str))
+
+    @pytest.mark.parametrize("v,conformed", [("", ""), ("20200314", "2020-03-14")])
+    def test_blankable_conformation(self, blankable_spec: Spec, v, conformed):
+        assert blankable_spec.is_valid(v)
+        assert conformed == blankable_spec.conform(v)
+
+
 class TestBoolValidation:
     @pytest.mark.parametrize("v", [True, False])
     def test_bool(self, v):
@@ -1008,6 +1019,17 @@ class TestNilableSpecValidation:
         assert nilable_spec.validate_all(v)
 
 
+class TestNilableSpecConformation:
+    @pytest.fixture
+    def nilable_spec(self) -> Spec:
+        return s.nilable(s.date("date", format_="%Y%m%d", conformer=str))
+
+    @pytest.mark.parametrize("v,conformed", [(None, None), ("20200314", "2020-03-14")])
+    def test_blankable_conformation(self, nilable_spec: Spec, v, conformed):
+        assert nilable_spec.is_valid(v)
+        assert conformed == nilable_spec.conform(v)
+
+
 class TestNumSpecValidation:
     @pytest.mark.parametrize("v", [-3, 25, 3.14, -2.72, -33])
     def test_is_num(self, v):
