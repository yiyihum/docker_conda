diff --git a/albumentations/augmentations/geometric/functional.py b/albumentations/augmentations/geometric/functional.py
index bc3782d..5690726 100644
--- a/albumentations/augmentations/geometric/functional.py
+++ b/albumentations/augmentations/geometric/functional.py
@@ -461,18 +461,12 @@ def perspective_bbox(
     for pt in points:
         pt = perspective_keypoint(pt.tolist() + [0, 0], height, width, matrix, max_width, max_height, keep_size)
         x, y = pt[:2]
-        x = np.clip(x, 0, width if keep_size else max_width)
-        y = np.clip(y, 0, height if keep_size else max_height)
         x1 = min(x1, x)
         x2 = max(x2, x)
         y1 = min(y1, y)
         y2 = max(y2, y)
 
-    x = np.clip([x1, x2], 0, width if keep_size else max_width)
-    y = np.clip([y1, y2], 0, height if keep_size else max_height)
-    return normalize_bbox(
-        (x[0], y[0], x[1], y[1]), height if keep_size else max_height, width if keep_size else max_width
-    )
+    return normalize_bbox((x1, y1, x2, y2), height if keep_size else max_height, width if keep_size else max_width)
 
 
 def rotation2DMatrixToEulerAngles(matrix: np.ndarray, y_up: bool = False) -> float:
@@ -575,8 +569,6 @@ def bbox_affine(
         ]
     )
     points = skimage.transform.matrix_transform(points, matrix.params)
-    points[:, 0] = np.clip(points[:, 0], 0, output_shape[1])
-    points[:, 1] = np.clip(points[:, 1], 0, output_shape[0])
     x_min = np.min(points[:, 0])
     x_max = np.max(points[:, 0])
     y_min = np.min(points[:, 1])
