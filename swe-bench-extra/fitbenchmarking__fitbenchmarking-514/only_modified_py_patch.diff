diff --git a/fitbenchmarking/core/fitbenchmark_one_problem.py b/fitbenchmarking/core/fitbenchmark_one_problem.py
index a65f5292..0dfbde15 100644
--- a/fitbenchmarking/core/fitbenchmark_one_problem.py
+++ b/fitbenchmarking/core/fitbenchmark_one_problem.py
@@ -30,7 +30,7 @@ def fitbm_one_prob(problem, options):
     :return: list of all results
     :rtype: list of fibenchmarking.utils.fitbm_result.FittingResult
     """
-    grabbed_output = output_grabber.OutputGrabber()
+    grabbed_output = output_grabber.OutputGrabber(options)
     results = []
 
     software = options.software
@@ -85,7 +85,7 @@ def benchmark(controller, minimizers, options):
     :return: list of all results
     :rtype: list of fibenchmarking.utils.fitbm_result.FittingResult
     """
-    grabbed_output = output_grabber.OutputGrabber()
+    grabbed_output = output_grabber.OutputGrabber(options)
     problem = controller.problem
 
     results_problem = []
diff --git a/fitbenchmarking/core/fitting_benchmarking.py b/fitbenchmarking/core/fitting_benchmarking.py
index 17b970f3..22c8aa41 100644
--- a/fitbenchmarking/core/fitting_benchmarking.py
+++ b/fitbenchmarking/core/fitting_benchmarking.py
@@ -34,7 +34,7 @@ def fitbenchmark_group(group_name, options, data_dir):
              the problem group and the location of the results
     :rtype: tuple(list, str)
     """
-    grabbed_output = output_grabber.OutputGrabber()
+    grabbed_output = output_grabber.OutputGrabber(options)
 
     # Extract problem definitions
     problem_group = misc.get_problem_files(data_dir)
diff --git a/fitbenchmarking/utils/options.py b/fitbenchmarking/utils/options.py
index 14721ec1..f752852e 100644
--- a/fitbenchmarking/utils/options.py
+++ b/fitbenchmarking/utils/options.py
@@ -75,6 +75,11 @@ class Options(object):
         self.log_file = logging.getstr('file_name')
         self.log_level = logging.getstr('level')
 
+        try:
+            self.external_output = logging.getboolean('external_output')
+        except ValueError:
+            error_message.append(template.format('external_output', "boolean"))
+
         # sys.exit() will be addressed in future FitBenchmarking
         # error handling issue
         if error_message != []:
@@ -116,7 +121,8 @@ class Options(object):
                               'table_type': list_to_string(self.table_type)}
         config['LOGGING'] = {'file_name': self.log_file,
                              'level': self.log_level,
-                             'append': self.log_append}
+                             'append': self.log_append,
+                             'external_output': self.external_output}
 
         with open(file_name, 'w') as f:
             config.write(f)
diff --git a/fitbenchmarking/utils/output_grabber.py b/fitbenchmarking/utils/output_grabber.py
index baf8d967..e1e444b7 100644
--- a/fitbenchmarking/utils/output_grabber.py
+++ b/fitbenchmarking/utils/output_grabber.py
@@ -1,28 +1,37 @@
 import os
 import sys
+import platform
 
 from fitbenchmarking.utils.log import get_logger
 
 LOGGER = get_logger()
 
+
 class OutputGrabber(object):
     """
     Class used to grab standard output or another stream.
     """
     escape_char = "\b"
 
-    def __init__(self):
+    def __init__(self, options):
 
         self.origstream = sys.stdout
         self.origstreamfd = self.origstream.fileno()
         self.capturedtext = ""
+        # From issue 500 the output grabber does not currently on windows, thus
+        # we set the __enter__ and __exit__ functions to pass through for this
+        # case
+        self.system = platform.system() != "Windows"
+        self.external_output = options.external_output
 
     def __enter__(self):
-        self.start()
+        if self.system and self.external_output:
+            self.start()
         return self
 
     def __exit__(self, type, value, traceback):
-        self.stop()
+        if self.system and self.external_output:
+            self.stop()
 
     def start(self):
         """

