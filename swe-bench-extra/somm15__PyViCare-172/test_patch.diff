diff --git a/tests/test_GenericDevice.py b/tests/test_GenericDevice.py
index 29246b7..a344c0a 100644
--- a/tests/test_GenericDevice.py
+++ b/tests/test_GenericDevice.py
@@ -29,7 +29,7 @@ class GenericDevice(unittest.TestCase):
         self.device.setDomesticHotWaterTemperature(50)
         self.assertEqual(len(self.service.setPropertyData), 1)
         self.assertEqual(
-            self.service.setPropertyData[0]['property_name'], 'heating.dhw.temperature')
+            self.service.setPropertyData[0]['property_name'], 'heating.dhw.temperature.main')
         self.assertEqual(
             self.service.setPropertyData[0]['action'], 'setTargetTemperature')
         self.assertEqual(self.service.setPropertyData[0]['data'], {
diff --git a/tests/test_Vitodens200W.py b/tests/test_Vitodens200W.py
index 847e3ef..868fd85 100644
--- a/tests/test_Vitodens200W.py
+++ b/tests/test_Vitodens200W.py
@@ -37,6 +37,12 @@ class Vitodens200W(unittest.TestCase):
     def test_getPowerConsumptionDays(self):
         self.assertRaises(PyViCareNotSupportedFeatureError, self.device.getPowerConsumptionDays)
 
+    def test_getDomesticHotWaterMaxTemperature(self):
+        self.assertEqual(self.device.getDomesticHotWaterMaxTemperature(), 60)
+
+    def test_getDomesticHotWaterMinTemperature(self):
+        self.assertEqual(self.device.getDomesticHotWaterMinTemperature(), 10)
+
     def test_getFrostProtectionActive(self):
         self.assertEqual(
             self.device.circuits[0].getFrostProtectionActive(), False)
