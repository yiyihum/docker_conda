diff --git a/gabbi/tests/gabbits_runner/subdir/sample.json b/gabbi/tests/gabbits_runner/subdir/sample.json
new file mode 100644
index 0000000..ddbce20
--- /dev/null
+++ b/gabbi/tests/gabbits_runner/subdir/sample.json
@@ -0,0 +1,1 @@
+{"items": {"house": "blue"}}
diff --git a/gabbi/tests/gabbits_runner/test_data.yaml b/gabbi/tests/gabbits_runner/test_data.yaml
new file mode 100644
index 0000000..35d056a
--- /dev/null
+++ b/gabbi/tests/gabbits_runner/test_data.yaml
@@ -0,0 +1,8 @@
+tests:
+
+- name: POST data from file
+  verbose: true
+  POST: /
+  request_headers:
+    content-type: application/json
+  data: <@subdir/sample.json
diff --git a/gabbi/tests/test_runner.py b/gabbi/tests/test_runner.py
index bf882ab..1b86235 100644
--- a/gabbi/tests/test_runner.py
+++ b/gabbi/tests/test_runner.py
@@ -22,6 +22,7 @@ from wsgi_intercept.interceptor import Urllib3Interceptor
 
 from gabbi import exception
 from gabbi.handlers import base
+from gabbi.handlers.jsonhandler import JSONHandler
 from gabbi import runner
 from gabbi.tests.simple_wsgi import SimpleWsgi
 
@@ -249,6 +250,28 @@ class RunnerTest(unittest.TestCase):
         self.assertIn('{\n', output)
         self.assertIn('}\n', output)
 
+    def test_data_dir_good(self):
+        """Confirm that data dir is the test file's dir."""
+        sys.argv = ['gabbi-run', 'http://%s:%s/foo' % (self.host, self.port)]
+
+        sys.argv.append('--')
+        sys.argv.append('gabbi/tests/gabbits_runner/test_data.yaml')
+        with self.server():
+            try:
+                runner.run()
+            except SystemExit as err:
+                self.assertSuccess(err)
+
+        # Compare the verbose output of tests with pretty printed
+        # data.
+        with open('gabbi/tests/gabbits_runner/subdir/sample.json') as data:
+            data = JSONHandler.loads(data.read())
+            expected_string = JSONHandler.dumps(data, pretty=True)
+
+        sys.stdout.seek(0)
+        output = sys.stdout.read()
+        self.assertIn(expected_string, output)
+
     def assertSuccess(self, exitError):
         errors = exitError.args[0]
         if errors:
