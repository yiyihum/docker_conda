diff --git a/docs/source/format.rst b/docs/source/format.rst
index cc1b129..51dcf24 100644
--- a/docs/source/format.rst
+++ b/docs/source/format.rst
@@ -269,8 +269,9 @@ flexibility when doing a ``POST`` or ``PUT``. If the value is not a
 string (that is, it is a sequence or structure) it is treated as a
 data structure which is turned into a JSON string. If the value is a
 string that begins with ``<@`` then the rest of the string is treated
-as the name of a file to be loaded from the same directory as the YAML
-file. If the value is an undecorated string, that's the value.
+as a filepath to be loaded. The path is relative to the test directory
+and may not traverse up into parent directories. If the value is an
+undecorated string, that's the value.
 
 When reading from a file care should be taken to ensure that a
 reasonable content-type is set for the data as this will control if any
diff --git a/gabbi/runner.py b/gabbi/runner.py
index ac98dea..9f45351 100644
--- a/gabbi/runner.py
+++ b/gabbi/runner.py
@@ -14,6 +14,7 @@
 
 import argparse
 from importlib import import_module
+import os
 import sys
 import unittest
 
@@ -84,8 +85,9 @@ def run():
     else:
         for input_file in input_files:
             with open(input_file, 'r') as fh:
+                data_dir = os.path.dirname(input_file)
                 success = run_suite(fh, handler_objects, host, port,
-                                    prefix, force_ssl, failfast)
+                                    prefix, force_ssl, failfast, data_dir)
             if not failure:  # once failed, this is considered immutable
                 failure = not success
             if failure and failfast:
@@ -95,7 +97,7 @@ def run():
 
 
 def run_suite(handle, handler_objects, host, port, prefix, force_ssl=False,
-              failfast=False):
+              failfast=False, data_dir='.'):
     """Run the tests from the YAML in handle."""
     data = utils.load_yaml(handle)
     if force_ssl:
@@ -106,7 +108,7 @@ def run_suite(handle, handler_objects, host, port, prefix, force_ssl=False,
 
     loader = unittest.defaultTestLoader
     test_suite = suitemaker.test_suite_from_dict(
-        loader, 'input', data, '.', host, port, None, None, prefix=prefix,
+        loader, 'input', data, data_dir, host, port, None, None, prefix=prefix,
         handlers=handler_objects)
 
     result = ConciseTestRunner(
