diff --git a/tests/library/test_utils.py b/tests/library/test_utils.py
index 1147865c..f561d0d2 100644
--- a/tests/library/test_utils.py
+++ b/tests/library/test_utils.py
@@ -72,6 +72,10 @@ class TestUtils(unittest.TestCase):
         text = "15 to 20 minutes"
         self.assertEqual(20, get_minutes(text))
 
+    def test_get_minutes_imprecise_description(self):
+        text = "PÃ¡-Pum"
+        self.assertEqual(None, get_minutes(text))
+
     iso8601_fixtures = {
         "PT1H": 60,
         "PT20M": 20,
diff --git a/tests/test_kitchenstories.py b/tests/test_kitchenstories.py
index 56cf1eb4..73cfc9db 100644
--- a/tests/test_kitchenstories.py
+++ b/tests/test_kitchenstories.py
@@ -27,7 +27,7 @@ class TestKitchenStoriesScraper(ScraperTest):
         self.assertEqual(80, self.harvester_class.total_time())
 
     def test_cook_time(self):
-        self.assertEqual(0, self.harvester_class.cook_time())
+        self.assertEqual(None, self.harvester_class.cook_time())
 
     def test_prep_time(self):
         self.assertEqual(20, self.harvester_class.prep_time())
diff --git a/tests/test_panelinha_2.py b/tests/test_panelinha_2.py
index 21785723..4d15d811 100644
--- a/tests/test_panelinha_2.py
+++ b/tests/test_panelinha_2.py
@@ -16,7 +16,7 @@ class TestPanelinhaScraper(ScraperTest):
         self.assertEqual(self.harvester_class.author(), "Panelinha")
 
     def test_total_time(self):
-        self.assertEqual(0, self.harvester_class.total_time())
+        self.assertEqual(None, self.harvester_class.total_time())
 
     def test_yields(self):
         self.assertEqual("2 servings", self.harvester_class.yields())
diff --git a/tests/test_weightwatchers.py b/tests/test_weightwatchers.py
index 0b2bc234..dddc4ad6 100644
--- a/tests/test_weightwatchers.py
+++ b/tests/test_weightwatchers.py
@@ -27,7 +27,7 @@ class TestWeightwatchersScraper(ScraperTest):
         self.assertEqual(25, self.harvester_class.total_time())
 
     def test_cook_time(self):
-        self.assertEqual(0, self.harvester_class.cook_time())
+        self.assertEqual(None, self.harvester_class.cook_time())
 
     def test_prep_time(self):
         self.assertEqual(25, self.harvester_class.prep_time())
