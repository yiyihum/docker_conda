diff --git a/tests/playlists.py b/tests/playlists.py
index 9ca09f2..fbec958 100755
--- a/tests/playlists.py
+++ b/tests/playlists.py
@@ -88,6 +88,14 @@ http://example.com/hi.m3u8
 http://example.com/audio-only.m3u8
 '''
 
+VARIANT_PLAYLIST_WITH_CC_SUBS_AND_AUDIO = '''
+#EXTM3U
+#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=7680000,CLOSED-CAPTIONS="cc",SUBTITLES="sub",AUDIO="aud"
+http://example.com/with-cc-hi.m3u8
+#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=65000,CLOSED-CAPTIONS="cc",SUBTITLES="sub",AUDIO="aud"
+http://example.com/with-cc-low.m3u8
+'''
+
 VARIANT_PLAYLIST_WITH_AVERAGE_BANDWIDTH = '''
 #EXTM3U
 #EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=1280000,AVERAGE-BANDWIDTH=1252345
diff --git a/tests/test_parser.py b/tests/test_parser.py
index ff3d826..bd67a59 100644
--- a/tests/test_parser.py
+++ b/tests/test_parser.py
@@ -115,6 +115,28 @@ def test_should_parse_variant_playlist():
     assert 65000 == playlists_list[-1]['stream_info']['bandwidth']
     assert 'mp4a.40.5,avc1.42801e' == playlists_list[-1]['stream_info']['codecs']
 
+def test_should_parse_variant_playlist_with_cc_subtitles_and_audio():
+    data = m3u8.parse(playlists.VARIANT_PLAYLIST_WITH_CC_SUBS_AND_AUDIO)
+    playlists_list = list(data['playlists'])
+
+    assert True == data['is_variant']
+    assert None == data['media_sequence']
+    assert 2 == len(playlists_list)
+
+    assert 'http://example.com/with-cc-hi.m3u8' == playlists_list[0]['uri']
+    assert 1 == playlists_list[0]['stream_info']['program_id']
+    assert 7680000 == playlists_list[0]['stream_info']['bandwidth']
+    assert 'cc' == playlists_list[0]['stream_info']['closed_captions']
+    assert 'sub' == playlists_list[0]['stream_info']['subtitles']
+    assert 'aud' == playlists_list[0]['stream_info']['audio']
+
+    assert 'http://example.com/with-cc-low.m3u8' == playlists_list[-1]['uri']
+    assert 1 == playlists_list[-1]['stream_info']['program_id']
+    assert 65000 == playlists_list[-1]['stream_info']['bandwidth']
+    assert 'cc' == playlists_list[-1]['stream_info']['closed_captions']
+    assert 'sub' == playlists_list[-1]['stream_info']['subtitles']
+    assert 'aud' == playlists_list[-1]['stream_info']['audio']
+
 def test_should_parse_variant_playlist_with_average_bandwidth():
     data = m3u8.parse(playlists.VARIANT_PLAYLIST_WITH_AVERAGE_BANDWIDTH)
     playlists_list = list(data['playlists'])
