diff --git a/eBCSgen/Parsing/ParseBCSL.py b/eBCSgen/Parsing/ParseBCSL.py
index 1fc448f..4bb2843 100644
--- a/eBCSgen/Parsing/ParseBCSL.py
+++ b/eBCSgen/Parsing/ParseBCSL.py
@@ -362,6 +362,10 @@ class TransformAbstractSyntax(Transformer):
         self.complex_defns = complex_defns
 
     def cmplx_name(self, matches):
+        if str(matches[0]) not in self.complex_defns:
+            raise ComplexParsingError(
+                f"Complex alias {matches[0]} not found in defined complexes: {list(self.complex_defns.keys())}", matches
+            )
         return deepcopy(self.complex_defns[str(matches[0])])
 
     def abstract_sequence(self, matches):
@@ -544,11 +548,19 @@ class TreeToComplex(Transformer):
 
     def structure(self, matches):
         name = str(matches[0].children[0])
-        if len(matches) > 1:
-            composition = set(matches[1].children)
-            return StructureAgent(name, composition)
-        else:
+        if len(matches) <= 1:
             return StructureAgent(name, set())
+        atomic_names = set()
+        composition = set()
+        for atomic in matches[1].children:
+            if atomic.name in atomic_names:
+                raise ComplexParsingError(
+                    f"Duplicate atomic agent in structure: {atomic.name}", matches
+                )
+            atomic_names.add(atomic.name)
+            composition.add(atomic)
+
+        return StructureAgent(name, composition)
 
     def rate_complex(self, matches):
         sequence = []

