diff --git a/bugbear.py b/bugbear.py
index b4fcf89..177af11 100644
--- a/bugbear.py
+++ b/bugbear.py
@@ -333,6 +333,7 @@ class BugBearVisitor(ast.NodeVisitor):
 
     def visit_For(self, node):
         self.check_for_b007(node)
+        self.check_for_b020(node)
         self.generic_visit(node)
 
     def visit_Assert(self, node):
@@ -506,6 +507,20 @@ class BugBearVisitor(ast.NodeVisitor):
         ):
             self.errors.append(B017(node.lineno, node.col_offset))
 
+    def check_for_b020(self, node):
+        targets = NameFinder()
+        targets.visit(node.target)
+        ctrl_names = set(targets.names)
+
+        iterset = NameFinder()
+        iterset.visit(node.iter)
+        iterset_names = set(iterset.names)
+
+        for name in sorted(ctrl_names):
+            if name in iterset_names:
+                n = targets.names[name][0]
+                self.errors.append(B020(n.lineno, n.col_offset, vars=(name,)))
+
     def check_for_b904(self, node):
         """Checks `raise` without `from` inside an `except` clause.
 
@@ -871,6 +886,12 @@ B018 = Error(
         "B018 Found useless expression. Either assign it to a variable or remove it."
     )
 )
+B020 = Error(
+    message=(
+        "B020 Found for loop that reassigns the iterable it is iterating "
+        + "with each iterable value."
+    )
+)
 
 # Warnings disabled by default.
 B901 = Error(

