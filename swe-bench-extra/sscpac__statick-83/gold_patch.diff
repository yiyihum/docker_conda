diff --git a/statick_tool/statick.py b/statick_tool/statick.py
index 1ca89f6..c0ab701 100644
--- a/statick_tool/statick.py
+++ b/statick_tool/statick.py
@@ -72,6 +72,8 @@ class Statick(object):
                           type=str, help="Force only the given list of tools to run")
         args.add_argument('--version', action='version',
                           version='%(prog)s {version}'.format(version=__version__))
+        args.add_argument('--mapping-file-suffix', dest="mapping_file_suffix",
+                          type=str, help="Suffix to use when searching for CERT mapping files")
 
         for _, plugin in list(self.discovery_plugins.items()):
             plugin.gather_args(args)
diff --git a/statick_tool/tool_plugin.py b/statick_tool/tool_plugin.py
index c8f3b76..28839e3 100644
--- a/statick_tool/tool_plugin.py
+++ b/statick_tool/tool_plugin.py
@@ -36,8 +36,16 @@ class ToolPlugin(IPlugin):
 
     def load_mapping(self):
         """Load a mapping between warnings and identifiers."""
-        file_name = "plugin_mapping/%s.txt" % (self.get_name())
+        file_name = "plugin_mapping/{}.txt".format(self.get_name())
         full_path = self.plugin_context.resources.get_file(file_name)
+        if self.plugin_context.args.mapping_file_suffix is not None:
+            # If the user specified a suffix, try to get the suffixed version of the file
+            suffixed_file_name = "plugin_mapping/{}-{}.txt".format(self.get_name(), self.plugin_context.args.mapping_file_suffix)
+            suffixed_full_path = self.plugin_context.resources.get_file(suffixed_file_name)
+            if suffixed_full_path is not None:
+                # If there actually is a file with that suffix, use it (else use the un-suffixed version)
+                full_path = suffixed_full_path
+
         if full_path is None:
             return {}
         warning_mapping = {}
