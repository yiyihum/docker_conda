diff --git a/todoman/cli.py b/todoman/cli.py
index e59f488..0703c85 100644
--- a/todoman/cli.py
+++ b/todoman/cli.py
@@ -304,7 +304,13 @@ def move(ctx, list, ids):
 @click.option('--reverse/--no-reverse', default=True,
               help='Sort tasks in reverse order (see --sort). '
               'Defaults to true.')
-def list(ctx, lists, all, urgent, location, category, grep, sort, reverse):
+@click.option('--due', default=None, help='Only show tasks due in DUE hours',
+              type=int)
+# TODO: we might want a `porcelain` flag here to print this is a
+# machine-friendly format that NEVER CHANGES!
+def list(
+    ctx, lists, all, urgent, location, category, grep, sort, reverse, due,
+         ):
     """
     List unfinished tasks.
 
@@ -323,6 +329,7 @@ def list(ctx, lists, all, urgent, location, category, grep, sort, reverse):
 
     db = ctx.obj['db']
     todos = db.todos(
+        due=due,
         all=all,
         category=category,
         grep=grep,
diff --git a/todoman/model.py b/todoman/model.py
index 91e515f..b9293bf 100644
--- a/todoman/model.py
+++ b/todoman/model.py
@@ -502,7 +502,7 @@ class Cache:
         )
 
     def todos(self, all=False, lists=[], urgent=False, location='',
-              category='', grep='', sort=[], reverse=True):
+              category='', grep='', sort=[], reverse=True, due=None):
         list_map = {list.name: list for list in self.lists()}
 
         extra_where = []
@@ -532,6 +532,10 @@ class Cache:
             # params.append(grep)
             extra_where.append('AND summary LIKE ?')
             params.append('%{}%'.format(grep))
+        if due:
+            max_due = datetime.now() + timedelta(hours=due)
+            extra_where.append('AND due IS NOT NULL AND due < ?')
+            params.append(max_due)
 
         if sort:
             order = []

