diff --git a/defusedcsv/csv.py b/defusedcsv/csv.py
index 2656c96..a027b85 100644
--- a/defusedcsv/csv.py
+++ b/defusedcsv/csv.py
@@ -1,20 +1,28 @@
 import re
 from csv import (
     QUOTE_ALL, QUOTE_MINIMAL, QUOTE_NONE, QUOTE_NONNUMERIC, Dialect,
-    DictReader, DictWriter as BaseDictWriter, Error, Sniffer, excel, excel_tab,
+    DictReader, DictWriter as _BaseDictWriter, Error, Sniffer, excel, excel_tab,
     field_size_limit, get_dialect, list_dialects, reader, register_dialect,
-    unix_dialect, unregister_dialect, writer as basewriter,
+    unix_dialect, unregister_dialect, writer as _basewriter,
+    __doc__,
 )
+from numbers import Number
+
+from . import version as __version__
 
 __all__ = ["QUOTE_MINIMAL", "QUOTE_ALL", "QUOTE_NONNUMERIC", "QUOTE_NONE",
-           "Error", "Dialect", "excel", "excel_tab", "field_size_limit", "reader", "writer",
+           "Error", "Dialect", "__doc__", "excel", "excel_tab",
+           "field_size_limit", "reader", "writer",
            "register_dialect", "get_dialect", "list_dialects", "Sniffer",
-           "unregister_dialect", "DictReader", "DictWriter", "unix_dialect"]
+           "unregister_dialect", "__version__", "DictReader", "DictWriter",
+           "unix_dialect"]
 
 
-def escape(payload):
+def _escape(payload):
     if payload is None:
         return ''
+    if isinstance(payload, Number):
+        return payload
 
     payload = str(payload)
     if payload and payload[0] in ('@', '+', '-', '=', '|', '%') and not re.match("^-?[0-9,\\.]+$", payload):
@@ -23,25 +31,30 @@ def escape(payload):
     return payload
 
 
-class ProxyWriter:
+class _ProxyWriter:
     def __init__(self, writer):
         self.writer = writer
 
     def writerow(self, row):
-        self.writer.writerow([escape(field) for field in row])
+        try:
+            iter(row)
+        except TypeError as err:
+            msg = "iterable expected, not %s" % type(row).__name__
+            raise Error(msg) from err
+        return self.writer.writerow([_escape(field) for field in row])
 
     def writerows(self, rows):
-        self.writer.writerows([[escape(field) for field in row] for row in rows])
+        return self.writer.writerows([[_escape(field) for field in row] for row in rows])
 
     def __getattr__(self, item):
         return getattr(self.writer, item)
 
 
 def writer(csvfile, dialect='excel', **fmtparams):
-    return ProxyWriter(basewriter(csvfile, dialect, **fmtparams))
+    return _ProxyWriter(_basewriter(csvfile, dialect, **fmtparams))
 
 
-class DictWriter(BaseDictWriter):
+class DictWriter(_BaseDictWriter):
     def __init__(self, f, fieldnames, restval="", extrasaction="raise",
                  dialect="excel", *args, **kwds):
         super().__init__(f, fieldnames, restval, extrasaction, dialect, *args, **kwds)
