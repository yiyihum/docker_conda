diff --git a/datalad/interface/__init__.py b/datalad/interface/__init__.py
index f5a4c5b55..5ac873a5d 100644
--- a/datalad/interface/__init__.py
+++ b/datalad/interface/__init__.py
@@ -73,6 +73,7 @@ _group_misc = (
         ('datalad.interface.add_archive_content', 'AddArchiveContent',
          'add-archive-content'),
         ('datalad.interface.download_url', 'DownloadURL', 'download-url'),
+        ('datalad.interface.shell_completion', 'ShellCompletion', 'shell-completion'),
         ('datalad.core.local.run', 'Run', 'run'),
         ('datalad.interface.rerun', 'Rerun', 'rerun'),
         ('datalad.interface.run_procedure', 'RunProcedure', 'run-procedure'),
diff --git a/datalad/interface/results.py b/datalad/interface/results.py
index ae98b228a..4769d1a46 100644
--- a/datalad/interface/results.py
+++ b/datalad/interface/results.py
@@ -224,7 +224,7 @@ def annexjson2result(d, ds, **kwargs):
     res['status'] = 'ok' if d.get('success', False) is True else 'error'
     # we cannot rely on any of these to be available as the feed from
     # git annex (or its wrapper) is not always homogeneous
-    if 'file' in d:
+    if d.get('file'):
         res['path'] = str(ds.pathobj / PurePosixPath(d['file']))
     if 'command' in d:
         res['action'] = d['command']
diff --git a/datalad/interface/shell_completion.py b/datalad/interface/shell_completion.py
new file mode 100644
index 000000000..4c165fe69
--- /dev/null
+++ b/datalad/interface/shell_completion.py
@@ -0,0 +1,78 @@
+# emacs: -*- mode: python; py-indent-offset: 4; tab-width: 4; indent-tabs-mode: nil -*-
+# ex: set sts=4 ts=4 sw=4 noet:
+# ## ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ##
+#
+#   See COPYING file distributed along with the datalad package for the
+#   copyright and license terms.
+#
+# ## ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ##
+"""A helper command to enable shell (bash, zsh) completion for DataLad
+
+"""
+__docformat__ = 'restructuredtext'
+
+
+from .base import Interface
+from datalad.interface.base import build_doc
+from datalad.interface.utils import eval_results
+from datalad.interface.results import get_status_dict
+
+
+@build_doc
+class ShellCompletion(Interface):
+    """Display shell script for enabling shell completion for DataLad.
+
+    Output of this command should be "sourced" by the bash or zsh to enable
+    shell completions provided by argcomplete.
+
+    Example:
+
+        $ source <(datalad shell-completion)
+        $ datalad --<PRESS TAB to display available option>
+
+    """
+    # XXX prevent common args from being added to the docstring
+    _no_eval_results = True
+    result_renderer = 'tailored'
+    _params_ = {}
+
+    @staticmethod
+    @eval_results
+    def __call__():
+        """
+        """
+        content = """\
+# Universal completion script for DataLad with the core autogenerated by
+# python-argcomplete and only slightly improved to work for ZSH if sourced under ZSH.
+#
+# Instead of just running this command and seeing this output, do
+#
+#    source <(datalad shell-completion)
+#
+# in your bash or zsh session.
+
+if [ "${ZSH_VERSION:-}" != "" ]; then
+  autoload -U compinit && compinit
+  autoload -U bashcompinit && bashcompinit
+fi
+
+_python_argcomplete() {
+    local IFS=''
+    COMPREPLY=( $(IFS="$IFS" COMP_LINE="$COMP_LINE" COMP_POINT="$COMP_POINT" _ARGCOMPLETE_COMP_WORDBREAKS="$COMP_WORDBREAKS" _ARGCOMPLETE=1                   "$1" 8>&1 9>&2 1>/dev/null 2>/dev/null) )
+    if [[ $? != 0 ]]; then
+        unset COMPREPLY
+    fi
+}
+
+complete -o nospace -o default -F _python_argcomplete "datalad"
+"""
+        yield get_status_dict(
+            action='shell_completion',
+            status='ok',
+            content=content
+        )
+
+    @staticmethod
+    def custom_result_renderer(res, **kwargs):
+        from datalad.ui import ui
+        ui.message(res['content'])
diff --git a/docs/source/cmdline.rst b/docs/source/cmdline.rst
index b428b28b5..cc7c5b89b 100644
--- a/docs/source/cmdline.rst
+++ b/docs/source/cmdline.rst
@@ -67,6 +67,7 @@ Miscellaneous commands
    generated/man/datalad-clean
    generated/man/datalad-download-url
    generated/man/datalad-ls
+   generated/man/datalad-shell-completion
    generated/man/datalad-test
    generated/man/datalad-export-archive-ora
 
