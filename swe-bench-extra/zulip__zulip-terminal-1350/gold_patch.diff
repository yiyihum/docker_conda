diff --git a/zulipterminal/ui_tools/views.py b/zulipterminal/ui_tools/views.py
index 1ae51ec..8f6ad15 100644
--- a/zulipterminal/ui_tools/views.py
+++ b/zulipterminal/ui_tools/views.py
@@ -1520,13 +1520,15 @@ class MsgInfoView(PopUpView):
         date_and_time = controller.model.formatted_local_time(
             msg["timestamp"], show_seconds=True, show_year=True
         )
-        view_in_browser_keys = ", ".join(map(repr, keys_for_command("VIEW_IN_BROWSER")))
+        view_in_browser_keys = "[{}]".format(
+            ", ".join(map(str, keys_for_command("VIEW_IN_BROWSER")))
+        )
 
-        full_rendered_message_keys = ", ".join(
-            map(repr, keys_for_command("FULL_RENDERED_MESSAGE"))
+        full_rendered_message_keys = "[{}]".format(
+            ", ".join(map(str, keys_for_command("FULL_RENDERED_MESSAGE")))
         )
-        full_raw_message_keys = ", ".join(
-            map(repr, keys_for_command("FULL_RAW_MESSAGE"))
+        full_raw_message_keys = "[{}]".format(
+            ", ".join(map(str, keys_for_command("FULL_RAW_MESSAGE")))
         )
         msg_info = [
             (
@@ -1535,22 +1537,22 @@ class MsgInfoView(PopUpView):
                     ("Date & Time", date_and_time),
                     ("Sender", msg["sender_full_name"]),
                     ("Sender's Email ID", msg["sender_email"]),
-                    (
-                        "View message in browser",
-                        f"Press {view_in_browser_keys} to view message in browser",
-                    ),
-                    (
-                        "Full rendered message",
-                        f"Press {full_rendered_message_keys} to view",
-                    ),
-                    (
-                        "Full raw message",
-                        f"Press {full_raw_message_keys} to view",
-                    ),
                 ],
-            ),
+            )
         ]
+
+        # actions for message info popup
+        viewing_actions = (
+            "Viewing Actions",
+            [
+                ("Open in web browser", view_in_browser_keys),
+                ("Full rendered message", full_rendered_message_keys),
+                ("Full raw message", full_raw_message_keys),
+            ],
+        )
+        msg_info.append(viewing_actions)
         # Only show the 'Edit History' label for edited messages.
+
         self.show_edit_history_label = (
             self.msg["id"] in controller.model.index["edited_messages"]
             and controller.model.initial_data["realm_allow_edit_history"]
@@ -1558,8 +1560,8 @@ class MsgInfoView(PopUpView):
         if self.show_edit_history_label:
             msg_info[0][1][0] = ("Date & Time (Original)", date_and_time)
 
-            keys = ", ".join(map(repr, keys_for_command("EDIT_HISTORY")))
-            msg_info[0][1].append(("Edit History", f"Press {keys} to view"))
+            keys = "[{}]".format(", ".join(map(str, keys_for_command("EDIT_HISTORY"))))
+            msg_info[1][1].append(("Edit History", keys))
         # Render the category using the existing table methods if links exist.
         if message_links:
             msg_info.append(("Message Links", []))
@@ -1594,7 +1596,9 @@ class MsgInfoView(PopUpView):
 
             # slice_index = Number of labels before message links + 1 newline
             #               + 1 'Message Links' category label.
-            slice_index = len(msg_info[0][1]) + 2
+            #               + 2 for Viewing Actions category label and its newline
+            slice_index = len(msg_info[0][1]) + len(msg_info[1][1]) + 2 + 2
+
             slice_index += sum([len(w) + 2 for w in self.button_widgets])
             self.button_widgets.append(message_links)
 
@@ -1610,7 +1614,8 @@ class MsgInfoView(PopUpView):
 
             # slice_index = Number of labels before topic links + 1 newline
             #               + 1 'Topic Links' category label.
-            slice_index = len(msg_info[0][1]) + 2
+            #               + 2 for Viewing Actions category label and its newline
+            slice_index = len(msg_info[0][1]) + len(msg_info[1][1]) + 2 + 2
             slice_index += sum([len(w) + 2 for w in self.button_widgets])
             self.button_widgets.append(topic_links)
 
