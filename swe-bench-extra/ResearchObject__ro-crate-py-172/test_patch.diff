diff --git a/test/test_cli.py b/test/test_cli.py
index b6b8b69..28d918e 100644
--- a/test/test_cli.py
+++ b/test/test_cli.py
@@ -145,18 +145,19 @@ def test_cli_add_file(tmpdir, test_data_dir, helpers, monkeypatch, cwd):
     # add
     shutil.copy(test_data_dir / "sample_file.txt", crate_dir)
     file_path = crate_dir / "sample_file.txt"
-    args = ["add", "file"]
+    args = ["add", "file", str(file_path), "-P", "name=foo", "-P", "description=foo bar"]
     if cwd:
         monkeypatch.chdir(str(crate_dir))
         file_path = file_path.relative_to(crate_dir)
     else:
         args.extend(["-c", str(crate_dir)])
-    args.append(str(file_path))
     result = runner.invoke(cli, args)
     assert result.exit_code == 0
     json_entities = helpers.read_json_entities(crate_dir)
     assert "sample_file.txt" in json_entities
     assert json_entities["sample_file.txt"]["@type"] == "File"
+    assert json_entities["sample_file.txt"]["name"] == "foo"
+    assert json_entities["sample_file.txt"]["description"] == "foo bar"
 
 
 @pytest.mark.parametrize("cwd", [False, True])
@@ -171,18 +172,19 @@ def test_cli_add_dataset(tmpdir, test_data_dir, helpers, monkeypatch, cwd):
     # add
     dataset_path = crate_dir / "test_add_dir"
     shutil.copytree(test_data_dir / "test_add_dir", dataset_path)
-    args = ["add", "dataset"]
+    args = ["add", "dataset", str(dataset_path), "-P", "name=foo", "-P", "description=foo bar"]
     if cwd:
         monkeypatch.chdir(str(crate_dir))
         dataset_path = dataset_path.relative_to(crate_dir)
     else:
         args.extend(["-c", str(crate_dir)])
-    args.append(str(dataset_path))
     result = runner.invoke(cli, args)
     assert result.exit_code == 0
     json_entities = helpers.read_json_entities(crate_dir)
     assert "test_add_dir/" in json_entities
     assert json_entities["test_add_dir/"]["@type"] == "Dataset"
+    assert json_entities["test_add_dir/"]["name"] == "foo"
+    assert json_entities["test_add_dir/"]["description"] == "foo bar"
 
 
 @pytest.mark.parametrize("cwd", [False, True])
@@ -196,7 +198,7 @@ def test_cli_add_workflow(test_data_dir, helpers, monkeypatch, cwd):
     assert json_entities["sort-and-change-case.ga"]["@type"] == "File"
     # add
     wf_path = crate_dir / "sort-and-change-case.ga"
-    args = ["add", "workflow"]
+    args = ["add", "workflow", "-P", "name=foo", "-P", "description=foo bar"]
     if cwd:
         monkeypatch.chdir(str(crate_dir))
         wf_path = wf_path.relative_to(crate_dir)
@@ -212,6 +214,8 @@ def test_cli_add_workflow(test_data_dir, helpers, monkeypatch, cwd):
         lang_id = f"https://w3id.org/workflowhub/workflow-ro-crate#{lang}"
         assert lang_id in json_entities
         assert json_entities["sort-and-change-case.ga"]["programmingLanguage"]["@id"] == lang_id
+        assert json_entities["sort-and-change-case.ga"]["name"] == "foo"
+        assert json_entities["sort-and-change-case.ga"]["description"] == "foo bar"
 
 
 @pytest.mark.parametrize("cwd", [False, True])
@@ -228,20 +232,27 @@ def test_cli_add_test_metadata(test_data_dir, helpers, monkeypatch, cwd):
     wf_path = crate_dir / "sort-and-change-case.ga"
     assert runner.invoke(cli, ["add", "workflow", "-c", str(crate_dir), "-l", "galaxy", str(wf_path)]).exit_code == 0
     # add test suite
-    result = runner.invoke(cli, ["add", "test-suite", "-c", str(crate_dir)])
+    result = runner.invoke(cli, ["add", "test-suite", "-c", str(crate_dir),
+                                 "-P", "name=foo", "-P", "description=foo bar"])
     assert result.exit_code == 0
     suite_id = result.output.strip()
     json_entities = helpers.read_json_entities(crate_dir)
     assert suite_id in json_entities
+    assert json_entities[suite_id]["name"] == "foo"
+    assert json_entities[suite_id]["description"] == "foo bar"
     # add test instance
-    result = runner.invoke(cli, ["add", "test-instance", "-c", str(crate_dir), suite_id, "http://example.com", "-r", "jobs"])
+    result = runner.invoke(cli, ["add", "test-instance", "-c", str(crate_dir),
+                                 suite_id, "http://example.com", "-r", "jobs",
+                                 "-P", "name=foo", "-P", "description=foo bar"])
     assert result.exit_code == 0
     instance_id = result.output.strip()
     json_entities = helpers.read_json_entities(crate_dir)
     assert instance_id in json_entities
+    assert json_entities[instance_id]["name"] == "foo"
+    assert json_entities[instance_id]["description"] == "foo bar"
     # add test definition
     def_path = crate_dir / def_id
-    args = ["add", "test-definition"]
+    args = ["add", "test-definition", "-P", "name=foo", "-P", "description=foo bar"]
     if cwd:
         monkeypatch.chdir(str(crate_dir))
         def_path = def_path.relative_to(crate_dir)
@@ -253,6 +264,8 @@ def test_cli_add_test_metadata(test_data_dir, helpers, monkeypatch, cwd):
     json_entities = helpers.read_json_entities(crate_dir)
     assert def_id in json_entities
     assert set(json_entities[def_id]["@type"]) == {"File", "TestDefinition"}
+    assert json_entities[def_id]["name"] == "foo"
+    assert json_entities[def_id]["description"] == "foo bar"
     # check extra terms
     metadata_path = crate_dir / helpers.METADATA_FILE_NAME
     with open(metadata_path, "rt") as f:
