diff --git a/tests/test_array.py b/tests/test_array.py
index fe18aff..0601584 100644
--- a/tests/test_array.py
+++ b/tests/test_array.py
@@ -1,29 +1,37 @@
 from datastructs.arrays.SingleDimensionArray import SingleDimensionArray as array
 import unittest
 
+from datastructs.exceptions.custom import (
+                        InvalidArraySize,
+                        InvalidDataType,
+                        InvalidArrayIndex,
+                        InvalidArrayInitializerSize
+                        )
+
+
 class TestArray(unittest.TestCase):
 
 
     def test_1d_Array(self):
-        self.assertRaises(ValueError, array, int, 1, [1,2])
+        self.assertRaises(InvalidArrayInitializerSize, array, int, 1, [1,2])
 
-        self.assertRaises(ValueError, array, int, 2, [1])
+        self.assertRaises(InvalidArrayInitializerSize, array, int, 2, [1])
 
 
-        self.assertRaises(ValueError, array, str, 1, [1])
+        self.assertRaises(InvalidDataType, array, str, 1, [1])
 
-        self.assertRaises(ValueError, array, int, 2, [1,"12"])
+        self.assertRaises(InvalidDataType, array, int, 2, [1,"12"])
 
         ar = array(int, 5, [1, 2, 3, 4, 5])
         ar.update(1, 99)
         self.assertEqual(ar.get(0), 1)
         self.assertEqual(ar.get(1), 99)
 
-        self.assertRaises(ValueError, ar.update, 1, "0")
-        self.assertRaises(IndexError, ar.update, -1, 0)
-        self.assertRaises(IndexError, ar.update, 1000, 0)
-        self.assertRaises(IndexError, ar.get, 1000)
-        self.assertRaises(IndexError, ar.get, -1)
+        self.assertRaises(InvalidDataType, ar.update, 1, "0")
+        self.assertRaises(InvalidArrayIndex, ar.update, -1, 0)
+        self.assertRaises(InvalidArrayIndex, ar.update, 1000, 0)
+        self.assertRaises(InvalidArrayIndex, ar.get, 1000)
+        self.assertRaises(InvalidArrayIndex, ar.get, -1)
 
 
 if __name__ == '__main__':
diff --git a/tests/test_lists.py b/tests/test_lists.py
index 4692215..1cfbd9e 100644
--- a/tests/test_lists.py
+++ b/tests/test_lists.py
@@ -1,12 +1,16 @@
-from datastructs.lists.SingleLinkList import SingleLinkList
 import unittest
+from datastructs.lists.SingleLinkList import SingleLinkList
+from datastructs.exceptions.custom import (
+                                    InvalidDataType,
+                                    LinkedListEmpty
+                                    )
 
 class TestSingleLinkList(unittest.TestCase):
 
     def list_operations(self, custom_list):
-        self.assertRaises(IndexError, custom_list.pop_first_element)
-        self.assertRaises(IndexError, custom_list.get_first_element)
-        self.assertRaises(IndexError, custom_list.get_last_element)
+        self.assertRaises(LinkedListEmpty, custom_list.pop_first_element)
+        self.assertRaises(LinkedListEmpty, custom_list.get_first_element)
+        self.assertRaises(LinkedListEmpty, custom_list.get_last_element)
         self.assertTrue(custom_list.list_empty())
         custom_list.add_to_front(0)
         custom_list.add_to_back(1)
@@ -23,8 +27,8 @@ class TestSingleLinkList(unittest.TestCase):
         self.assertFalse(custom_list.has_element(0))
         self.assertTrue(custom_list.has_element(1))
 
-        self.assertRaises(ValueError, custom_list.add_to_front, "123")
-        self.assertRaises(ValueError, custom_list.add_to_back, "123")
+        self.assertRaises(InvalidDataType, custom_list.add_to_front, "123")
+        self.assertRaises(InvalidDataType, custom_list.add_to_back, "123")
 
     def test_add_remove(self):
         custom_list = SingleLinkList(int)
diff --git a/tests/test_queue.py b/tests/test_queue.py
index 1d52adc..1df34e5 100644
--- a/tests/test_queue.py
+++ b/tests/test_queue.py
@@ -1,20 +1,24 @@
-from datastructs.queues.ListQueue import ListQueue
 import unittest
+from datastructs.queues.ListQueue import ListQueue
+from datastructs.exceptions.custom import (
+                            InvalidDataType,
+                            QueueEmpty
+                            )
 
-class TestArray(unittest.TestCase):
+class TestQueue(unittest.TestCase):
 
 
     def test_list_queue(self):
         queue = ListQueue(int)
 
         self.assertTrue(queue.queue_empty())
-        self.assertRaises(IndexError, queue.dequeue)
-        self.assertRaises(IndexError, queue.next_key)
+        self.assertRaises(QueueEmpty, queue.dequeue)
+        self.assertRaises(QueueEmpty, queue.next_key)
 
         queue.enqueue(1)
         queue.enqueue(2)
         queue.enqueue(3)
-        self.assertRaises(ValueError, queue.enqueue, "4")
+        self.assertRaises(InvalidDataType, queue.enqueue, "4")
 
         self.assertEqual(queue.dequeue(), 1)
         self.assertEqual(queue.next_key(), 2)
diff --git a/tests/test_stack.py b/tests/test_stack.py
index 4b7e91f..fe0b0a6 100644
--- a/tests/test_stack.py
+++ b/tests/test_stack.py
@@ -1,5 +1,9 @@
-from datastructs.stacks.ListStack import ListStack
 import unittest
+from datastructs.stacks.ListStack import ListStack
+from datastructs.exceptions.custom import (
+                    StackUnderFlowException,
+                    InvalidDataType,
+                    ) 
 
 class TestStack(unittest.TestCase):
 
@@ -8,13 +12,14 @@ class TestStack(unittest.TestCase):
         stack = ListStack(int)
 
         self.assertTrue(stack.stack_empty())
-        self.assertRaises(IndexError, stack.pop)
-        self.assertRaises(IndexError, stack.top_elem)
+        self.assertRaises(StackUnderFlowException, stack.pop)
+        self.assertRaises(StackUnderFlowException, stack.top_elem)
 
         stack.push(1)
         stack.push(2)
         stack.push(3)
-        self.assertRaises(ValueError, stack.push, "4")
+
+        self.assertRaises(InvalidDataType, stack.push, "4")
 
         self.assertEqual(stack.pop(), 3)
         self.assertEqual(stack.top_elem(), 2)
