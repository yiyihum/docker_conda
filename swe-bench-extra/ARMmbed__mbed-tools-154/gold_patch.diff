diff --git a/README.md b/README.md
index fdd2e05..eff3449 100644
--- a/README.md
+++ b/README.md
@@ -48,6 +48,10 @@ follows:
 
 ## Installation
 
+`mbed-tools` relies on the Ninja build system and CMake.
+- CMake. [Install version 3.19.0 or newer for all operating systems](https://cmake.org/install/).
+- Ninja. [Install version 1.0 or newer for all operating systems](https://github.com/ninja-build/ninja/wiki/Pre-built-Ninja-packages).
+
 We recommend installing `mbed-tools` in a Python virtual environment to avoid dependency conflicts.
 
 To install the most recent production quality release use:
diff --git a/news/20201210131204.bugfix b/news/20201210131204.bugfix
new file mode 100644
index 0000000..65ae014
--- /dev/null
+++ b/news/20201210131204.bugfix
@@ -0,0 +1,1 @@
+Emit more useful error messages if CMake or Ninja aren't found in PATH.
diff --git a/src/mbed_tools/build/build.py b/src/mbed_tools/build/build.py
index 66822bc..2334bc4 100644
--- a/src/mbed_tools/build/build.py
+++ b/src/mbed_tools/build/build.py
@@ -22,6 +22,7 @@ def build_project(build_dir: pathlib.Path, target: Optional[str] = None) -> None
         build_dir: Path to the CMake build tree.
         target: The CMake target to build (e.g 'install')
     """
+    _check_ninja_found()
     target_flag = ["--target", target] if target is not None else []
     _cmake_wrapper("--build", str(build_dir), *target_flag)
 
@@ -34,6 +35,7 @@ def generate_build_system(source_dir: pathlib.Path, build_dir: pathlib.Path, pro
         build_dir: Path to the CMake build tree.
         profile: The Mbed build profile (develop, debug or release).
     """
+    _check_ninja_found()
     _cmake_wrapper("-S", str(source_dir), "-B", str(build_dir), "-GNinja", f"-DCMAKE_BUILD_TYPE={profile}")
 
 
@@ -41,5 +43,16 @@ def _cmake_wrapper(*cmake_args: str) -> None:
     try:
         logger.debug("Running CMake with args: %s", cmake_args)
         subprocess.run(["cmake", *cmake_args], check=True)
+    except FileNotFoundError:
+        raise MbedBuildError("Could not find CMake. Please ensure CMake is installed and added to PATH.")
     except subprocess.CalledProcessError:
         raise MbedBuildError("CMake invocation failed!")
+
+
+def _check_ninja_found() -> None:
+    try:
+        subprocess.run(["ninja", "--version"], check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
+    except FileNotFoundError:
+        raise MbedBuildError(
+            "Could not find the 'Ninja' build program. Please ensure 'Ninja' is installed and added to PATH."
+        )
