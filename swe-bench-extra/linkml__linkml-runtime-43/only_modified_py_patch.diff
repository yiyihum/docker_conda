diff --git a/linkml_runtime/utils/formatutils.py b/linkml_runtime/utils/formatutils.py
index d1ced86..f43877e 100644
--- a/linkml_runtime/utils/formatutils.py
+++ b/linkml_runtime/utils/formatutils.py
@@ -133,8 +133,9 @@ def remove_empty_items(obj: Any, hide_protected_keys: bool = False, inside: bool
     :return: copy of obj with empty items removed or None if obj itself is "empty"
     """
     if is_list(obj):
+        # for discussion of logic, see: https://github.com/linkml/linkml-runtime/issues/42
         obj_list = [e for e in [remove_empty_items(l, hide_protected_keys=hide_protected_keys, inside=True)
-                                for l in as_json_obj(obj)] if not is_empty(e)]
+                                for l in obj if l != '_root'] if not is_empty(e)]
         return obj_list if not inside or not is_empty(obj_list) else None
     elif is_dict(obj):
         obj_dict = {k: v for k, v in [(k2, remove_empty_items(v2, hide_protected_keys=hide_protected_keys, inside=True))
@@ -146,7 +147,7 @@ def remove_empty_items(obj: Any, hide_protected_keys: bool = False, inside: bool
             enum_text = list(obj_dict.values())[0].get('text', None)
             if enum_text is not None:
                 return enum_text
-        if hide_protected_keys and len(obj_dict) == 1 and list(obj_dict.keys())[0].startswith('_'):
+        if hide_protected_keys and len(obj_dict) == 1 and str(list(obj_dict.keys())[0]).startswith('_'):
             inner_element = list(obj_dict.values())[0]
             if isinstance(inner_element, dict):
                 obj_dict = inner_element

