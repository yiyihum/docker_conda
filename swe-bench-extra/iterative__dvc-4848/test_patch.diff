diff --git a/tests/func/test_version.py b/tests/func/test_version.py
--- a/tests/func/test_version.py
+++ b/tests/func/test_version.py
@@ -11,4 +11,6 @@ def test_(tmp_dir, dvc, scm, caplog):
     assert re.search(f"Platform: {PYTHON_VERSION_REGEX} on .*", caplog.text)
     assert re.search(r"Supports: .*", caplog.text)
     assert re.search(r"Cache types: .*", caplog.text)
+    assert re.search(r"Caches: local", caplog.text)
+    assert re.search(r"Remotes: None", caplog.text)
     assert "Repo: dvc, git" in caplog.text
diff --git a/tests/unit/test_info.py b/tests/unit/test_info.py
--- a/tests/unit/test_info.py
+++ b/tests/unit/test_info.py
@@ -53,6 +53,38 @@ def test_info_in_broken_git_repo(tmp_dir, dvc, scm, caplog):
     assert "Repo: dvc, git (broken)" in dvc_info
 
 
+def test_caches(tmp_dir, dvc, caplog):
+    tmp_dir.add_remote(
+        name="sshcache", url="ssh://example.com/path", default=False
+    )
+    with tmp_dir.dvc.config.edit() as conf:
+        conf["cache"]["ssh"] = "sshcache"
+
+    dvc_info = get_dvc_info()
+
+    # Order of cache types is runtime dependent
+    assert re.search("Caches: (local, ssh|ssh, local)", dvc_info)
+
+
+def test_remotes_empty(tmp_dir, dvc, caplog):
+    # No remotes are configured
+    dvc_info = get_dvc_info()
+
+    assert "Remotes: None" in dvc_info
+
+
+def test_remotes(tmp_dir, dvc, caplog):
+    tmp_dir.add_remote(name="server", url="ssh://localhost", default=False)
+    tmp_dir.add_remote(
+        name="r1", url="azure://example.com/path", default=False
+    )
+    tmp_dir.add_remote(name="r2", url="remote://server/path", default=False)
+
+    dvc_info = get_dvc_info()
+
+    assert re.search("Remotes: (ssh, azure|azure, ssh)", dvc_info)
+
+
 @pytest.mark.skipif(psutil is None, reason="No psutil.")
 def test_fs_info_in_repo(tmp_dir, dvc, caplog):
     os.mkdir(dvc.cache.local.cache_dir)
