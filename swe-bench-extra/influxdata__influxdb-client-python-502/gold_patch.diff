diff --git a/CHANGELOG.md b/CHANGELOG.md
index 13c59ff..d84e990 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -2,6 +2,7 @@
 
 ### Features
 1. [#498](https://github.com/influxdata/influxdb-client-python/pull/498): Add possibility to update user's password by `users_api`
+1. [#502](https://github.com/influxdata/influxdb-client-python/pull/502): Add `FluxRecord.row` with response data stored in array
 
 ### Bug Fixes
 1. [#497](https://github.com/influxdata/influxdb-client-python/pull/497): Parsing InfluxDB response with new line character in CSV column [async/await]
diff --git a/influxdb_client/client/flux_csv_parser.py b/influxdb_client/client/flux_csv_parser.py
index 4756d32..db4c4c7 100644
--- a/influxdb_client/client/flux_csv_parser.py
+++ b/influxdb_client/client/flux_csv_parser.py
@@ -4,6 +4,7 @@
 import base64
 import codecs
 import csv as csv_parser
+import warnings
 from enum import Enum
 from typing import List
 
@@ -262,6 +263,7 @@ class FluxCsvParser(object):
             column_name = fluxColumn.label
             str_val = csv[fluxColumn.index + 1]
             record.values[column_name] = self._to_value(str_val, fluxColumn)
+            record.row.append(record.values[column_name])
 
         return record
 
@@ -321,6 +323,13 @@ class FluxCsvParser(object):
     @staticmethod
     def add_column_names_and_tags(table, csv):
         """Add labels to columns."""
+        if len(csv) != len(set(csv)):
+            message = f"""The response contains columns with duplicated names: '{csv}'.
+
+You should use the 'record.row' to access your data instead of 'record.values' dictionary.
+"""
+            warnings.warn(message, UserWarning)
+            print(message)
         i = 1
         for column in table.columns:
             column.label = csv[i]
diff --git a/influxdb_client/client/flux_table.py b/influxdb_client/client/flux_table.py
index 5ae5490..4232476 100644
--- a/influxdb_client/client/flux_table.py
+++ b/influxdb_client/client/flux_table.py
@@ -101,6 +101,7 @@ class FluxRecord(FluxStructure):
             values = {}
         self.table = table
         self.values = values
+        self.row = []
 
     def get_start(self):
         """Get '_start' value."""
