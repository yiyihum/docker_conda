diff --git a/jwql/utils/utils.py b/jwql/utils/utils.py
index 9f3f4102..dc9eb1f1 100644
--- a/jwql/utils/utils.py
+++ b/jwql/utils/utils.py
@@ -29,6 +29,7 @@ from jwql.utils import permissions
 
 __location__ = os.path.realpath(os.path.join(os.getcwd(), os.path.dirname(__file__)))
 
+FILE_SUFFIX_TYPES = ['uncal', 'cal', 'rateints', 'rate', 'trapsfilled', 'uncal']
 JWST_INSTRUMENTS = sorted(['NIRISS', 'NIRCam', 'NIRSpec', 'MIRI', 'FGS'])
 JWST_DATAPRODUCTS = ['IMAGE', 'SPECTRUM', 'SED', 'TIMESERIES', 'VISIBILITY',
                      'EVENTLIST', 'CUBE', 'CATALOG', 'ENGINEERING', 'NULL']
@@ -53,6 +54,11 @@ MONITORS = {
 NIRCAM_SHORTWAVE_DETECTORS = ['NRCA1', 'NRCA2', 'NRCA3', 'NRCA4',
                               'NRCB1', 'NRCB2', 'NRCB3', 'NRCB4']
 NIRCAM_LONGWAVE_DETECTORS = ['NRCA5', 'NRCB5']
+INSTRUMENTS_SHORTHAND = {'gui': 'FGS',
+                         'mir': 'MIRI',
+                         'nis': 'NIRISS',
+                         'nrc': 'NIRCam',
+                         'nrs': 'NIRSpec'}
 
 
 def ensure_dir_exists(fullpath):
@@ -100,17 +106,23 @@ def filename_parser(filename):
     """
     filename = os.path.basename(filename)
 
+    file_root_name = (len(filename.split('.')) < 2)
+
+    regex_string_to_compile = r"[a-z]+" \
+                               "(?P<program_id>\d{5})"\
+                               "(?P<observation>\d{3})"\
+                               "(?P<visit>\d{3})"\
+                               "_(?P<visit_group>\d{2})"\
+                               "(?P<parallel_seq_id>\d{1})"\
+                               "(?P<activity>\w{2})"\
+                               "_(?P<exposure_id>\d+)"\
+                               "_(?P<detector>\w+)"
+
+    if not file_root_name:
+        regex_string_to_compile += r"_(?P<suffix>{}).*".format('|'.join(FILE_SUFFIX_TYPES))
+
     elements = \
-        re.compile(r"[a-z]+"
-                   "(?P<program_id>\d{5})"
-                   "(?P<observation>\d{3})"
-                   "(?P<visit>\d{3})"
-                   "_(?P<visit_group>\d{2})"
-                   "(?P<parallel_seq_id>\d{1})"
-                   "(?P<activity>\w{2})"
-                   "_(?P<exposure_id>\d+)"
-                   "_(?P<detector>\w+)"
-                   "_(?P<suffix>\w+).*")
+        re.compile(regex_string_to_compile)
 
     jwst_file = elements.match(filename)
 
diff --git a/jwql/website/apps/jwql/views.py b/jwql/website/apps/jwql/views.py
index 52b8ec83..0f4dc375 100644
--- a/jwql/website/apps/jwql/views.py
+++ b/jwql/website/apps/jwql/views.py
@@ -44,6 +44,7 @@ from .data_containers import get_header_info
 from .data_containers import get_image_info
 from .data_containers import get_proposal_info
 from .data_containers import thumbnails
+from .forms import FileSearchForm
 from jwql.utils.utils import get_config, JWST_INSTRUMENTS, MONITORS
 
 
@@ -172,10 +173,20 @@ def home(request):
     HttpResponse object
         Outgoing response sent to the webpage
     """
+
+    # Create a form instance and populate it with data from the request
+    form = FileSearchForm(request.POST or None)
+
+    # If this is a POST request, we need to process the form data
+    if request.method == 'POST':
+        if form.is_valid():
+            return form.redirect_to_files()
+
     template = 'home.html'
     context = {'inst': '',
                'inst_list': JWST_INSTRUMENTS,
-               'tools': MONITORS}
+               'tools': MONITORS,
+               'form': form}
 
     return render(request, template, context)
 

