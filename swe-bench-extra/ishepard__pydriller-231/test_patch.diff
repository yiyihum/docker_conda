diff --git a/tests/test_commit.py b/tests/test_commit.py
index 0e89dcf..daef686 100644
--- a/tests/test_commit.py
+++ b/tests/test_commit.py
@@ -44,10 +44,8 @@ def test_equal(repo: Git):
 def test_filename():
     diff_and_sc = {
         'diff': '',
-        'source_code': '',
-        'source_code_before': '',
-        'content': '',
-        'content_before': ''
+        'content': b'',
+        'content_before': b''
     }
     m1 = ModifiedFile('dspadini/pydriller/myfile.py',
                       'dspadini/pydriller/mynewfile.py',
@@ -66,15 +64,13 @@ def test_filename():
 
 
 def test_metrics_python():
-    with open('test-repos/lizard/git_repository.py') as f:
-        sc = f.read()
+    with open('test-repos/lizard/git_repository.py', 'rb') as f:
+        content = f.read()
 
     diff_and_sc = {
         'diff': '',
-        'source_code': sc,
-        'source_code_before': sc,
-        'content': sc,
-        'content_before': sc
+        'content': content,
+        'content_before': content
     }
 
     m1 = ModifiedFile('test-repos/lizard/git_repository.py',
@@ -142,15 +138,13 @@ def test_changed_methods():
 
 
 def test_metrics_cpp():
-    with open('test-repos/lizard/FileCPP.cpp') as f:
-        sc = f.read()
+    with open('test-repos/lizard/FileCPP.cpp', 'rb') as f:
+        content = f.read()
 
     diff_and_sc = {
         'diff': '',
-        'source_code': sc,
-        'source_code_before': sc,
-        'content': sc,
-        'content_before': sc
+        'content': content,
+        'content_before': content
     }
 
     m1 = ModifiedFile('test-repos/lizard/FileCPP.cpp',
@@ -165,15 +159,13 @@ def test_metrics_cpp():
 
 
 def test_metrics_java():
-    with open('test-repos/lizard/FileJava.java') as f:
-        sc = f.read()
+    with open('test-repos/lizard/FileJava.java', 'rb') as f:
+        content = f.read()
 
     diff_and_sc = {
         'diff': '',
-        'source_code': sc,
-        'source_code_before': sc,
-        'content': sc,
-        'content_before': sc
+        'content': content,
+        'content_before': content
     }
 
     m1 = ModifiedFile('test-repos/lizard/FileJava.java',
@@ -188,14 +180,12 @@ def test_metrics_java():
 
 
 def test_metrics_not_supported_file():
-    sc = 'asd !&%@*&^@\n jjdkj'
+    content = b'asd !&%@*&^@\n jjdkj'
 
     diff_and_sc = {
         'diff': '',
-        'source_code': sc,
-        'source_code_before': sc,
-        'content': sc,
-        'content_before': sc
+        'content': content,
+        'content_before': content
     }
 
     m1 = ModifiedFile('test-repos/lizard/NotSupported.pdf',
@@ -319,7 +309,7 @@ def test_content_before_complete(repo: Git):
     m1 = repo.get_commit('ca1f75455f064410360bc56218d0418221cf9484').modified_files[0]
 
     with open('test-repos/source_code_before_commit/'
-              'sc_A_ca1f75455f064410360bc56218d0418221cf9484.txt') as f:
+              'sc_A_ca1f75455f064410360bc56218d0418221cf9484.txt', 'rb') as f:
         sc = f.read()
 
     assert m1.content == sc
@@ -328,7 +318,7 @@ def test_content_before_complete(repo: Git):
     old_sc = sc
     with open(
             'test-repos/source_code_before_commit/'
-            'sc_A_022ebf5fba835c6d95e99eaccc2d85b3db5a2ec0.txt') as f:
+            'sc_A_022ebf5fba835c6d95e99eaccc2d85b3db5a2ec0.txt', 'rb') as f:
         sc = f.read()
 
     m1 = repo.get_commit('022ebf5fba835c6d95e99eaccc2d85b3db5a2ec0').modified_files[0]
diff --git a/tests/test_git_repository.py b/tests/test_git_repository.py
index aaa370b..eeba081 100644
--- a/tests/test_git_repository.py
+++ b/tests/test_git_repository.py
@@ -244,7 +244,7 @@ def test_should_detail_a_commit(repo: Git):
 
     assert commit.modified_files[0].new_path == "Matricula.java"
     assert commit.modified_files[0].diff.startswith("@@ -0,0 +1,62 @@\n+package model;") is True
-    assert commit.modified_files[0].content.startswith("package model;") is True
+    assert commit.modified_files[0].content.decode().startswith("package model;") is True   # type: ignore[attr-defined]
 
     with catch_warnings(record=True) as w:
         assert commit.modified_files[0].source_code.startswith("package model;") is True
