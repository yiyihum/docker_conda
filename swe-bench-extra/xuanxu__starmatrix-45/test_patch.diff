diff --git a/src/starmatrix/tests/dtds/test_strolger.py b/src/starmatrix/tests/dtds/test_strolger.py
new file mode 100644
index 0000000..b5c68ab
--- /dev/null
+++ b/src/starmatrix/tests/dtds/test_strolger.py
@@ -0,0 +1,26 @@
+import pytest
+from starmatrix.dtds import Strolger
+
+
+def test_parameters_initialization():
+    strolger = Strolger(1000, 2000, 3000)
+    assert strolger.psi == 1000
+    assert strolger.omega == 2000
+    assert strolger.alpha == 3000
+
+
+def test_has_description():
+    assert Strolger(10, 10, 10).description() is not None
+
+
+def test_is_normalized():
+    dtd = Strolger(6000, 6000, -2)
+    sample_t = 6
+    dtd_point = dtd.at_time(sample_t)
+    assert dtd_point > 0
+    assert dtd_point == dtd.phi(sample_t) * dtd.normalization_rate()
+
+
+def test_normalization_rate_uses_hubble_efficiency():
+    dtd = Strolger(6000, 6000, -2)
+    assert dtd.normalization_rate() == 1.03e-3 / dtd.phi_integrated()
diff --git a/src/starmatrix/tests/test_dtds.py b/src/starmatrix/tests/test_dtds.py
index 25cf0fc..5e60cca 100644
--- a/src/starmatrix/tests/test_dtds.py
+++ b/src/starmatrix/tests/test_dtds.py
@@ -14,6 +14,7 @@ from starmatrix.dtds import dtd_wide_dd_1
 from starmatrix.dtds import dtd_sd_chandra
 from starmatrix.dtds import dtd_sd_subchandra
 from starmatrix.dtds import dtd_chen
+from starmatrix.dtds import dtds_strolger
 
 
 @pytest.fixture
@@ -31,10 +32,13 @@ def test_dtds_presence(available_dtds):
 
 def test_select_dtd(available_dtds):
     dtds = [dtd_ruiz_lapuente, dtd_maoz_graur, dtd_castrillo, dtd_greggio, dtd_chen,
-            dtd_close_dd_04, dtd_close_dd_1, dtd_wide_dd_04, dtd_wide_dd_1, dtd_sd_chandra, dtd_sd_subchandra]
+            dtd_close_dd_04, dtd_close_dd_1, dtd_wide_dd_04, dtd_wide_dd_1, dtd_sd_chandra, dtd_sd_subchandra,
+            dtds_strolger["fit_1"], dtds_strolger["fit_2"], dtds_strolger["fit_3"], dtds_strolger["fit_4"], dtds_strolger["optimized"]]
+
+    assert len(available_dtds) == len(dtds)
 
     for i in range(len(available_dtds)):
-        times = [0, 0.001, 0.04, 0.1, 0.4, 2, 9.] + list(np.random.rand(5)) + list(np.random.rand(5) * 9)
+        times = [0, 0.001, 0.04, 0.1, 0.4, 1, 2, 9.] + list(np.random.rand(5)) + list(np.random.rand(5) * 9)
         for time in times:
             assert select_dtd(available_dtds[i])(time) == dtds[i](time)
 
