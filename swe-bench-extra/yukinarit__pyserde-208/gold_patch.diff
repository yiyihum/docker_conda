diff --git a/pyproject.toml b/pyproject.toml
index c19a5cf..51ec0ca 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -54,7 +54,8 @@ pytest-cov = "*"
 pytest-watch = "*"
 pytest-flake8 = "*"
 coverage = "==4.5.4"
-pdoc = { version = "~=8" }
+pdoc = "~=11"
+pygments = "<=2.11.2"
 mypy = { version = "==0.931", markers = "platform_python_implementation!='PyPy'" }
 more-itertools = "~=8.6.0"
 pre-commit = "==v2.10.1"
diff --git a/serde/compat.py b/serde/compat.py
index 8c1af36..b5e2143 100644
--- a/serde/compat.py
+++ b/serde/compat.py
@@ -121,6 +121,11 @@ def typename(typ) -> str:
         else:
             return 'Union'
     elif is_list(typ):
+        # Workaround for python 3.7.
+        # get_args for the bare List returns parameter T.
+        if typ is List:
+            return 'List'
+
         args = type_args(typ)
         if args:
             et = typename(args[0])
@@ -128,6 +133,11 @@ def typename(typ) -> str:
         else:
             return 'List'
     elif is_set(typ):
+        # Workaround for python 3.7.
+        # get_args for the bare Set returns parameter T.
+        if typ is Set:
+            return 'Set'
+
         args = type_args(typ)
         if args:
             et = typename(args[0])
@@ -135,6 +145,11 @@ def typename(typ) -> str:
         else:
             return 'Set'
     elif is_dict(typ):
+        # Workaround for python 3.7.
+        # get_args for the bare Dict returns parameter K, V.
+        if typ is Dict:
+            return 'Dict'
+
         args = type_args(typ)
         if args and len(args) == 2:
             kt = typename(args[0])
diff --git a/serde/de.py b/serde/de.py
index e76660b..3416505 100644
--- a/serde/de.py
+++ b/serde/de.py
@@ -562,7 +562,9 @@ class Renderer:
             res = self.default(arg, res)
 
         if self.custom and not arg.deserializer:
-            return self.custom_class_deserializer(arg, res)
+            # Rerender the code for default deserializer.
+            default = Renderer(self.func, self.cls, None).render(arg)
+            return self.custom_class_deserializer(arg, default)
         else:
             return res
 
