diff --git a/tests/test_context.py b/tests/test_context.py
index bb9694a..45cffbc 100644
--- a/tests/test_context.py
+++ b/tests/test_context.py
@@ -1,4 +1,4 @@
-from os import path
+from os import getcwd, path
 from unittest.mock import sentinel
 from sceptre.context import SceptreContext
 
@@ -9,7 +9,7 @@ class TestSceptreContext(object):
         self.config_path = "config"
         self.config_file = "config.yaml"
 
-    def test_context_with_path(self):
+    def test_context_with_path_in_cwd(self):
         self.context = SceptreContext(
             project_path="project_path/to/sceptre",
             command_path="command-path",
@@ -21,9 +21,39 @@ class TestSceptreContext(object):
             ignore_dependencies=sentinel.ignore_dependencies,
         )
 
-        sentinel.project_path = "project_path/to/sceptre"
+        sentinel.project_path = f"{getcwd()}/project_path/to/sceptre"
         assert self.context.project_path.replace(path.sep, "/") == sentinel.project_path
 
+    def test_context_with_relative_path(self):
+        self.context = SceptreContext(
+            project_path="./project_path/to/sceptre",
+            command_path="command-path",
+            command_params=sentinel.command_params,
+            user_variables=sentinel.user_variables,
+            options=sentinel.options,
+            output_format=sentinel.output_format,
+            no_colour=sentinel.no_colour,
+            ignore_dependencies=sentinel.ignore_dependencies,
+        )
+
+        expected = f"{getcwd()}/project_path/to/sceptre"
+        assert self.context.project_path.replace(path.sep, "/") == expected
+
+    def test_context_with_absolute_path(self):
+        self.context = SceptreContext(
+            project_path=f"{getcwd()}/project_path/to/sceptre",
+            command_path="command-path",
+            command_params=sentinel.command_params,
+            user_variables=sentinel.user_variables,
+            options=sentinel.options,
+            output_format=sentinel.output_format,
+            no_colour=sentinel.no_colour,
+            ignore_dependencies=sentinel.ignore_dependencies,
+        )
+
+        expected = f"{getcwd()}/project_path/to/sceptre"
+        assert self.context.project_path.replace(path.sep, "/") == expected
+
     def test_full_config_path_returns_correct_path(self):
         context = SceptreContext(
             project_path="project_path",
@@ -36,7 +66,7 @@ class TestSceptreContext(object):
             ignore_dependencies=sentinel.ignore_dependencies,
         )
 
-        full_config_path = path.join("project_path", self.config_path)
+        full_config_path = path.join(f"{getcwd()}/project_path", self.config_path)
         assert context.full_config_path() == full_config_path
 
     def test_full_command_path_returns_correct_path(self):
@@ -50,7 +80,9 @@ class TestSceptreContext(object):
             no_colour=sentinel.no_colour,
             ignore_dependencies=sentinel.ignore_dependencies,
         )
-        full_command_path = path.join("project_path", self.config_path, "command")
+        full_command_path = path.join(
+            f"{getcwd()}/project_path", self.config_path, "command"
+        )
 
         assert context.full_command_path() == full_command_path
 
@@ -65,7 +97,7 @@ class TestSceptreContext(object):
             no_colour=sentinel.no_colour,
             ignore_dependencies=sentinel.ignore_dependencies,
         )
-        full_templates_path = path.join("project_path", self.templates_path)
+        full_templates_path = path.join(f"{getcwd()}/project_path", self.templates_path)
         assert context.full_templates_path() == full_templates_path
 
     def test_clone__returns_full_clone_of_context(self):
