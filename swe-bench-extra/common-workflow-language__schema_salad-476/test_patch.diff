diff --git a/schema_salad/tests/test_python_codegen.py b/schema_salad/tests/test_python_codegen.py
index 6f0dee4..dcb1179 100644
--- a/schema_salad/tests/test_python_codegen.py
+++ b/schema_salad/tests/test_python_codegen.py
@@ -1,7 +1,7 @@
 import inspect
 import os
 from pathlib import Path
-from typing import Any, Dict, List, cast
+from typing import Any, Dict, List, Optional, cast
 
 import schema_salad.metaschema as cg_metaschema
 from schema_salad import codegen
@@ -35,7 +35,12 @@ def test_meta_schema_gen_up_to_date(tmp_path: Path) -> None:
         assert f.read() == inspect.getsource(cg_metaschema)
 
 
-def python_codegen(file_uri: str, target: Path) -> None:
+def python_codegen(
+    file_uri: str,
+    target: Path,
+    parser_info: Optional[str] = None,
+    package: Optional[str] = None,
+) -> None:
     document_loader, avsc_names, schema_metadata, metaschema_loader = load_schema(
         file_uri
     )
@@ -50,4 +55,30 @@ def python_codegen(file_uri: str, target: Path) -> None:
         schema_metadata,
         document_loader,
         target=str(target),
+        parser_info=parser_info,
+        package=package,
     )
+
+
+def test_default_parser_info(tmp_path: Path) -> None:
+    src_target = tmp_path / "src.py"
+    python_codegen(metaschema_file_uri, src_target)
+    assert os.path.exists(src_target)
+    with open(src_target) as f:
+        assert 'def parser_info() -> str:\n    return "org.w3id.cwl.salad"' in f.read()
+
+
+def test_parser_info(tmp_path: Path) -> None:
+    src_target = tmp_path / "src.py"
+    python_codegen(metaschema_file_uri, src_target, parser_info="cwl")
+    assert os.path.exists(src_target)
+    with open(src_target) as f:
+        assert 'def parser_info() -> str:\n    return "cwl"' in f.read()
+
+
+def test_use_of_package_for_parser_info(tmp_path: Path) -> None:
+    src_target = tmp_path / "src.py"
+    python_codegen(metaschema_file_uri, src_target, package="cwl")
+    assert os.path.exists(src_target)
+    with open(src_target) as f:
+        assert 'def parser_info() -> str:\n    return "cwl"' in f.read()
