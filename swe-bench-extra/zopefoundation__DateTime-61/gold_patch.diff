diff --git a/CHANGES.rst b/CHANGES.rst
index 3ee820c..082d109 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -7,6 +7,9 @@ Changelog
 - Fix ``UnknownTimeZoneError`` when unpickling ``DateTime.DateTime().asdatetime()``.
   (`#58 <https://github.com/zopefoundation/DateTime/issues/58>`_)
 
+- Repair equality comparison between DateTime instances and other types.
+  (`#60 <https://github.com/zopefoundation/DateTime/issues/60>`_)
+
 
 5.3 (2023-11-14)
 ----------------
diff --git a/src/DateTime/DateTime.py b/src/DateTime/DateTime.py
index 1835705..8e1ec6d 100644
--- a/src/DateTime/DateTime.py
+++ b/src/DateTime/DateTime.py
@@ -1250,8 +1250,10 @@ class DateTime:
             return True
         if isinstance(t, (float, int)):
             return self._micros > long(t * 1000000)
-        else:
+        try:
             return self._micros > t._micros
+        except AttributeError:
+            return self._micros > t
 
     __gt__ = greaterThan
 
@@ -1271,8 +1273,10 @@ class DateTime:
             return True
         if isinstance(t, (float, int)):
             return self._micros >= long(t * 1000000)
-        else:
+        try:
             return self._micros >= t._micros
+        except AttributeError:
+            return self._micros >= t
 
     __ge__ = greaterThanEqualTo
 
@@ -1291,8 +1295,10 @@ class DateTime:
             return False
         if isinstance(t, (float, int)):
             return self._micros == long(t * 1000000)
-        else:
+        try:
             return self._micros == t._micros
+        except AttributeError:
+            return self._micros == t
 
     def notEqualTo(self, t):
         """Compare this DateTime object to another DateTime object
@@ -1336,8 +1342,10 @@ class DateTime:
             return False
         if isinstance(t, (float, int)):
             return self._micros < long(t * 1000000)
-        else:
+        try:
             return self._micros < t._micros
+        except AttributeError:
+            return self._micros < t
 
     __lt__ = lessThan
 
@@ -1356,8 +1364,10 @@ class DateTime:
             return False
         if isinstance(t, (float, int)):
             return self._micros <= long(t * 1000000)
-        else:
+        try:
             return self._micros <= t._micros
+        except AttributeError:
+            return self._micros <= t
 
     __le__ = lessThanEqualTo
 
