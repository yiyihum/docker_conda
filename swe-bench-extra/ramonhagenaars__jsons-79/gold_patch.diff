diff --git a/jsons/_load_impl.py b/jsons/_load_impl.py
index 4cc1ffd..b8055b4 100644
--- a/jsons/_load_impl.py
+++ b/jsons/_load_impl.py
@@ -103,6 +103,9 @@ def _do_load(json_obj: object,
              cls: type,
              initial: bool,
              **kwargs):
+    cls_name = get_class_name(cls, fully_qualified=True)
+    if deserializer is None:
+        raise DeserializationError('No deserializer for type "{}"'.format(cls_name), json_obj, cls)
     try:
         result = deserializer(json_obj, cls, **kwargs)
         validate(result, cls, kwargs['fork_inst'])
@@ -110,7 +113,8 @@ def _do_load(json_obj: object,
         clear()
         if isinstance(err, JsonsError):
             raise
-        raise DeserializationError(str(err), json_obj, cls)
+        message = 'Could not deserialize value "{}" into "{}". {}'.format(json_obj, cls_name, err)
+        raise DeserializationError(message, json_obj, cls)
     else:
         if initial:
             # Clear all lru caches right before returning the initial call.
diff --git a/jsons/deserializers/default_primitive.py b/jsons/deserializers/default_primitive.py
index 3110904..2223957 100644
--- a/jsons/deserializers/default_primitive.py
+++ b/jsons/deserializers/default_primitive.py
@@ -17,6 +17,6 @@ def default_primitive_deserializer(obj: object,
         try:
             result = cls(obj)
         except ValueError:
-            raise DeserializationError('Could not cast {} into {}'
+            raise DeserializationError('Could not cast "{}" into "{}"'
                                        .format(obj, cls.__name__), obj, cls)
     return result
diff --git a/jsons/serializers/default_primitive.py b/jsons/serializers/default_primitive.py
index ee24f9c..6fa0a59 100644
--- a/jsons/serializers/default_primitive.py
+++ b/jsons/serializers/default_primitive.py
@@ -17,6 +17,6 @@ def default_primitive_serializer(obj: object,
         try:
             result = cls(obj)
         except ValueError:
-            raise SerializationError('Could not cast {} into {}'
+            raise SerializationError('Could not cast "{}" into "{}"'
                                      .format(obj, cls.__name__))
     return result
