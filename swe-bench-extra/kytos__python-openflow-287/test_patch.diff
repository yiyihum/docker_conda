diff --git a/tests/v0x04/test_controller2switch/test_multipart_reply.py b/tests/v0x04/test_controller2switch/test_multipart_reply.py
index 814fccd..3b28cf1 100644
--- a/tests/v0x04/test_controller2switch/test_multipart_reply.py
+++ b/tests/v0x04/test_controller2switch/test_multipart_reply.py
@@ -1,16 +1,36 @@
 """MultipartReply message test."""
-from pyof.v0x04.controller2switch.multipart_reply import MultipartReply
-from tests.test_struct import TestStruct
 
+from pyof.v0x04.controller2switch.common import (MeterConfig, MultipartTypes)
+from pyof.v0x04.controller2switch.meter_mod import (MeterFlags, Meter,
+                                                    MeterBandDrop,
+                                                    MeterBandDscpRemark,
+                                                    ListOfMeterBandHeader)
+from pyof.v0x04.controller2switch.multipart_reply import (MultipartReply,
+                                                          MultipartReplyFlags)
+from tests.v0x04.test_struct import TestStruct
 
-class TestMultipartReply(TestStruct):
-    """Test the MultipartReply message."""
+class TestTableFeatures(TestStruct):
+    """"""
 
     @classmethod
     def setUpClass(cls):
         """Configure raw file and its object in parent class (TestDump)."""
         super().setUpClass()
-        super().set_raw_dump_file('v0x04', 'ofpt_multipart_reply')
-        super().set_raw_dump_object(MultipartReply, xid=3, multipart_type=0,
-                                    flags=1, body=0)
+        super().set_message(MultipartReply, xid=16,
+                            multipart_type=MultipartTypes.OFPMP_METER_CONFIG,
+                            flags=MultipartReplyFlags.OFPMPF_REPLY_MORE,
+                            body=cls.meter_config_instance())
         super().set_minimum_size(16)
+
+    @classmethod
+    def meter_config_instance(cls):
+        """Method used to create a MeterConfig instance."""
+        return MeterConfig(bands=cls.list_of_meters())
+
+    @staticmethod
+    def list_of_meters():
+        """Method used to instantiate a ListOfMeterBandHeader with some instances."""
+        meters = [MeterBandDrop(rate=6, burst_size=3),
+                  MeterBandDscpRemark(rate=1,burst_size=4,prec_level=2),
+                  MeterBandDrop(rate=9, burst_size=1)]
+        return ListOfMeterBandHeader(items=[meters])
