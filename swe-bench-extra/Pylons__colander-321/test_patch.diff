diff --git a/colander/tests/test_colander.py b/colander/tests/test_colander.py
index 12b904e..0d911d7 100644
--- a/colander/tests/test_colander.py
+++ b/colander/tests/test_colander.py
@@ -1752,6 +1752,14 @@ class TestInteger(unittest.TestCase):
         result = typ.serialize(node, val)
         self.assertEqual(result, colander.null)
 
+    def test_serialize_none(self):
+        import colander
+
+        node = DummySchemaNode(None)
+        typ = self._makeOne()
+        result = typ.serialize(node, None)
+        self.assertEqual(result, colander.null)
+
     def test_deserialize_emptystring(self):
         import colander
 
@@ -1812,6 +1820,21 @@ class TestFloat(unittest.TestCase):
         result = typ.serialize(node, val)
         self.assertEqual(result, colander.null)
 
+    def test_serialize_none(self):
+        import colander
+
+        node = DummySchemaNode(None)
+        typ = self._makeOne()
+        result = typ.serialize(node, None)
+        self.assertEqual(result, colander.null)
+
+    def test_serialize_zero(self):
+        val = 0
+        node = DummySchemaNode(None)
+        typ = self._makeOne()
+        result = typ.serialize(node, val)
+        self.assertEqual(result, '0.0')
+
     def test_serialize_emptystring(self):
         import colander
 
@@ -1865,6 +1888,21 @@ class TestDecimal(unittest.TestCase):
         result = typ.serialize(node, val)
         self.assertEqual(result, colander.null)
 
+    def test_serialize_none(self):
+        import colander
+
+        node = DummySchemaNode(None)
+        typ = self._makeOne()
+        result = typ.serialize(node, None)
+        self.assertEqual(result, colander.null)
+
+    def test_serialize_zero(self):
+        val = 0
+        node = DummySchemaNode(None)
+        typ = self._makeOne()
+        result = typ.serialize(node, val)
+        self.assertEqual(result, '0')
+
     def test_serialize_emptystring(self):
         import colander
 
