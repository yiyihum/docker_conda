diff --git a/tests/language_specific/english/test_english_language_generator.py b/tests/language_specific/english/test_english_language_generator.py
index 08e58758..2c81e02c 100644
--- a/tests/language_specific/english/test_english_language_generator.py
+++ b/tests/language_specific/english/test_english_language_generator.py
@@ -21,8 +21,13 @@ from adam.ontology.phase1_ontology import (
     DAD,
     PUT,
     GOAL,
+    IS_SPEAKER,
+)
+from adam.ontology.phase1_spatial_relations import (
+    INTERIOR,
+    EXTERIOR_BUT_IN_CONTACT,
+    Direction,
 )
-from adam.ontology.phase1_spatial_relations import INTERIOR
 from adam.random_utils import FixedIndexChooser
 from adam.situation import SituationAction, SituationObject
 from adam.situation.high_level_semantics_situation import HighLevelSemanticsSituation
@@ -118,6 +123,41 @@ def test_mom_put_a_ball_on_a_table():
     ).as_token_sequence() == ("Mom", "puts", "a", "ball", "on", "a", "table")
 
 
+def test_mom_put_a_ball_on_a_table_using_i():
+    mom = SituationObject(ontology_node=MOM, properties=[IS_SPEAKER])
+    ball = SituationObject(ontology_node=BALL)
+    table = SituationObject(ontology_node=TABLE)
+    situation = HighLevelSemanticsSituation(
+        ontology=GAILA_PHASE_1_ONTOLOGY,
+        objects=[mom, ball, table],
+        relations=[],
+        actions=[
+            SituationAction(
+                PUT,
+                (
+                    (AGENT, mom),
+                    (THEME, ball),
+                    (
+                        GOAL,
+                        Region(
+                            reference_object=table,
+                            distance=EXTERIOR_BUT_IN_CONTACT,
+                            direction=Direction(
+                                positive=True,
+                                relative_to_axis="Vertical axis of table "
+                                "relative to earth",
+                            ),
+                        ),
+                    ),
+                ),
+            )
+        ],
+    )
+    assert only(
+        _SIMPLE_GENERATOR.generate_language(situation, FixedIndexChooser(0))
+    ).as_token_sequence() == ("I", "put", "a", "ball", "on", "a", "table")
+
+
 def test_dad_put_a_cookie_in_a_box():
     dad = SituationObject(DAD)
     cookie = SituationObject(COOKIE)
@@ -141,3 +181,28 @@ def test_dad_put_a_cookie_in_a_box():
     assert only(
         _SIMPLE_GENERATOR.generate_language(situation, FixedIndexChooser(0))
     ).as_token_sequence() == ("Dad", "puts", "a", "cookie", "in", "a", "box")
+
+
+def test_dad_put_a_cookie_in_a_box_using_i():
+    dad = SituationObject(DAD, properties=[IS_SPEAKER])
+    cookie = SituationObject(COOKIE)
+    box = SituationObject(BOX)
+    situation = HighLevelSemanticsSituation(
+        ontology=GAILA_PHASE_1_ONTOLOGY,
+        objects=[dad, cookie, box],
+        relations=[],
+        actions=[
+            SituationAction(
+                PUT,
+                (
+                    (AGENT, dad),
+                    (THEME, cookie),
+                    (GOAL, Region(reference_object=box, distance=INTERIOR)),
+                ),
+            )
+        ],
+    )
+
+    assert only(
+        _SIMPLE_GENERATOR.generate_language(situation, FixedIndexChooser(0))
+    ).as_token_sequence() == ("I", "put", "a", "cookie", "in", "a", "box")
