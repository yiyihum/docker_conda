diff --git a/CHANGES.txt b/CHANGES.txt
index 4b5784a..ce5397f 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -44,6 +44,10 @@ These features are experimental and may change at any point in the future.
 Bugfix
 ~~~~~~
 
+- Request.host_url, Request.host_port, Request.domain correctly parse IPv6 Host
+  headers as provided by a browser. See
+  https://github.com/Pylons/webob/pull/332
+
 - Request.authorization would raise ValueError for unusual or malformed header
   values. See https://github.com/Pylons/webob/issues/231
 
diff --git a/src/webob/request.py b/src/webob/request.py
index 011617c..b9f45d9 100644
--- a/src/webob/request.py
+++ b/src/webob/request.py
@@ -413,8 +413,8 @@ class BaseRequest(object):
         e = self.environ
         host = e.get('HTTP_HOST')
         if host is not None:
-            if ':' in host:
-                host, port = host.split(':', 1)
+            if ':' in host and host[-1] != ']':
+                host, port = host.rsplit(':', 1)
             else:
                 url_scheme = e['wsgi.url_scheme']
                 if url_scheme == 'https':
@@ -435,8 +435,8 @@ class BaseRequest(object):
         url = scheme + '://'
         host = e.get('HTTP_HOST')
         if host is not None:
-            if ':' in host:
-                host, port = host.split(':', 1)
+            if ':' in host and host[-1] != ']':
+                host, port = host.rsplit(':', 1)
             else:
                 port = None
         else:
@@ -667,8 +667,8 @@ class BaseRequest(object):
         .. code-block:: python
 
            domain = request.host
-           if ':' in domain:
-               domain = domain.split(':', 1)[0]
+           if ':' in domain and domain[-1] != ']': # Check for ] because of IPv6
+               domain = domain.rsplit(':', 1)[0]
 
         This will be equivalent to the domain portion of the ``HTTP_HOST``
         value in the environment if it exists, or the ``SERVER_NAME`` value in
@@ -680,8 +680,8 @@ class BaseRequest(object):
         value use :meth:`webob.request.Request.host` instead.
         """
         domain = self.host
-        if ':' in domain:
-            domain = domain.split(':', 1)[0]
+        if ':' in domain and domain[-1] != ']':
+            domain = domain.rsplit(':', 1)[0]
         return domain
 
     @property
