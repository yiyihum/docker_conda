diff --git a/tests/test_check.py b/tests/test_check.py
index 9ac1e7f..00eca36 100644
--- a/tests/test_check.py
+++ b/tests/test_check.py
@@ -4,6 +4,7 @@ import os
 import sys
 import pytest
 import subprocess
+import tempfile
 import configparser
 from urlchecker.core.fileproc import get_file_paths
 from urlchecker.main.github import clone_repo, delete_repo, get_branch
@@ -109,6 +110,7 @@ def test_script(config_fname, cleanup, print_all, force_pass, rcount, timeout):
                           stdout=subprocess.PIPE,
                           stderr=subprocess.PIPE)
 
+    
 
 @pytest.mark.parametrize('local_folder_path', ['./tests/test_files'])
 @pytest.mark.parametrize('config_fname', ['./tests/_local_test_config.conf'])
@@ -182,3 +184,39 @@ def test_check_generally(retry_count):
         print("\n\nDone. All URLS passed.")
         if retry_count == 3:
             return True
+
+
+@pytest.mark.parametrize('save', [True])
+def test_save(save):
+
+    # init config parser
+    config = configparser.ConfigParser()
+    config.read('./tests/_local_test_config.conf')
+
+    # init env variables
+    path  = config['DEFAULT']["git_path_test_value"]
+    file_types = config['DEFAULT']["file_types_test_values"]
+    white_listed_urls = config['DEFAULT']["white_listed_test_urls"]
+    white_listed_patterns =  config['DEFAULT']["white_listed__test_patterns"]
+
+    # Generate command
+    cmd = ["urlchecker", "check", "--subfolder", "_project", "--file-types", file_types,
+           "--white-listed-files", "conf.py", "--white-listed-urls", white_listed_urls,
+           "--white-listed_patterns", white_listed_patterns]
+
+    # Write to file
+    if save:
+        output_csv = tempfile.NamedTemporaryFile(suffix=".csv", prefix="urlchecker-")
+        cmd += ["--save", output_csv.name]
+
+    # Add final path
+    cmd.append(path)
+
+    print(" ".join(cmd))
+    # excute script
+    pipe = subprocess.run(cmd,
+                          stdout=subprocess.PIPE,
+                          stderr=subprocess.PIPE)
+    if save:
+        if not os.path.exists(output_csv.name):
+            raise AssertionError
diff --git a/tests/test_fileproc.py b/tests/test_fileproc.py
index cba17f3..c4b2775 100644
--- a/tests/test_fileproc.py
+++ b/tests/test_fileproc.py
@@ -2,7 +2,8 @@
 # -*- coding: utf-8 -*-
 import os
 import pytest
-from urlchecker.core.fileproc import check_file_type, get_file_paths, collect_links_from_file, include_file, remove_empty
+import tempfile
+from urlchecker.core.fileproc import check_file_type, get_file_paths, collect_links_from_file, include_file, remove_empty, save_results
 
 
 @pytest.mark.parametrize('file_path', ["tests/test_files/sample_test_file.md",
@@ -83,3 +84,14 @@ def test_remove_empty():
     urls = ["notempty", "notempty", "", None]
     if len(remove_empty(urls)) != 2:
         raise AssertionError
+
+
+def test_save_results():
+    """
+    test that saving results works.
+    """
+    check_results = {"failed": ["fail1", "fail2"], "passed": ["pass1", "pass2"]}
+    output_csv = tempfile.NamedTemporaryFile(suffix=".csv", prefix="urlchecker-").name
+    output_file = save_results(check_results, output_csv)
+    if not os.path.exists(output_csv):
+        raise AssertionError
