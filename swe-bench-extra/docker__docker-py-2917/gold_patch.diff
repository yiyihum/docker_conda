diff --git a/docker/api/plugin.py b/docker/api/plugin.py
index 57110f11..10210c1a 100644
--- a/docker/api/plugin.py
+++ b/docker/api/plugin.py
@@ -51,19 +51,20 @@ class PluginApiMixin:
         return True
 
     @utils.minimum_version('1.25')
-    def disable_plugin(self, name):
+    def disable_plugin(self, name, force=False):
         """
             Disable an installed plugin.
 
             Args:
                 name (string): The name of the plugin. The ``:latest`` tag is
                     optional, and is the default if omitted.
+                force (bool): To enable the force query parameter.
 
             Returns:
                 ``True`` if successful
         """
         url = self._url('/plugins/{0}/disable', name)
-        res = self._post(url)
+        res = self._post(url, params={'force': force})
         self._raise_for_status(res)
         return True
 
diff --git a/docker/models/plugins.py b/docker/models/plugins.py
index 69b94f35..16f5245e 100644
--- a/docker/models/plugins.py
+++ b/docker/models/plugins.py
@@ -44,16 +44,19 @@ class Plugin(Model):
         self.client.api.configure_plugin(self.name, options)
         self.reload()
 
-    def disable(self):
+    def disable(self, force=False):
         """
             Disable the plugin.
 
+            Args:
+                force (bool): Force disable. Default: False
+
             Raises:
                 :py:class:`docker.errors.APIError`
                     If the server returns an error.
         """
 
-        self.client.api.disable_plugin(self.name)
+        self.client.api.disable_plugin(self.name, force)
         self.reload()
 
     def enable(self, timeout=0):
diff --git a/docker/models/services.py b/docker/models/services.py
index 200dd333..92550681 100644
--- a/docker/models/services.py
+++ b/docker/models/services.py
@@ -320,6 +320,7 @@ CREATE_SERVICE_KWARGS = [
     'labels',
     'mode',
     'update_config',
+    'rollback_config',
     'endpoint_spec',
 ]
 
