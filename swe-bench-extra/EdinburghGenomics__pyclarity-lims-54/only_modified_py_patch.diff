diff --git a/pyclarity_lims/descriptors.py b/pyclarity_lims/descriptors.py
index 91e2a4d..6ac8565 100644
--- a/pyclarity_lims/descriptors.py
+++ b/pyclarity_lims/descriptors.py
@@ -278,21 +278,25 @@ class XmlAction(XmlElementAttributeDict):
     action: The type of action to perform. (leave, repeat, remove, review, complete, store, nextstep, rework, completerepeat, unknown)
     """
     def _parse_element(self, element, **kwargs):
-        from pyclarity_lims.entities import Artifact, ProtocolStep
+        from pyclarity_lims.entities import Artifact, ProtocolStep, Step
         for k, v in element.attrib.items():
 
             if k == 'artifact-uri':
                 k = 'artifact'
                 v = Artifact(self.instance.lims, uri=v)
-            elif k in ('step-uri', 'rework-step-uri'):
+            elif k == 'step-uri':
                 k = k[:-(len('-uri'))]
                 v = ProtocolStep(self.instance.lims, uri=v)
+            elif k == 'rework-step-uri':
+                k = k[:-(len('-uri'))]
+                v = Step(self.instance.lims, uri=v)
             dict.__setitem__(self, k, v)
 
     def _setitem(self, key, value):
-        from pyclarity_lims.entities import Artifact, ProtocolStep
-        if (key in ['artifact'] and isinstance(value, Artifact)) or \
-           (key in ['step', 'rework-step'] and isinstance(value, ProtocolStep)):
+        from pyclarity_lims.entities import Artifact, ProtocolStep, Step
+        if key == 'artifact' and isinstance(value, Artifact) or \
+                key == 'step' and isinstance(value, ProtocolStep) or \
+                key == 'rework-step' and isinstance(value, Step):
             key += '-uri'
             value = value.uri
         elif key in ['action']:

