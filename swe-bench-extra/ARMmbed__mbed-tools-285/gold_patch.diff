diff --git a/news/20210524175020.bugfix b/news/20210524175020.bugfix
new file mode 100644
index 0000000..e9b7b63
--- /dev/null
+++ b/news/20210524175020.bugfix
@@ -0,0 +1,1 @@
+Avoid searching config file paths twice when mbed-os-path is used and it is a subdirectory of the project path.
diff --git a/src/mbed_tools/build/_internal/config/assemble_build_config.py b/src/mbed_tools/build/_internal/config/assemble_build_config.py
index 676bc4a..e61cd9c 100644
--- a/src/mbed_tools/build/_internal/config/assemble_build_config.py
+++ b/src/mbed_tools/build/_internal/config/assemble_build_config.py
@@ -33,7 +33,11 @@ def assemble_config(target_attributes: dict, search_paths: Iterable[Path], mbed_
         mbed_app_file: The path to mbed_app.json. This can be None.
     """
     mbed_lib_files = list(
-        set(itertools.chain.from_iterable(find_files("mbed_lib.json", path) for path in search_paths))
+        set(
+            itertools.chain.from_iterable(
+                find_files("mbed_lib.json", path.absolute().resolve()) for path in search_paths
+            )
+        )
     )
     return _assemble_config_from_sources(target_attributes, mbed_lib_files, mbed_app_file)
 
diff --git a/src/mbed_tools/build/_internal/find_files.py b/src/mbed_tools/build/_internal/find_files.py
index 9f663bb..1dba384 100644
--- a/src/mbed_tools/build/_internal/find_files.py
+++ b/src/mbed_tools/build/_internal/find_files.py
@@ -52,6 +52,9 @@ def _find_files(filename: str, directory: Path, filters: Optional[List[Callable]
     filtered_children = filter_files(children, filters)
 
     for child in filtered_children:
+        if child.is_symlink():
+            child = child.absolute().resolve()
+
         if child.is_dir():
             # If processed child is a directory, recurse with current set of filters
             result += _find_files(filename, child, filters)
