diff --git a/birdy/client/__init__.py b/birdy/client/__init__.py
index b48b844..2d570c3 100644
--- a/birdy/client/__init__.py
+++ b/birdy/client/__init__.py
@@ -54,4 +54,4 @@ If a WPS server with a simple `hello` process is running on the local host on po
 
 """
 
-from .base import WPSClient
+from .base import WPSClient, nb_form
diff --git a/birdy/client/base.py b/birdy/client/base.py
index 507d5fb..1108a79 100644
--- a/birdy/client/base.py
+++ b/birdy/client/base.py
@@ -292,11 +292,12 @@ class WPSClient(object):
         else:
             self.logger.info("{} failed.".format(execution.process.identifier))
 
-    def interact(self, pid):
-        """Return a Notebook form to enter input values and launch process."""
-        if self._notebook:
-            return notebook.interact(
-                func=getattr(self, pid),
-                inputs=self._inputs[pid].items())
-        else:
-            return None
+
+def nb_form(wps, pid):
+    """Return a Notebook form to enter input values and launch process."""
+    if wps._notebook:
+        return notebook.interact(
+            func=getattr(wps, sanitize(pid)),
+            inputs=wps._inputs[pid].items())
+    else:
+        return None
diff --git a/birdy/client/notebook.py b/birdy/client/notebook.py
index 1f5b705..403c205 100644
--- a/birdy/client/notebook.py
+++ b/birdy/client/notebook.py
@@ -4,6 +4,7 @@ from owslib.wps import Input
 from . import utils
 from birdy.dependencies import ipywidgets as widgets
 from birdy.dependencies import IPython
+from birdy.utils import sanitize
 
 
 def is_notebook():
@@ -24,10 +25,14 @@ def is_notebook():
 
 
 def interact(func, inputs):
-    """Return a Notebook form to enter input values and launch process."""
-    ws = {key: input2widget(inpt) for key, inpt in inputs}
+    """Return a Notebook form to enter input values and launch process.
+
+    The output is stored in the `widget.result` attribute of the response.
+    """
+    ws = {sanitize(key): input2widget(inpt) for key, inpt in inputs}
     out = widgets.interact_manual(func, **ws)
     out.widget.children[-2].description = 'Launch process'
+    # IPython.display.display(out)
     return out
 
 
