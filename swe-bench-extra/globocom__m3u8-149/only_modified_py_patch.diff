diff --git a/m3u8/model.py b/m3u8/model.py
index 1e12148..fce4fbf 100644
--- a/m3u8/model.py
+++ b/m3u8/model.py
@@ -510,7 +510,8 @@ class Playlist(BasePathMixin):
             average_bandwidth=stream_info.get('average_bandwidth'),
             program_id=stream_info.get('program_id'),
             resolution=resolution_pair,
-            codecs=stream_info.get('codecs')
+            codecs=stream_info.get('codecs'),
+            frame_rate=stream_info.get('frame_rate')
         )
         self.media = []
         for media_type in ('audio', 'video', 'subtitles'):
@@ -535,6 +536,8 @@ class Playlist(BasePathMixin):
             res = str(self.stream_info.resolution[
                       0]) + 'x' + str(self.stream_info.resolution[1])
             stream_inf.append('RESOLUTION=' + res)
+        if self.stream_info.frame_rate:
+            stream_inf.append('FRAME-RATE=%.5g' % self.stream_info.frame_rate)
         if self.stream_info.codecs:
             stream_inf.append('CODECS=' + quoted(self.stream_info.codecs))
 
@@ -586,7 +589,8 @@ class IFramePlaylist(BasePathMixin):
             average_bandwidth=None,
             program_id=iframe_stream_info.get('program_id'),
             resolution=resolution_pair,
-            codecs=iframe_stream_info.get('codecs')
+            codecs=iframe_stream_info.get('codecs'),
+            frame_rate=None
         )
 
     def __str__(self):
@@ -611,7 +615,7 @@ class IFramePlaylist(BasePathMixin):
 
 StreamInfo = namedtuple(
     'StreamInfo',
-    ['bandwidth', 'closed_captions', 'average_bandwidth', 'program_id', 'resolution', 'codecs', 'audio', 'video', 'subtitles']
+    ['bandwidth', 'closed_captions', 'average_bandwidth', 'program_id', 'resolution', 'codecs', 'audio', 'video', 'subtitles', 'frame_rate']
 )
 
 
diff --git a/m3u8/parser.py b/m3u8/parser.py
index ccd5696..64fbdb8 100644
--- a/m3u8/parser.py
+++ b/m3u8/parser.py
@@ -243,6 +243,7 @@ def _parse_stream_inf(line, data, state):
     atribute_parser["program_id"] = int
     atribute_parser["bandwidth"] = lambda x: int(float(x))
     atribute_parser["average_bandwidth"] = int
+    atribute_parser["frame_rate"] = float
     state['stream_info'] = _parse_attribute_list(protocol.ext_x_stream_inf, line, atribute_parser)
 
 

