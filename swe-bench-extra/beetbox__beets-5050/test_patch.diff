diff --git a/test/plugins/test_smartplaylist.py b/test/plugins/test_smartplaylist.py
index 96eac625..921ae815 100644
--- a/test/plugins/test_smartplaylist.py
+++ b/test/plugins/test_smartplaylist.py
@@ -241,6 +241,51 @@ class SmartPlaylistTest(_common.TestCase):
             + b"http://beets:8337/files/tagada.mp3\n",
         )
 
+    def test_playlist_update_uri_format(self):
+        spl = SmartPlaylistPlugin()
+
+        i = MagicMock()
+        type(i).id = PropertyMock(return_value=3)
+        type(i).path = PropertyMock(return_value=b"/tagada.mp3")
+        i.evaluate_template.side_effect = lambda pl, _: pl.replace(
+            b"$title", b"ta:ga:da"
+        ).decode()
+
+        lib = Mock()
+        lib.replacements = CHAR_REPLACE
+        lib.items.return_value = [i]
+        lib.albums.return_value = []
+
+        q = Mock()
+        a_q = Mock()
+        pl = b"$title-my<playlist>.m3u", (q, None), (a_q, None)
+        spl._matched_playlists = [pl]
+
+        dir = bytestring_path(mkdtemp())
+        tpl = "http://beets:8337/item/$id/file"
+        config["smartplaylist"]["uri_format"] = tpl
+        config["smartplaylist"]["playlist_dir"] = py3_path(dir)
+        # The following options should be ignored when uri_format is set
+        config["smartplaylist"]["relative_to"] = "/data"
+        config["smartplaylist"]["prefix"] = "/prefix"
+        config["smartplaylist"]["urlencode"] = True
+        try:
+            spl.update_playlists(lib)
+        except Exception:
+            rmtree(syspath(dir))
+            raise
+
+        lib.items.assert_called_once_with(q, None)
+        lib.albums.assert_called_once_with(a_q, None)
+
+        m3u_filepath = path.join(dir, b"ta_ga_da-my_playlist_.m3u")
+        self.assertExists(m3u_filepath)
+        with open(syspath(m3u_filepath), "rb") as f:
+            content = f.read()
+        rmtree(syspath(dir))
+
+        self.assertEqual(content, b"http://beets:8337/item/3/file\n")
+
 
 class SmartPlaylistCLITest(_common.TestCase, TestHelper):
     def setUp(self):
