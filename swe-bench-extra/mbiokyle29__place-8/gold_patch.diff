diff --git a/place/lib/utils.py b/place/lib/utils.py
index f7e3733..cfb3da5 100644
--- a/place/lib/utils.py
+++ b/place/lib/utils.py
@@ -1,9 +1,25 @@
 # file: utils.py
 # author: mbiokyle29
+import logging
 import os.path as path
 
 
+logger = logging.getLogger(__name__)
+
+
 def is_dir(input_path):
     """ Return a boolean if the path is not a dir """
     abs_path = path.abspath(input_path)
+    logger.debug("Checking if path: %s is a directory", abs_path)
     return path.isdir(abs_path)
+
+
+def configure_logger(logger, level):
+    logger.setLevel(level)
+    sh = logging.StreamHandler()
+    sh.setLevel(level)
+    formatter = logging.Formatter("[%(name)s][%(levelname)s]: %(message)s")
+    sh.setFormatter(formatter)
+    logger.addHandler(sh)
+
+    return logger
diff --git a/place/main.py b/place/main.py
index 1e99b58..4c93112 100644
--- a/place/main.py
+++ b/place/main.py
@@ -1,21 +1,31 @@
 # file: main.py
 # author: mbiokyle29
+import logging
 import os
 import sys
 
-from click import argument, command, Path
+from click import argument, command, option, Path
 
-from place.lib.utils import is_dir
+from place.lib.utils import is_dir, configure_logger
+
+
+root_logger = logging.getLogger("")
 
 
 @command()
 @argument("sources", nargs=-1, type=Path(exists=True, resolve_path=True))
 @argument("target", nargs=1, type=Path())
-def cli(sources, target):
+@option("-v", "--verbose", default=False, is_flag=True, help="Enable verbose logging.")
+@option("-d", "--debug", default=False, is_flag=True, help="Enable debug logging.")
+def cli(sources, target, verbose, debug):
     """ mv file(s) in SOURCES to TARGET while updating config files """
+    log_level = logging.INFO if verbose else logging.WARN
+    log_level = logging.DEBUG if debug else log_level
+    configure_logger(root_logger, log_level)
 
     # rename - 1 source, target must not be a dir
     if len(sources) == 1 and not is_dir(target):
+        root_logger.debug("Renaming source file %s to target %s", sources[0], target)
         os.rename(sources[0], target)
 
     # move - n sources, target must be a dir
@@ -25,8 +35,10 @@ def cli(sources, target):
                 os.path.abspath(target),
                 os.path.basename(source)
             )
+            root_logger.debug("Moving source file %s to target location %s", source, target)
             os.rename(source, new_path)
 
     # badness
     else:
+        root_logger.warning("No placeable files detected in input. Quitting...")
         sys.exit(-1)
