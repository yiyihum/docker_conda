diff --git a/test/test_dataset.py b/test/test_dataset.py
index 734b58cd..4860b9c3 100644
--- a/test/test_dataset.py
+++ b/test/test_dataset.py
@@ -167,7 +167,36 @@ class DatasetTestCase(unittest.TestCase):
         self.assertEqual(list(self.graph.objects(self.tarek, None)), [])
         self.assertEqual(list(g1.objects(self.tarek, None)), [self.pizza])
 
-
+    def testIter(self):
+        """PR 1382: adds __iter__ to Dataset"""
+        d = Dataset()
+        uri_a = URIRef("https://example.com/a")
+        uri_b = URIRef("https://example.com/b")
+        uri_c = URIRef("https://example.com/c")
+        uri_d = URIRef("https://example.com/d")
+
+        d.add_graph(URIRef("https://example.com/g1"))
+        d.add((uri_a, uri_b, uri_c, URIRef("https://example.com/g1")))
+        d.add((uri_a, uri_b, uri_c, URIRef(
+            "https://example.com/g1")))  # pointless addition: duplicates above
+
+        d.add_graph(URIRef("https://example.com/g2"))
+        d.add((uri_a, uri_b, uri_c, URIRef("https://example.com/g2")))
+        d.add((uri_a, uri_b, uri_d, URIRef("https://example.com/g1")))  # new, uri_d
+
+        # traditional iterator
+        i_trad = 0
+        for t in d.quads((None, None, None)):
+            i_trad += 1
+
+        # new Dataset.__iter__ iterator
+        i_new = 0
+        for t in d:
+            i_new += 1
+
+        self.assertEqual(i_new, i_trad)  # both should be 3
+        
+        
 # dynamically create classes for each registered Store
 
 pluginname = None
diff --git a/test/test_namespace.py b/test/test_namespace.py
index 23fdb1e2..76f5bbf1 100644
--- a/test/test_namespace.py
+++ b/test/test_namespace.py
@@ -241,4 +241,7 @@ class NamespacePrefixTest(unittest.TestCase):
         )
 
         ref = URIRef("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
-        self.assertTrue(ref in RDF, "_RDFNamespace does not include rdf:type")
+        self.assertTrue(ref in RDF, "RDF does not include rdf:type")
+
+        ref = URIRef("http://www.w3.org/1999/02/22-rdf-syntax-ns#_1")
+        self.assertTrue(ref in RDF, "RDF does not include rdf:_1")
