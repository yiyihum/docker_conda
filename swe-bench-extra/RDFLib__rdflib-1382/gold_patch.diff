diff --git a/docs/intro_to_sparql.rst b/docs/intro_to_sparql.rst
index ef7aab78..72a87c66 100644
--- a/docs/intro_to_sparql.rst
+++ b/docs/intro_to_sparql.rst
@@ -39,7 +39,8 @@ For example...
         ?a foaf:name ?aname .
         ?b foaf:name ?bname .
     }"""
-
+    
+    qres = g.query(knows_query)
     for row in qres:
         print(f"{row.aname} knows {row.bname}")
 
diff --git a/docs/sphinx-requirements.txt b/docs/sphinx-requirements.txt
index 7096a117..f5e39519 100644
--- a/docs/sphinx-requirements.txt
+++ b/docs/sphinx-requirements.txt
@@ -1,3 +1,3 @@
-sphinx==4.1.1
+sphinx==4.1.2
 sphinxcontrib-apidoc
 git+https://github.com/gniezen/n3pygments.git
diff --git a/rdflib/graph.py b/rdflib/graph.py
index a689b35a..b25765ac 100644
--- a/rdflib/graph.py
+++ b/rdflib/graph.py
@@ -1,4 +1,4 @@
-from typing import Optional, Union, Type, cast, overload
+from typing import Optional, Union, Type, cast, overload, Generator, Tuple
 import logging
 from warnings import warn
 import random
@@ -29,6 +29,9 @@ assert Namespace  # avoid warning
 
 logger = logging.getLogger(__name__)
 
+# Type aliases to make unpacking what's going on a little more human friendly
+ContextNode = Union[BNode, URIRef]
+DatasetQuad = Tuple[Node, URIRef, Node, Optional[ContextNode]]
 
 __doc__ = """\
 
@@ -1759,8 +1762,8 @@ class Dataset(ConjunctiveGraph):
      rdflib.term.URIRef("http://example.org/y"),
      rdflib.term.Literal("bar"))
     >>>
-    >>> # querying quads return quads; the fourth argument can be unrestricted
-    >>> # or restricted to a graph
+    >>> # querying quads() return quads; the fourth argument can be unrestricted
+    >>> # (None) or restricted to a graph
     >>> for q in ds.quads((None, None, None, None)):  # doctest: +SKIP
     ...     print(q)  # doctest: +NORMALIZE_WHITESPACE
     (rdflib.term.URIRef("http://example.org/a"),
@@ -1776,7 +1779,24 @@ class Dataset(ConjunctiveGraph):
      rdflib.term.Literal("foo-bar"),
      rdflib.term.URIRef("http://www.example.com/gr"))
     >>>
-    >>> for q in ds.quads((None,None,None,g)):  # doctest: +SKIP
+    >>> # unrestricted looping is equivalent to iterating over the entire Dataset
+    >>> for q in ds:  # doctest: +SKIP
+    ...     print(q)  # doctest: +NORMALIZE_WHITESPACE
+    (rdflib.term.URIRef("http://example.org/a"),
+     rdflib.term.URIRef("http://www.example.org/b"),
+     rdflib.term.Literal("foo"),
+     None)
+    (rdflib.term.URIRef("http://example.org/x"),
+     rdflib.term.URIRef("http://example.org/y"),
+     rdflib.term.Literal("bar"),
+     rdflib.term.URIRef("http://www.example.com/gr"))
+    (rdflib.term.URIRef("http://example.org/x"),
+     rdflib.term.URIRef("http://example.org/z"),
+     rdflib.term.Literal("foo-bar"),
+     rdflib.term.URIRef("http://www.example.com/gr"))
+    >>>
+    >>> # resticting iteration to a graph:
+    >>> for q in ds.quads((None, None, None, g)):  # doctest: +SKIP
     ...     print(q)  # doctest: +NORMALIZE_WHITESPACE
     (rdflib.term.URIRef("http://example.org/x"),
      rdflib.term.URIRef("http://example.org/y"),
@@ -1896,6 +1916,11 @@ class Dataset(ConjunctiveGraph):
             else:
                 yield s, p, o, c.identifier
 
+    def __iter__(self) -> Generator[DatasetQuad, None, None]:
+        """Iterates over all quads in the store"""
+        return self.quads((None, None, None, None))
+
+
 
 class QuotedGraph(Graph):
     """
diff --git a/rdflib/namespace/_RDF.py b/rdflib/namespace/_RDF.py
index 61bc4a58..f79d75a7 100644
--- a/rdflib/namespace/_RDF.py
+++ b/rdflib/namespace/_RDF.py
@@ -16,6 +16,7 @@ class RDF(DefinedNamespace):
     """
 
     _fail = True
+    _underscore_num = True
 
     # http://www.w3.org/1999/02/22-rdf-syntax-ns#List
     nil: URIRef  # The empty list, with no items in it. If the rest of a list is nil then the list has no more items in it.
diff --git a/rdflib/namespace/__init__.py b/rdflib/namespace/__init__.py
index 62a2a946..23f4ec0e 100644
--- a/rdflib/namespace/__init__.py
+++ b/rdflib/namespace/__init__.py
@@ -288,71 +288,6 @@ class ClosedNamespace(Namespace):
         return dir(self)
 
 
-class _RDFNamespace(ClosedNamespace):
-    """
-    Closed namespace for RDF terms
-    """
-
-    def __new__(cls):
-        return super().__new__(
-            cls,
-            "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
-            terms=[
-                # Syntax Names
-                "RDF",
-                "Description",
-                "ID",
-                "about",
-                "parseType",
-                "resource",
-                "li",
-                "nodeID",
-                "datatype",
-                # RDF Classes
-                "Seq",
-                "Bag",
-                "Alt",
-                "Statement",
-                "Property",
-                "List",
-                "PlainLiteral",
-                # RDF Properties
-                "subject",
-                "predicate",
-                "object",
-                "type",
-                "value",
-                "first",
-                "rest",
-                # and _n where n is a non-negative integer
-                # RDF Resources
-                "nil",
-                # Added in RDF 1.1
-                "XMLLiteral",
-                "HTML",
-                "langString",
-                # Added in JSON-LD 1.1
-                "JSON",
-                "CompoundLiteral",
-                "language",
-                "direction",
-            ],
-        )
-
-    def term(self, name):
-        # Container membership properties
-        if name.startswith("_"):
-            try:
-                i = int(name[1:])
-            except ValueError:
-                pass
-            else:
-                if i > 0:
-                    return URIRef(f"{self}_{i}")
-
-        return super().term(name)
-
-
 XMLNS = Namespace("http://www.w3.org/XML/1998/namespace")
 
 
diff --git a/rdflib/plugin.py b/rdflib/plugin.py
index 1605b0bb..719c7eaf 100644
--- a/rdflib/plugin.py
+++ b/rdflib/plugin.py
@@ -205,7 +205,7 @@ register("application/n-triples", Parser, "rdflib.plugins.parsers.ntriples", "NT
 register("ntriples", Parser, "rdflib.plugins.parsers.ntriples", "NTParser")
 register("nt", Parser, "rdflib.plugins.parsers.ntriples", "NTParser")
 register("nt11", Parser, "rdflib.plugins.parsers.ntriples", "NTParser")
-register("application/json+ld", Parser, "rdflib.plugins.parsers.jsonld", "JsonLDParser")
+register("application/ld+json", Parser, "rdflib.plugins.parsers.jsonld", "JsonLDParser")
 register("json-ld", Parser, "rdflib.plugins.parsers.jsonld", "JsonLDParser")
 
 
