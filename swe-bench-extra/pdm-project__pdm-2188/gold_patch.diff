diff --git a/news/2182.bugfix.md b/news/2182.bugfix.md
new file mode 100644
index 00000000..7ef16f94
--- /dev/null
+++ b/news/2182.bugfix.md
@@ -0,0 +1,1 @@
+Makes `comarable_version("1.2.3+local1") == Version("1.2.3")`.
\ No newline at end of file
diff --git a/news/2187.bugfix.md b/news/2187.bugfix.md
new file mode 100644
index 00000000..137b3605
--- /dev/null
+++ b/news/2187.bugfix.md
@@ -0,0 +1,1 @@
+Default behavior for pdm venv activate when shell detection fails.
diff --git a/src/pdm/cli/commands/venv/activate.py b/src/pdm/cli/commands/venv/activate.py
index e1fb176f..3d04c593 100644
--- a/src/pdm/cli/commands/venv/activate.py
+++ b/src/pdm/cli/commands/venv/activate.py
@@ -45,7 +45,10 @@ class ActivateCommand(BaseCommand):
         project.core.ui.echo(self.get_activate_command(venv))
 
     def get_activate_command(self, venv: VirtualEnv) -> str:  # pragma: no cover
-        shell, _ = shellingham.detect_shell()
+        try:
+            shell, _ = shellingham.detect_shell()
+        except shellingham.ShellDetectionFailure:
+            shell = None
         if shell == "fish":
             command, filename = "source", "activate.fish"
         elif shell == "csh":
diff --git a/src/pdm/utils.py b/src/pdm/utils.py
index 72e4a60f..f903a461 100644
--- a/src/pdm/utils.py
+++ b/src/pdm/utils.py
@@ -19,7 +19,7 @@ import warnings
 from pathlib import Path
 from typing import TYPE_CHECKING
 
-from packaging.version import Version
+from packaging.version import Version, _cmpkey
 
 from pdm.compat import importlib_metadata
 
@@ -344,6 +344,17 @@ def comparable_version(version: str) -> Version:
     if parsed.local is not None:
         # strip the local part
         parsed._version = parsed._version._replace(local=None)
+
+        # To make comparable_version("1.2.3+local1") == Version("1.2.3")
+        parsed._key = _cmpkey(
+            parsed._version.epoch,
+            parsed._version.release,
+            parsed._version.pre,
+            parsed._version.post,
+            parsed._version.dev,
+            parsed._version.local,
+        )
+
     return parsed
 
 
