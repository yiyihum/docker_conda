diff --git a/ariadne/__init__.py b/ariadne/__init__.py
index 8f68984..8e938fd 100644
--- a/ariadne/__init__.py
+++ b/ariadne/__init__.py
@@ -1,4 +1,5 @@
 from .executable_schema import make_executable_schema
+from .load_schema import load_schema_from_path
 from .resolvers import (
     FallbackResolversSetter,
     ResolverMap,
@@ -13,6 +14,7 @@ from .simple_server import start_simple_server
 from .utils import convert_camel_case_to_snake, gql
 from .wsgi_middleware import GraphQLMiddleware
 
+
 __all__ = [
     "FallbackResolversSetter",
     "GraphQLMiddleware",
@@ -23,6 +25,7 @@ __all__ = [
     "default_resolver",
     "fallback_resolvers",
     "gql",
+    "load_schema_from_path",
     "make_executable_schema",
     "resolve_to",
     "snake_case_fallback_resolvers",
diff --git a/ariadne/exceptions.py b/ariadne/exceptions.py
index 22c4542..6f7d015 100644
--- a/ariadne/exceptions.py
+++ b/ariadne/exceptions.py
@@ -15,3 +15,15 @@ class HttpBadRequestError(HttpError):
 
 class HttpMethodNotAllowedError(HttpError):
     status = HTTP_STATUS_405_METHOD_NOT_ALLOWED
+
+
+class GraphQLFileSyntaxError(Exception):
+    def __init__(self, schema_file, message):
+        super().__init__()
+        self.message = self.format_message(schema_file, message)
+
+    def format_message(self, schema_file, message):
+        return f"Could not load {schema_file}:\n{message}"
+
+    def __str__(self):
+        return self.message
