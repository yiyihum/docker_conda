diff --git a/openrouteservice/isochrones.py b/openrouteservice/isochrones.py
index 5e6850c..14a8d73 100644
--- a/openrouteservice/isochrones.py
+++ b/openrouteservice/isochrones.py
@@ -20,16 +20,17 @@ from openrouteservice import convert
 
 
 def isochrones(client, locations,
-                    profile='driving-car',
-                    range_type=None,
-                    intervals=[60],
-                    segments=30,
-                    units=None,
-                    location_type=None,
-                    attributes=None,
-                    #options=None,
-                    intersections=None,
-                    dry_run=None):
+               profile='driving-car',
+               range_type=None,
+               intervals=[60],
+               segments=30,
+               units=None,
+               location_type=None,
+               smoothing=None,
+               attributes=None,
+               # options=None,
+               intersections=None,
+               dry_run=None):
     """ Gets travel distance and time for a matrix of origins and destinations.
 
     :param locations: One pair of lng/lat values.
@@ -65,6 +66,10 @@ def isochrones(client, locations,
         'destination' as goal. Default 'start'.
     :type location_type: string
 
+    :param smoothing: Applies a level of generalisation to the isochrone polygons generated.
+        Value between 0 and 1, whereas a value closer to 1 will result in a more generalised shape.
+    :type smoothing: float
+
     :param attributes: 'area' returns the area of each polygon in its feature
         properties. 'reachfactor' returns a reachability score between 0 and 1.
         'total_pop' returns population statistics from https://ghsl.jrc.ec.europa.eu/about.php.
@@ -120,6 +125,9 @@ def isochrones(client, locations,
     if location_type:
         params["location_type"] = location_type
 
+    if smoothing:
+        params["smoothing"] = convert._format_float(smoothing)
+
     if attributes:
         params["attributes"] = convert._pipe_list(attributes)
 
