diff --git a/tests/test_renderers/fixtures/directive_parsing.txt b/tests/test_renderers/fixtures/directive_parsing.txt
index 663d09e..3b8cc86 100644
--- a/tests/test_renderers/fixtures/directive_parsing.txt
+++ b/tests/test_renderers/fixtures/directive_parsing.txt
@@ -257,3 +257,47 @@ error: missing argument
 .
 error: 1 argument(s) required, 0 supplied
 .
+
+option_flags_std
+.
+```{code-block}
+:linenos:
+:lineno-start: 2
+:force:
+
+body
+```
+.
+arguments: []
+body:
+- body
+content_offset: 4
+options:
+  force: null
+  lineno-start: 2
+  linenos: null
+warnings: []
+.
+
+option_flags_delimited
+.
+```{code-block}
+---
+linenos:
+lineno-start: 2
+force:
+---
+
+body
+```
+.
+arguments: []
+body:
+- body
+content_offset: 6
+options:
+  force: null
+  lineno-start: 2
+  linenos: null
+warnings: []
+.
diff --git a/tests/test_renderers/fixtures/option_parsing.yaml b/tests/test_renderers/fixtures/option_parsing.yaml
index 14fe0a5..772aa7f 100644
--- a/tests/test_renderers/fixtures/option_parsing.yaml
+++ b/tests/test_renderers/fixtures/option_parsing.yaml
@@ -182,3 +182,22 @@ folded values:
       ],
       "comments": false
     }
+
+empty_final_value:
+  content: |-
+    key1: val1
+    key2:
+  expected: |-
+    {
+      "dict": [
+        [
+          "key1",
+          "val1"
+        ],
+        [
+          "key2",
+          ""
+        ]
+      ],
+      "comments": false
+    }
diff --git a/tests/test_renderers/test_parse_directives.py b/tests/test_renderers/test_parse_directives.py
index e6b2c2b..3813cc9 100644
--- a/tests/test_renderers/test_parse_directives.py
+++ b/tests/test_renderers/test_parse_directives.py
@@ -6,10 +6,10 @@ import yaml
 from docutils.parsers.rst.directives.admonitions import Admonition, Note
 from docutils.parsers.rst.directives.body import Rubric
 from markdown_it import MarkdownIt
+from sphinx.directives.code import CodeBlock
 
 from myst_parser.parsers.directives import MarkupError, parse_directive_text
-from myst_parser.parsers.options import TokenizeError
-from myst_parser.parsers.options import to_items as options_to_items
+from myst_parser.parsers.options import TokenizeError, options_to_items
 
 FIXTURE_PATH = Path(__file__).parent.joinpath("fixtures")
 
@@ -50,6 +50,8 @@ def test_parsing(file_params):
         klass = Note
     elif name == "{admonition}":
         klass = Admonition
+    elif name == "{code-block}":
+        klass = CodeBlock
     else:
         raise AssertionError(f"Unknown directive: {name}")
     try:
