diff --git a/myst_parser/parsers/directives.py b/myst_parser/parsers/directives.py
index 5a2a7f4..d6a000c 100644
--- a/myst_parser/parsers/directives.py
+++ b/myst_parser/parsers/directives.py
@@ -49,8 +49,7 @@ from docutils.parsers.rst.states import MarkupError
 
 from myst_parser.warnings_ import MystWarnings
 
-from .options import TokenizeError
-from .options import to_items as options_to_items
+from .options import TokenizeError, options_to_items
 
 
 @dataclass
diff --git a/myst_parser/parsers/options.py b/myst_parser/parsers/options.py
index cf4d353..366d455 100644
--- a/myst_parser/parsers/options.py
+++ b/myst_parser/parsers/options.py
@@ -168,7 +168,7 @@ class State:
     has_comments: bool = False
 
 
-def to_items(
+def options_to_items(
     text: str, line_offset: int = 0, column_offset: int = 0
 ) -> tuple[list[tuple[str, str]], State]:
     """Parse a directive option block into (key, value) tuples.
@@ -211,6 +211,8 @@ def _to_tokens(
                     raise TokenizeError("expected key before value", token.start)
                 yield key_token, token
                 key_token = None
+        if key_token is not None:
+            yield key_token, None
     except TokenizeError as exc:
         if line_offset or column_offset:
             raise exc.clone(line_offset, column_offset) from exc
