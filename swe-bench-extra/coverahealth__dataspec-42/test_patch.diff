diff --git a/tests/test_base.py b/tests/test_base.py
index 7261475..f0a45c6 100644
--- a/tests/test_base.py
+++ b/tests/test_base.py
@@ -526,6 +526,8 @@ class TestEnumSetSpec:
         assert not enum_spec.is_valid(None)
 
     def test_enum_spec_conformation(self, enum_spec: Spec):
+        assert self.YesNo.YES == enum_spec.conform("YES")
+        assert self.YesNo.NO == enum_spec.conform("NO")
         assert self.YesNo.YES == enum_spec.conform("Yes")
         assert self.YesNo.NO == enum_spec.conform("No")
         assert self.YesNo.YES == enum_spec.conform(self.YesNo.YES)
@@ -533,6 +535,10 @@ class TestEnumSetSpec:
         assert INVALID is enum_spec.conform("Maybe")
         assert INVALID is enum_spec.conform(None)
 
+        # Testing the last branch of the conformer
+        assert INVALID is enum_spec.conform_valid("Maybe")
+        assert INVALID is enum_spec.conform_valid(None)
+
 
 class TestTupleSpecValidation:
     @pytest.fixture
diff --git a/tests/test_factories.py b/tests/test_factories.py
index ee64c61..0b271ee 100644
--- a/tests/test_factories.py
+++ b/tests/test_factories.py
@@ -115,6 +115,7 @@ class TestAnySpecConformation:
     )
     def test_conformation_failure(self, spec: Spec, v):
         assert INVALID is spec.conform(v)
+        assert INVALID is spec.conform_valid(v)
 
     @pytest.fixture
     def tag_spec(self) -> Spec:
@@ -141,6 +142,7 @@ class TestAnySpecConformation:
     )
     def test_tagged_conformation_failure(self, tag_spec: Spec, v):
         assert INVALID is tag_spec.conform(v)
+        assert INVALID is tag_spec.conform_valid(v)
 
 
 class TestAnySpecWithOuterConformation:
@@ -163,6 +165,7 @@ class TestAnySpecWithOuterConformation:
     )
     def test_conformation_failure(self, spec: Spec, v):
         assert INVALID is spec.conform(v)
+        assert INVALID is spec.conform_valid(v)
 
     @pytest.fixture
     def tag_spec(self) -> Spec:
@@ -190,6 +193,7 @@ class TestAnySpecWithOuterConformation:
     )
     def test_tagged_conformation_failure(self, tag_spec: Spec, v):
         assert INVALID is tag_spec.conform(v)
+        assert INVALID is tag_spec.conform_valid(v)
 
 
 @pytest.mark.parametrize(
