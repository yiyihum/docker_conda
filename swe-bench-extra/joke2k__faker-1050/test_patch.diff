diff --git a/tests/providers/test_misc.py b/tests/providers/test_misc.py
index 1ee2476e..be2806f0 100644
--- a/tests/providers/test_misc.py
+++ b/tests/providers/test_misc.py
@@ -24,3 +24,15 @@ class TestMisc(unittest.TestCase):
         uuid4 = self.factory.uuid4(cast_to=lambda x: x)
         assert uuid4
         assert isinstance(uuid4, uuid.UUID)
+
+    def test_uuid4_seedability(self):
+        for _ in range(10):
+            random_seed = self.factory.random_int()
+            baseline_fake = Faker()
+            baseline_fake.seed(random_seed)
+            expected_uuids = [baseline_fake.uuid4() for i in range(1000)]
+
+            new_fake = Faker()
+            new_fake.seed(random_seed)
+            new_uuids = [new_fake.uuid4() for i in range(1000)]
+            assert new_uuids == expected_uuids
diff --git a/tests/providers/test_python.py b/tests/providers/test_python.py
index 61f5ca02..ccb93c79 100644
--- a/tests/providers/test_python.py
+++ b/tests/providers/test_python.py
@@ -1,6 +1,10 @@
 #  -*- coding: utf-8 -*-
 
 import unittest
+try:
+    from unittest.mock import patch
+except ImportError:
+    from mock import patch
 
 from faker import Faker
 
@@ -87,3 +91,19 @@ class TestPyfloat(unittest.TestCase):
 
         message = str(raises.exception)
         self.assertEqual(message, expected_message)
+
+
+class TestPystrFormat(unittest.TestCase):
+
+    def setUp(self):
+        self.factory = Faker(includes=['tests.mymodule.en_US'])
+
+    def test_formatter_invocation(self):
+        with patch.object(self.factory, 'foo') as mock_foo:
+            with patch('faker.providers.BaseProvider.bothify',
+                       wraps=self.factory.bothify) as mock_bothify:
+                mock_foo.return_value = 'barbar'
+                value = self.factory.pystr_format('{{foo}}?#?{{foo}}?#?{{foo}}', letters='abcde')
+                assert value.count('barbar') == 3
+                assert mock_foo.call_count == 3
+                mock_bothify.assert_called_once_with('barbar?#?barbar?#?barbar', letters='abcde')
