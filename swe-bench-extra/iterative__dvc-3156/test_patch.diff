diff --git a/tests/func/test_api.py b/tests/func/test_api.py
--- a/tests/func/test_api.py
+++ b/tests/func/test_api.py
@@ -6,7 +6,7 @@
 import pytest
 
 from dvc import api
-from dvc.api import SummonError
+from dvc.api import SummonError, UrlNotDvcRepoError
 from dvc.compat import fspath
 from dvc.exceptions import FileMissingError
 from dvc.main import main
@@ -51,6 +51,16 @@ def test_get_url_external(erepo_dir, remote_url):
     assert api.get_url("foo", repo=repo_url) == expected_url
 
 
+def test_get_url_git_only_repo_throws_exception(tmp_dir, scm):
+    tmp_dir.scm_gen({"foo": "foo"}, commit="initial")
+
+    with pytest.raises(UrlNotDvcRepoError) as exc_info:
+        api.get_url("foo", fspath(tmp_dir))
+
+    # On windows, `exc_info` has path escaped, eg: `C:\\\\Users\\\\travis`
+    assert fspath(tmp_dir) in str(exc_info).replace("\\\\", "\\")
+
+
 @pytest.mark.parametrize("remote_url", all_remote_params, indirect=True)
 def test_open(remote_url, tmp_dir, dvc):
     run_dvc("remote", "add", "-d", "upstream", remote_url)
diff --git a/tests/func/test_get.py b/tests/func/test_get.py
--- a/tests/func/test_get.py
+++ b/tests/func/test_get.py
@@ -5,6 +5,7 @@
 
 from dvc.cache import Cache
 from dvc.config import Config
+from dvc.main import main
 from dvc.repo.get import GetDVCFileError, PathMissingError
 from dvc.repo import Repo
 from dvc.system import System
@@ -184,3 +185,30 @@ def test_get_from_non_dvc_master(tmp_dir, erepo_dir, caplog):
 
     assert caplog.text == ""
     assert (tmp_dir / dst).read_text() == "some_contents"
+
+
+def test_get_url_positive(tmp_dir, erepo_dir, caplog):
+    with erepo_dir.chdir():
+        erepo_dir.dvc_gen("foo", "foo")
+
+    caplog.clear()
+    with caplog.at_level(logging.ERROR, logger="dvc"):
+        assert main(["get", fspath(erepo_dir), "foo", "--show-url"]) == 0
+        assert caplog.text == ""
+
+
+def test_get_url_not_existing(tmp_dir, erepo_dir, caplog):
+    with caplog.at_level(logging.ERROR, logger="dvc"):
+        assert (
+            main(["get", fspath(erepo_dir), "not-existing-file", "--show-url"])
+            == 1
+        )
+        assert "failed to show url" in caplog.text
+
+
+def test_get_url_git_only_repo(tmp_dir, scm, caplog):
+    tmp_dir.scm_gen({"foo": "foo"}, commit="initial")
+
+    with caplog.at_level(logging.ERROR):
+        assert main(["get", fspath(tmp_dir), "foo", "--show-url"]) == 1
+        assert "failed to show url" in caplog.text
diff --git a/tests/unit/command/test_get.py b/tests/unit/command/test_get.py
--- a/tests/unit/command/test_get.py
+++ b/tests/unit/command/test_get.py
@@ -14,3 +14,18 @@ def test_get(mocker):
     assert cmd.run() == 0
 
     m.assert_called_once_with("repo_url", path="src", out="out", rev="version")
+
+
+def test_get_url(mocker, caplog):
+    cli_args = parse_args(
+        ["get", "repo_url", "src", "--rev", "version", "--show-url"]
+    )
+    assert cli_args.func == CmdGet
+
+    cmd = cli_args.func(cli_args)
+    m = mocker.patch("dvc.api.get_url", return_value="resource_url")
+
+    assert cmd.run() == 0
+    assert "resource_url" in caplog.text
+
+    m.assert_called_once_with("src", repo="repo_url", rev="version")
