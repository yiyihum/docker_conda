diff --git a/swagger_marshmallow_codegen/codegen/config.py b/swagger_marshmallow_codegen/codegen/config.py
index 429da80..56f8b2f 100644
--- a/swagger_marshmallow_codegen/codegen/config.py
+++ b/swagger_marshmallow_codegen/codegen/config.py
@@ -2,10 +2,11 @@ from __future__ import annotations
 import typing_extensions as tx
 
 
-class ConfigDict(tx.TypedDict):
+class ConfigDict(tx.TypedDict, total=False):
     schema: bool
     input: bool
     output: bool
 
     emit_schema_even_primitive_type: bool
     skip_header_comment: bool
+    header_comment: str
diff --git a/swagger_marshmallow_codegen/codegen/v2/codegen.py b/swagger_marshmallow_codegen/codegen/v2/codegen.py
index 568f432..ecf29f2 100644
--- a/swagger_marshmallow_codegen/codegen/v2/codegen.py
+++ b/swagger_marshmallow_codegen/codegen/v2/codegen.py
@@ -95,7 +95,9 @@ class SchemaWriter:
             logger.debug("      nested: %s, %s", caller_name, field_class_name)
             if opts:
                 kwargs = LazyFormat(", {}", kwargs)
-            value = LazyFormat("{}(lambda: {}(){})", caller_name, field_class_name, kwargs)
+            value = LazyFormat(
+                "{}(lambda: {}(){})", caller_name, field_class_name, kwargs
+            )
         else:
             if caller_name == "fields.Nested":
                 caller_name = "fields.Field"
@@ -488,9 +490,14 @@ class Codegen:
     def resolver(self) -> Resolver:
         return self.accessor.resolver
 
-    def write_header(self, c):
-        c.im.stmt("# -*- coding:utf-8 -*-")
-        c.im.stmt("# this is auto-generated by swagger-marshmallow-codegen")
+    def write_header(self, c, *, comment: t.Optional[str] = None):
+        if comment is None:
+            comment = """\
+# this is auto-generated by swagger-marshmallow-codegen
+from __future__ import annotations
+"""
+        for line in comment.splitlines():
+            c.im.stmt(line)
 
     def write_import_(self, c):
         c.from_(*self.schema_class_path.rsplit(":", 1))
@@ -509,7 +516,7 @@ class Codegen:
     def codegen(self, d, ctx=None):
         c = ctx or Context()
         if not self.accessor.config.get("skip_header_comment", False):
-            self.write_header(c)
+            self.write_header(c, comment=self.accessor.config.get("header_comment"))
         c.m.sep()
         self.write_import_(c)
         self.write_body(c, d)
diff --git a/swagger_marshmallow_codegen/codegen/v3/codegen.py b/swagger_marshmallow_codegen/codegen/v3/codegen.py
index 4b8d214..0e27d70 100644
--- a/swagger_marshmallow_codegen/codegen/v3/codegen.py
+++ b/swagger_marshmallow_codegen/codegen/v3/codegen.py
@@ -1,1 +1,2 @@
 from ..v2.codegen import Codegen
+__all__ = ["Codegen"]
diff --git a/swagger_marshmallow_codegen/dispatcher.py b/swagger_marshmallow_codegen/dispatcher.py
index a5252be..2bf21f1 100644
--- a/swagger_marshmallow_codegen/dispatcher.py
+++ b/swagger_marshmallow_codegen/dispatcher.py
@@ -22,7 +22,7 @@ TYPE_MAP = {
     Pair(type="string", format=None): "marshmallow.fields:String",
     Pair(type="boolean", format=None): "marshmallow.fields:Boolean",
     Pair(type="string", format="uuid"): "marshmallow.fields:UUID",
-    Pair(type="string", format="date-time"): "marshmallow.fields:DateTime",
+    Pair(type="string", format="date-time"): "marshmallow.fields:AwareDateTime",
     Pair(type="string", format="date"): "marshmallow.fields:Date",
     Pair(type="string", format="time"): "marshmallow.fields:Time",
     Pair(type="string", format="email"): "marshmallow.fields:Email",
diff --git a/swagger_marshmallow_codegen/resolver.py b/swagger_marshmallow_codegen/resolver.py
index 844e9a2..50a350c 100644
--- a/swagger_marshmallow_codegen/resolver.py
+++ b/swagger_marshmallow_codegen/resolver.py
@@ -1,6 +1,5 @@
 # -*- coding:utf-8 -*-
 import logging
-import sys
 from collections import OrderedDict
 import dictknife
 from .langhelpers import titleize, normalize
