diff --git a/tests/test_ast_language.py b/tests/test_ast_language.py
index 096575d..3404ce7 100644
--- a/tests/test_ast_language.py
+++ b/tests/test_ast_language.py
@@ -217,3 +217,10 @@ def test_Zip():
     first_node = Zip(source=unwrap_ast(ast.parse('data_source')))
     assert_equivalent_python_ast_and_text_ast(wrap_ast(first_node),
                                               '(Zip data_source)')
+
+
+def test_OrderBy():
+    select_node = OrderBy(source=unwrap_ast(ast.parse('data_source')),
+                          key_selector=unwrap_ast(ast.parse('lambda e: e')))
+    assert_equivalent_python_ast_and_text_ast(wrap_ast(select_node),
+                                              '(OrderBy data_source (lambda (list e) e))')
diff --git a/tests/test_linq_util.py b/tests/test_linq_util.py
index 93b1d07..d579eef 100644
--- a/tests/test_linq_util.py
+++ b/tests/test_linq_util.py
@@ -256,3 +256,26 @@ def test_zip_composite():
 def test_zip_bad():
     with pytest.raises(SyntaxError):
         insert_linq_nodes(ast.parse('the_source.Zip(None)'))
+
+
+def test_orderby():
+    initial_ast = ast.parse("the_source.OrderBy('lambda row: row')")
+    final_ast = insert_linq_nodes(initial_ast)
+    expected_ast = wrap_ast(OrderBy(source=unwrap_ast(ast.parse('the_source')),
+                                    key_selector=unwrap_ast(ast.parse('lambda row: row'))))
+    assert_ast_nodes_are_equal(final_ast, expected_ast)
+
+
+def test_orderby_composite():
+    initial_ast = ast.parse("the_source.First().OrderBy('lambda row: row')")
+    final_ast = insert_linq_nodes(initial_ast)
+    expected_ast = wrap_ast(OrderBy(source=First(source=unwrap_ast(ast.parse('the_source'))),
+                                    key_selector=unwrap_ast(ast.parse('lambda row: row'))))
+    assert_ast_nodes_are_equal(final_ast, expected_ast)
+
+
+def test_orderby_bad():
+    with pytest.raises(SyntaxError):
+        insert_linq_nodes(ast.parse('the_source.OrderBy()'))
+    with pytest.raises(SyntaxError):
+        insert_linq_nodes(ast.parse('the_source.OrderBy(None)'))
