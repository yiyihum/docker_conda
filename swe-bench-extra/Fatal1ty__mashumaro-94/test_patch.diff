diff --git a/tests/test_config.py b/tests/test_config.py
index 17f0abb..c7ffa68 100644
--- a/tests/test_config.py
+++ b/tests/test_config.py
@@ -142,6 +142,7 @@ def test_serialization_strategy():
     class DataClass(DataClassDictMixin):
         a: int
         b: str
+        c: int
 
         class Config(BaseConfig):
             serialization_strategy = {
@@ -152,9 +153,9 @@ def test_serialization_strategy():
                 },
             }
 
-    instance = DataClass(a=123, b="abc")
-    assert DataClass.from_dict({"a": [123], "b": ["abc"]}) == instance
-    assert instance.to_dict() == {"a": [123], "b": ["abc"]}
+    instance = DataClass(a=123, b="abc", c=123)
+    assert DataClass.from_dict({"a": [123], "b": ["abc"], "c": [123]}) == instance
+    assert instance.to_dict() == {"a": [123], "b": ["abc"], "c": [123]}
 
 
 def test_named_tuple_as_dict():
diff --git a/tests/test_forward_refs/__init__.py b/tests/test_forward_refs/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/tests/test_forward_refs/test_baz.py b/tests/test_forward_refs/test_baz.py
new file mode 100644
index 0000000..495441c
--- /dev/null
+++ b/tests/test_forward_refs/test_baz.py
@@ -0,0 +1,15 @@
+from __future__ import annotations
+
+from dataclasses import dataclass
+
+from .test_foobar import Bar, Foo
+
+
+@dataclass
+class Baz(Foo[int]):
+    pass
+
+
+def test_class_with_base_in_another_module():
+    assert Bar(x=1).to_json() == '{"x": 1}'
+    assert Baz(x=1).to_json() == '{"x": 1}'
diff --git a/tests/test_forward_refs/test_foobar.py b/tests/test_forward_refs/test_foobar.py
new file mode 100644
index 0000000..effbe3a
--- /dev/null
+++ b/tests/test_forward_refs/test_foobar.py
@@ -0,0 +1,18 @@
+from __future__ import annotations
+
+from dataclasses import dataclass
+from typing import Generic, TypeVar
+
+from mashumaro.mixins.json import DataClassJSONMixin
+
+T = TypeVar("T")
+
+
+@dataclass
+class Foo(Generic[T], DataClassJSONMixin):
+    x: T
+
+
+@dataclass
+class Bar(Foo[int]):
+    pass
