diff --git a/src/pybel/parser/parse_concept.py b/src/pybel/parser/parse_concept.py
index 0ea18dda..c8e94cad 100644
--- a/src/pybel/parser/parse_concept.py
+++ b/src/pybel/parser/parse_concept.py
@@ -13,7 +13,7 @@ from .exc import (
     UndefinedNamespaceWarning,
 )
 from .utils import quote, word
-from ..constants import DIRTY, NAME, NAMESPACE
+from ..constants import DIRTY, IDENTIFIER, NAME, NAMESPACE
 
 __all__ = [
     'ConceptParser',
@@ -47,9 +47,18 @@ class ConceptParser(BaseParser):
         self.default_namespace = set(default_namespace) if default_namespace is not None else None
         self.allow_naked_names = allow_naked_names
 
+        self.identifier_fqualified = (
+            word(NAMESPACE) +
+            Suppress(':') +
+            (word | quote)(IDENTIFIER) +
+            Suppress('!') +
+            (word | quote)(NAME)
+        )
+
         self.identifier_qualified = word(NAMESPACE) + Suppress(':') + (word | quote)(NAME)
 
         if self.namespace_to_terms:
+            self.identifier_fqualified.setParseAction(self.handle_identifier_qualified)
             self.identifier_qualified.setParseAction(self.handle_identifier_qualified)
 
         self.identifier_bare = (word | quote)(NAME)
@@ -60,7 +69,9 @@ class ConceptParser(BaseParser):
             self.handle_namespace_invalid
         )
 
-        super(ConceptParser, self).__init__(self.identifier_qualified | self.identifier_bare)
+        super().__init__(
+            self.identifier_fqualified | self.identifier_qualified | self.identifier_bare
+        )
 
     def has_enumerated_namespace(self, namespace: str) -> bool:
         """Check that the namespace has been defined by an enumeration."""

