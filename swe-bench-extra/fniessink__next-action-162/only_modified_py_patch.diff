diff --git a/docs/update_readme.py b/docs/update_readme.py
index acdba69..2ff52b6 100644
--- a/docs/update_readme.py
+++ b/docs/update_readme.py
@@ -10,9 +10,10 @@ import sys
 def do_command(line):
     """Run the command on the line and return its stdout and stderr."""
     command = shlex.split(line[2:])
-    if command[0] == "next-action" and "--write-config-file" not in command:
+    if command[0] == "next-action":
         command.insert(1, "--config")
-        command.insert(2, "docs/.next-action.cfg")
+        if "--write-config-file" not in command:
+            command.insert(2, "docs/.next-action.cfg")
     command_output = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE,
                                     universal_newlines=True)
     stdout = command_output.stdout.strip()
diff --git a/next_action/arguments/parser.py b/next_action/arguments/parser.py
index 35c9f6a..3184c55 100644
--- a/next_action/arguments/parser.py
+++ b/next_action/arguments/parser.py
@@ -50,12 +50,11 @@ class NextActionArgumentParser(argparse.ArgumentParser):
     def add_configuration_options(self) -> None:
         """Add the configuration options to the parser."""
         config_group = self.add_argument_group("Configuration options")
-        config_file = config_group.add_mutually_exclusive_group()
-        config_file.add_argument(
+        config_group.add_argument(
             "-c", "--config-file", metavar="<config.cfg>", type=str, default="~/.next-action.cfg", nargs="?",
             help="filename of configuration file to read (default: %(default)s); omit filename to not read any "
                  "configuration file")
-        config_file.add_argument(
+        config_group.add_argument(
             "-w", "--write-config-file", help="generate a sample configuration file and exit", action="store_true")
 
     def add_input_options(self) -> None:

