diff --git a/tests/test_outputter.py b/tests/test_outputter.py
index 6229985..5368858 100644
--- a/tests/test_outputter.py
+++ b/tests/test_outputter.py
@@ -107,6 +107,40 @@ class StringOutptterTestCase(TestCase):
         ])
         self.assertEqual(expected, output)
 
+    def test_multi_return_type(self):
+        lines = [
+            'def foo(arg1) -> List[',
+            '    int,',
+            '    int,',
+            ']:',
+            '    pass',
+        ]
+        docstrings = [{
+            'docstring': '"""foo.\n\n:param arg1:\n:rtype List[\n    int,\n    int,\n]:\n"""',
+            'start_lineno': 1,
+            'start_col': 0,
+            'end_lineno': 7,
+            'end_col': 0,
+            'is_doc_exists': False,
+        }]
+        output = StringOutptter().format(lines=lines, docstrings=docstrings, indent=4)
+        expected = '\n'.join([
+            'def foo(arg1) -> List[',
+            '    int,',
+            '    int,',
+            ']:',
+            '    """foo.',
+            '',
+            '    :param arg1:',
+            '    :rtype List[',
+            '        int,',
+            '        int,',
+            '    ]:',
+            '    """',
+            '    pass',
+        ])
+        self.assertEqual(expected, output)
+
 
 class JSONOutptterTestCase(TestCase):
     def test_same_lines(self):
diff --git a/tests/test_parser.py b/tests/test_parser.py
index 404112a..261b8e4 100644
--- a/tests/test_parser.py
+++ b/tests/test_parser.py
@@ -484,6 +484,37 @@ class ParseTestCase(TestCase):
             actual,
         )
 
+    def test_with_return_multi_line_type(self):
+        line = '\n'.join([
+            'def foo(arg1) -> Tuple[',
+            '    int,',
+            '    int,',
+            ']:',
+            '    pass',
+        ])
+        actual = parse(line)[0]
+        self.assertDictEqual(
+            {
+                'name': 'foo',
+                'params': [
+                    {
+                        'argument': 'arg1',
+                        'annotation': None,
+                        'default': None,
+                    },
+                ],
+                'return_type': 'Tuple[\n    int,\n    int,\n]',
+                'start_lineno': 1,
+                'start_col': 0,
+                'end_lineno': 5,
+                'end_col': 8,
+                'is_doc_exists': False,
+                'exceptions': [],
+                'yields': [],
+            },
+            actual,
+        )
+
     def test_with_defs(self):
         line = '\n'.join([
             'def bar(arg1) -> List[str]:',
