diff --git a/prefab_cloud_python/config_client.py b/prefab_cloud_python/config_client.py
index 7b25208..2d56c6e 100644
--- a/prefab_cloud_python/config_client.py
+++ b/prefab_cloud_python/config_client.py
@@ -55,6 +55,7 @@ class ConfigClient:
         self.checkpoint_freq_secs = 60
         self.config_loader = ConfigLoader(base_client)
         self.config_resolver = ConfigResolver(base_client, self.config_loader)
+        self._cache_path = None
         self.set_cache_path()
 
         if self.options.is_local_only():
@@ -209,6 +210,8 @@ class ConfigClient:
     def cache_configs(self, configs):
         if not self.options.use_local_cache:
             return
+        if not self.cache_path:
+            return
         with open(self.cache_path, "w") as f:
             f.write(MessageToJson(configs))
             logger.debug(f"Cached configs to {self.cache_path}")
@@ -216,6 +219,8 @@ class ConfigClient:
     def load_cache(self):
         if not self.options.use_local_cache:
             return False
+        if not self.cache_path:
+            return False
         try:
             with open(self.cache_path, "r") as f:
                 configs = Parse(f.read(), Prefab.Configs())
@@ -244,15 +249,19 @@ class ConfigClient:
         logger.info(f"Unlocked config via {source}")
 
     def set_cache_path(self):
-        dir = os.environ.get(
-            "XDG_CACHE_HOME", os.path.join(os.environ["HOME"], ".cache")
-        )
-        file_name = f"prefab.cache.{self.base_client.options.api_key_id}.json"
-        self.cache_path = os.path.join(dir, file_name)
+        home_dir_cache_path = None
+        home_dir = os.environ.get("HOME")
+        if home_dir:
+            home_dir_cache_path = os.path.join(home_dir, ".cache")
+        cache_path = os.environ.get("XDG_CACHE_HOME", home_dir_cache_path)
+        if cache_path:
+            file_name = f"prefab.cache.{self.base_client.options.api_key_id}.json"
+            self.cache_path = os.path.join(cache_path, file_name)
 
     @property
     def cache_path(self):
-        os.makedirs(os.path.dirname(self._cache_path), exist_ok=True)
+        if self._cache_path:
+            os.makedirs(os.path.dirname(self._cache_path), exist_ok=True)
         return self._cache_path
 
     @cache_path.setter
diff --git a/prefab_cloud_python/config_loader.py b/prefab_cloud_python/config_loader.py
index 7f942a5..f618e09 100644
--- a/prefab_cloud_python/config_loader.py
+++ b/prefab_cloud_python/config_loader.py
@@ -12,8 +12,8 @@ class ConfigLoader:
         self.base_client = base_client
         self.options = base_client.options
         self.highwater_mark = 0
-        self.classpath_config = self.__load_classpath_config()
-        self.local_overrides = self.__load_local_overrides()
+        self.classpath_config = self.__load_classpath_config() or {}
+        self.local_overrides = self.__load_local_overrides() or {}
         self.api_config = {}
 
     def calc_config(self):
@@ -50,8 +50,9 @@ class ConfigLoader:
     def __load_local_overrides(self):
         if self.options.has_datafile():
             return {}
-        override_dir = self.options.prefab_config_override_dir
-        return self.__load_config_from(override_dir)
+        if self.options.prefab_config_override_dir:
+            return self.__load_config_from(self.options.prefab_config_override_dir)
+        return {}
 
     def __load_config_from(self, dir):
         envs = self.options.prefab_envs
