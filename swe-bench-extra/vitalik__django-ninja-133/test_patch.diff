diff --git a/tests/test_docs/test_query.py b/tests/test_docs/test_query.py
index a7d055d..720ea95 100644
--- a/tests/test_docs/test_query.py
+++ b/tests/test_docs/test_query.py
@@ -63,16 +63,39 @@ def test_examples():
         # Schema
 
         assert client.get("/filter").json() == {
-            "filters": {"limit": 100, "offset": None, "query": None}
+            "filters": {
+                "limit": 100,
+                "offset": None,
+                "query": None,
+                "category__in": None,
+            }
         }
         assert client.get("/filter?limit=10").json() == {
-            "filters": {"limit": 10, "offset": None, "query": None}
+            "filters": {
+                "limit": 10,
+                "offset": None,
+                "query": None,
+                "category__in": None,
+            }
         }
         assert client.get("/filter?offset=10").json() == {
-            "filters": {"limit": 100, "offset": 10, "query": None}
+            "filters": {"limit": 100, "offset": 10, "query": None, "category__in": None}
         }
         assert client.get("/filter?query=10").json() == {
-            "filters": {"limit": 100, "offset": None, "query": "10"}
+            "filters": {
+                "limit": 100,
+                "offset": None,
+                "query": "10",
+                "category__in": None,
+            }
+        }
+        assert client.get("/filter?categories=a&categories=b").json() == {
+            "filters": {
+                "limit": 100,
+                "offset": None,
+                "query": None,
+                "category__in": ["a", "b"],
+            }
         }
 
         schema = api.get_openapi_schema("")
@@ -96,4 +119,14 @@ def test_examples():
                 "required": False,
                 "schema": {"title": "Query", "type": "string"},
             },
+            {
+                "in": "query",
+                "name": "categories",
+                "required": False,
+                "schema": {
+                    "title": "Categories",
+                    "type": "array",
+                    "items": {"type": "string"},
+                },
+            },
         ]
diff --git a/tests/test_lists.py b/tests/test_lists.py
index 71338cb..66b0ba9 100644
--- a/tests/test_lists.py
+++ b/tests/test_lists.py
@@ -1,7 +1,7 @@
 import pytest
 from typing import List
 from ninja import Router, Query, Form, Schema
-from pydantic import BaseModel
+from pydantic import BaseModel, Field
 from client import NinjaClient
 
 
@@ -12,7 +12,9 @@ router = Router()
 
 @router.post("/list1")
 def listview1(
-    request, query: List[int] = Query(...), form: List[int] = Form(...),
+    request,
+    query: List[int] = Query(...),
+    form: List[int] = Form(...),
 ):
     return {
         "query": query,
@@ -22,7 +24,9 @@ def listview1(
 
 @router.post("/list2")
 def listview2(
-    request, body: List[int], query: List[int] = Query(...),
+    request,
+    body: List[int],
+    query: List[int] = Query(...),
 ):
     return {
         "query": query,
@@ -52,11 +56,13 @@ def listviewdefault(request, body: List[int] = [1]):
 
 class Filters(Schema):
     tags: List[str] = []
+    other_tags: List[str] = Field([], alias="other_tags_alias")
 
 
 @router.post("/list4")
 def listview4(
-    request, filters: Filters = Query(...),
+    request,
+    filters: Filters = Query(...),
 ):
     return {
         "filters": filters,
@@ -96,19 +102,19 @@ client = NinjaClient(router)
             {"body": [1, 2]},
         ),
         (
-            "/list4?tags=a&tags=b",
+            "/list4?tags=a&tags=b&other_tags_alias=a&other_tags_alias=b",
             {},
-            {"filters": {"tags": ["a", "b"]}},
+            {"filters": {"tags": ["a", "b"], "other_tags": ["a", "b"]}},
         ),
         (
-            "/list4?tags=abc",
+            "/list4?tags=abc&other_tags_alias=abc",
             {},
-            {"filters": {"tags": ["abc"]}},
+            {"filters": {"tags": ["abc"], "other_tags": ["abc"]}},
         ),
         (
             "/list4",
             {},
-            {"filters": {"tags": []}},
+            {"filters": {"tags": [], "other_tags": []}},
         ),
     ]
     # fmt: on
