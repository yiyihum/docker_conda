diff --git a/tests/model_generator/conftest.py b/tests/model_generator/conftest.py
index a9b7af6..f3f75cc 100644
--- a/tests/model_generator/conftest.py
+++ b/tests/model_generator/conftest.py
@@ -313,6 +313,15 @@ def schema_one_to_self_relationship() -> JsonDict:
     }
 
 
+@pytest.fixture
+def schema_with_decimal_field() -> JsonDict:
+    return {
+        "type": "record",
+        "name": "demo",
+        "fields": [{"name": "foo", "type": {"type": "bytes", "logicalType": "decimal", "precision": 10, "scale": 3}}],
+    }
+
+
 @pytest.fixture
 def schema_with_logical_types() -> JsonDict:
     return {
diff --git a/tests/model_generator/test_model_generator.py b/tests/model_generator/test_model_generator.py
index 36b46e7..4864b5a 100644
--- a/tests/model_generator/test_model_generator.py
+++ b/tests/model_generator/test_model_generator.py
@@ -1,5 +1,4 @@
-from dataclasses_avroschema import ModelGenerator, types, field_utils
-
+from dataclasses_avroschema import ModelGenerator, field_utils, types
 from dataclasses_avroschema.model_generator.avro_to_python_utils import render_datetime
 
 
@@ -282,6 +281,23 @@ class User(AvroModel):
     assert result.strip() == expected_result.strip()
 
 
+def test_decimal_field(schema_with_decimal_field: types.JsonDict) -> None:
+    expected_result = """
+from dataclasses_avroschema import AvroModel
+from dataclasses_avroschema import types
+import dataclasses
+import decimal
+
+
+@dataclasses.dataclass
+class Demo(AvroModel):
+    foo: decimal.Decimal = types.Decimal(scale=3, precision=10)
+"""
+    model_generator = ModelGenerator()
+    result = model_generator.render(schema=schema_with_decimal_field)
+    assert result.strip() == expected_result.strip()
+
+
 def test_schema_logical_types(schema_with_logical_types: types.JsonDict) -> None:
     release_datetime = render_datetime(value=1570903062000, format=field_utils.TIMESTAMP_MILLIS)
     release_datetime_micro = render_datetime(value=1570903062000000, format=field_utils.TIMESTAMP_MICROS)
