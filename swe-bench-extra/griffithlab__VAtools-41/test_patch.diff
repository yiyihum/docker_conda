diff --git a/tests/test_vcf_genotype_annotator.py b/tests/test_vcf_genotype_annotator.py
index 8343771..28a1322 100644
--- a/tests/test_vcf_genotype_annotator.py
+++ b/tests/test_vcf_genotype_annotator.py
@@ -16,7 +16,7 @@ class VcfExpressionEncoderTests(unittest.TestCase):
     def test_source_compiles(self):
         self.assertTrue(py_compile.compile(self.executable))
 
-    def test_error_sample_name_already_exists(self):
+    def test_error_sample_name_already_exists_with_GT_field(self):
         with self.assertRaises(Exception) as context:
             command = [
                 os.path.join(self.test_data_dir, 'input.vcf'),
@@ -24,7 +24,7 @@ class VcfExpressionEncoderTests(unittest.TestCase):
                 '0/1',
             ]
             vcf_genotype_annotator.main(command)
-        self.assertTrue('VCF already contains a sample column for sample H_NJ-HCC1395-HCC1395.' in str(context.exception))
+        self.assertTrue('VCF already contains a sample column for sample H_NJ-HCC1395-HCC1395 with a GT field.' in str(context.exception))
 
     def test_no_sample_vcf(self):
         temp_path = tempfile.TemporaryDirectory()
@@ -61,3 +61,15 @@ class VcfExpressionEncoderTests(unittest.TestCase):
         vcf_genotype_annotator.main(command)
         self.assertTrue(cmp(os.path.join(self.test_data_dir, 'no_gt_in_format.genotype.vcf'), os.path.join(temp_path.name, 'input.genotype.vcf')))
         temp_path.cleanup()
+
+    def test_adding_gt_in_existing_sample(self):
+        temp_path = tempfile.TemporaryDirectory()
+        os.symlink(os.path.join(self.test_data_dir, 'input.no_gt_in_format.vcf'), os.path.join(temp_path.name, 'input.vcf'))
+        command = [
+            os.path.join(temp_path.name, 'input.vcf'),
+            'H_NJ-HCC1395-HCC1395',
+            '0/1',
+        ]
+        vcf_genotype_annotator.main(command)
+        self.assertTrue(cmp(os.path.join(self.test_data_dir, 'existing_sample.genotype.vcf'), os.path.join(temp_path.name, 'input.genotype.vcf')))
+        temp_path.cleanup()
