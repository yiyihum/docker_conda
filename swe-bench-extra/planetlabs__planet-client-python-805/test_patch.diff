diff --git a/tests/integration/test_orders_cli.py b/tests/integration/test_orders_cli.py
index 16c7a9f..4cfda87 100644
--- a/tests/integration/test_orders_cli.py
+++ b/tests/integration/test_orders_cli.py
@@ -461,10 +461,10 @@ def test_cli_orders_request_basic_success(expected_ids,
                                           stac_json):
     result = invoke([
         'request',
-        'PSOrthoTile',
-        'analytic',
+        '--item-type=PSOrthoTile',
+        '--bundle=analytic',
         '--name=test',
-        f'--id={id_string}',
+        id_string,
     ])
     assert not result.exception
 
@@ -485,45 +485,44 @@ def test_cli_orders_request_basic_success(expected_ids,
 def test_cli_orders_request_item_type_invalid(invoke):
     result = invoke([
         'request',
-        'invalid'
-        'analytic',
+        '--item-type=invalid'
+        '--bundle=analytic',
         '--name=test',
-        '--id=4500474_2133707_2021-05-20_2419',
+        '4500474_2133707_2021-05-20_2419',
     ])
     assert result.exit_code == 2
-    error_msg = "Usage: main orders request [OPTIONS] ITEM_TYPE BUNDLE"
-    assert error_msg in result.output
 
 
 def test_cli_orders_request_product_bundle_invalid(invoke):
     result = invoke([
         'request',
-        'PSScene'
-        'invalid',
+        '--item-type=PSScene'
+        '--bundle=invalid',
         '--name=test',
-        '--id=4500474_2133707_2021-05-20_2419',
+        '4500474_2133707_2021-05-20_2419',
     ])
     assert result.exit_code == 2
-    error_msg = "Usage: main orders request [OPTIONS] ITEM_TYPE BUNDLE"
-    assert error_msg in result.output
 
 
 def test_cli_orders_request_product_bundle_incompatible(invoke):
     result = invoke([
         'request',
-        'PSScene',
-        'analytic',
+        '--item-type=PSScene',
+        '--bundle=analytic',
         '--name=test',
-        '--id=4500474_2133707_2021-05-20_2419',
+        '4500474_2133707_2021-05-20_2419',
     ])
     assert result.exit_code == 2
-    error_msg = "Usage: main orders request [OPTIONS] ITEM_TYPE BUNDLE"
-    assert error_msg in result.output
 
 
 def test_cli_orders_request_id_empty(invoke):
-    result = invoke(
-        ['request', 'PSOrthoTile', 'analytic', '--name=test', '--id='])
+    result = invoke([
+        'request',
+        '--item-type=PSOrthoTile',
+        '--bundle=analytic',
+        '--name=test',
+        ''
+    ])
     assert result.exit_code == 2
     assert 'Entry cannot be an empty string.' in result.output
 
@@ -541,10 +540,10 @@ def test_cli_orders_request_clip_success(geom_fixture,
 
     result = invoke([
         'request',
-        'PSOrthoTile',
-        'analytic',
+        '--item-type=PSOrthoTile',
+        '--bundle=analytic',
         '--name=test',
-        '--id=4500474_2133707_2021-05-20_2419',
+        '4500474_2133707_2021-05-20_2419',
         f'--clip={json.dumps(geom)}',
     ])
     assert result.exit_code == 0
@@ -571,10 +570,10 @@ def test_cli_orders_request_clip_success(geom_fixture,
 def test_cli_orders_request_clip_invalid_geometry(invoke, point_geom_geojson):
     result = invoke([
         'request',
-        'PSOrthoTile',
-        'analytic',
+        '--item-type=PSOrthoTile',
+        '--bundle=analytic',
         '--name=test',
-        '--id=4500474_2133707_2021-05-20_2419',
+        '4500474_2133707_2021-05-20_2419',
         f'--clip={json.dumps(point_geom_geojson)}'
     ])
     assert result.exit_code == 2
@@ -588,10 +587,10 @@ def test_cli_orders_request_both_clip_and_tools(invoke, geom_geojson):
     # option values are valid json
     result = invoke([
         'request',
-        'PSOrthoTile',
-        'analytic',
+        '--item-type=PSOrthoTile',
+        '--bundle=analytic',
         '--name=test',
-        '--id=4500474_2133707_2021-05-20_2419',
+        '4500474_2133707_2021-05-20_2419',
         f'--clip={json.dumps(geom_geojson)}',
         f'--tools={json.dumps(geom_geojson)}'
     ])
@@ -613,10 +612,10 @@ def test_cli_orders_request_cloudconfig(invoke, stac_json):
 
     result = invoke([
         'request',
-        'PSOrthoTile',
-        'analytic',
+        '--item-type=PSOrthoTile',
+        '--bundle=analytic',
         '--name=test',
-        '--id=4500474_2133707_2021-05-20_2419',
+        '4500474_2133707_2021-05-20_2419',
         f'--cloudconfig={json.dumps(config_json)}',
     ])
     assert result.exit_code == 0
@@ -640,10 +639,10 @@ def test_cli_orders_request_cloudconfig(invoke, stac_json):
 def test_cli_orders_request_email(invoke, stac_json):
     result = invoke([
         'request',
-        'PSOrthoTile',
-        'analytic',
+        '--item-type=PSOrthoTile',
+        '--bundle=analytic',
         '--name=test',
-        '--id=4500474_2133707_2021-05-20_2419',
+        '4500474_2133707_2021-05-20_2419',
         '--email'
     ])
     assert result.exit_code == 0
@@ -671,10 +670,10 @@ def test_cli_orders_request_tools(invoke, geom_geojson, stac_json):
 
     result = invoke([
         'request',
-        'PSOrthoTile',
-        'analytic',
+        '--item-type=PSOrthoTile',
+        '--bundle=analytic',
         '--name=test',
-        '--id=4500474_2133707_2021-05-20_2419',
+        '4500474_2133707_2021-05-20_2419',
         f'--tools={json.dumps(tools_json)}'
     ])
 
@@ -699,10 +698,10 @@ def test_cli_orders_request_no_stac(invoke):
 
     result = invoke([
         'request',
-        'PSOrthoTile',
-        'analytic',
+        '--item-type=PSOrthoTile',
+        '--bundle=analytic',
         '--name=test',
-        '--id=4500474_2133707_2021-05-20_2419',
+        '4500474_2133707_2021-05-20_2419',
         '--no-stac'
     ])
 
