diff --git a/tests/__init__.py b/tests/__init__.py
index ecdd6c2..1b0364f 100644
--- a/tests/__init__.py
+++ b/tests/__init__.py
@@ -7,10 +7,8 @@ from tests.normalize import normalize_html
 
 TEST_ROOT = os.path.dirname(__file__)
 EXAMPLE_PATTERN = re.compile(
-    r'^`{32} example\n([\s\S]*?)'
-    r'^\.\n([\s\S]*?)'
-    r'^`{32}$|^#{1,6} *(.*)$',
-    flags=re.M
+    r"^`{32} example\n([\s\S]*?)" r"^\.\n([\s\S]*?)" r"^`{32}$|^#{1,6} *(.*)$",
+    flags=re.M,
 )
 
 
@@ -22,31 +20,30 @@ def parse_examples(text):
     for md, html, title in data:
         if title:
             count = 0
-            section = title.lower().replace(' ', '_')
+            section = title.lower().replace(" ", "_")
 
         if md and html:
             count += 1
-            name = '%s_%03d' % (section, count)
-            md = md.replace(u'→', '\t')
-            html = html.replace(u'→', '\t')
+            name = "%s_%03d" % (section, count)
+            md = md.replace(u"→", "\t")
+            html = html.replace(u"→", "\t")
             yield name, md, html
 
 
 class SpecTestSuite:
-
     @classmethod
     def load_spec(cls, spec_name):
         def attach_case(n, md, html):
             def method(self):
                 self.assert_case(md, html)
 
-            name = 'test_{}'.format(n)
+            name = "test_{}".format(n)
             method.__name__ = name
-            method.__doc__ = 'Run spec {} - {}'.format(spec_name, n)
+            method.__doc__ = "Run spec {} - {}".format(spec_name, n)
             setattr(cls, name, method)
 
-        spec_file = os.path.join(TEST_ROOT, 'spec/{}.txt'.format(spec_name))
-        with codecs.open(spec_file, encoding='utf-8') as f:
+        spec_file = os.path.join(TEST_ROOT, "spec/{}.txt".format(spec_name))
+        with codecs.open(spec_file, encoding="utf-8") as f:
             for name, md, html in parse_examples(f.read()):
                 if not cls.ignore_case(name):
                     attach_case(name, md, html)
@@ -58,3 +55,9 @@ class SpecTestSuite:
     def assert_case(self, text, html):
         result = self.markdown(text)
         assert normalize_html(result) == normalize_html(html)
+
+    # Extra cases that are not included
+    def test_mixed_tab_space_in_list_item(self):
+        text = "* foo\n\t* foo.bar"
+        html = "<ul><li>foo<ul><li>foo.bar</li></ul></li></ul>"
+        self.assert_case(text, html)
diff --git a/tests/test_spec.py b/tests/test_spec.py
index 8d90625..cb3df7d 100644
--- a/tests/test_spec.py
+++ b/tests/test_spec.py
@@ -4,23 +4,17 @@ from marko.ext.gfm import gfm
 
 
 class TestCommonMark(SpecTestSuite):
-
     @classmethod
     def setup_class(cls):
         cls.markdown = Markdown()
 
 
-TestCommonMark.load_spec('commonmark')
+TestCommonMark.load_spec("commonmark")
 
-GFM_IGNORE = [
-    'autolinks_015',
-    'autolinks_018',
-    'autolinks_019'
-]
+GFM_IGNORE = ["autolinks_015", "autolinks_018", "autolinks_019"]
 
 
 class TestGFM(SpecTestSuite):
-
     @classmethod
     def setup_class(cls):
         cls.markdown = gfm
@@ -30,4 +24,4 @@ class TestGFM(SpecTestSuite):
         return n in GFM_IGNORE
 
 
-TestGFM.load_spec('gfm')
+TestGFM.load_spec("gfm")
