diff --git a/docstring_parser/common.py b/docstring_parser/common.py
index 16f14d9..e3e5a56 100644
--- a/docstring_parser/common.py
+++ b/docstring_parser/common.py
@@ -137,10 +137,12 @@ class DocstringExample(DocstringMeta):
     def __init__(
         self,
         args: T.List[str],
+        snippet: T.Optional[str],
         description: T.Optional[str],
     ) -> None:
         """Initialize self."""
         super().__init__(args, description)
+        self.snippet = snippet
         self.description = description
 
 
diff --git a/docstring_parser/google.py b/docstring_parser/google.py
index a31e4a5..2eca8f4 100644
--- a/docstring_parser/google.py
+++ b/docstring_parser/google.py
@@ -136,7 +136,9 @@ class GoogleParser:
                 args=[section.key], description=desc, type_name=None
             )
         if section.key in EXAMPLES_KEYWORDS:
-            return DocstringExample(args=[section.key], description=desc)
+            return DocstringExample(
+                args=[section.key], snippet=None, description=desc
+            )
         if section.key in PARAM_KEYWORDS:
             raise ParseError("Expected paramenter name.")
         return DocstringMeta(args=[section.key], description=desc)
diff --git a/docstring_parser/numpydoc.py b/docstring_parser/numpydoc.py
index 7920f6c..e613f0f 100644
--- a/docstring_parser/numpydoc.py
+++ b/docstring_parser/numpydoc.py
@@ -7,10 +7,12 @@ import inspect
 import itertools
 import re
 import typing as T
+from textwrap import dedent
 
 from .common import (
     Docstring,
     DocstringDeprecated,
+    DocstringExample,
     DocstringMeta,
     DocstringParam,
     DocstringRaises,
@@ -223,6 +225,44 @@ class DeprecationSection(_SphinxSection):
         )
 
 
+class ExamplesSection(Section):
+    """Parser for numpydoc examples sections.
+
+    E.g. any section that looks like this:
+        >>> import numpy.matlib
+        >>> np.matlib.empty((2, 2))    # filled with random data
+        matrix([[  6.76425276e-320,   9.79033856e-307], # random
+                [  7.39337286e-309,   3.22135945e-309]])
+        >>> np.matlib.empty((2, 2), dtype=int)
+        matrix([[ 6600475,        0], # random
+                [ 6586976, 22740995]])
+    """
+
+    def parse(self, text: str) -> T.Iterable[DocstringMeta]:
+        """Parse ``DocstringExample`` objects from the body of this section.
+
+        :param text: section body text. Should be cleaned with
+                     ``inspect.cleandoc`` before parsing.
+        """
+        lines = dedent(text).strip().splitlines()
+        while lines:
+            snippet_lines = []
+            description_lines = []
+            while lines:
+                if not lines[0].startswith(">>>"):
+                    break
+                snippet_lines.append(lines.pop(0))
+            while lines:
+                if lines[0].startswith(">>>"):
+                    break
+                description_lines.append(lines.pop(0))
+            yield DocstringExample(
+                [self.key],
+                snippet="\n".join(snippet_lines) if snippet_lines else None,
+                description="\n".join(description_lines),
+            )
+
+
 DEFAULT_SECTIONS = [
     ParamSection("Parameters", "param"),
     ParamSection("Params", "param"),
@@ -244,8 +284,8 @@ DEFAULT_SECTIONS = [
     ReturnsSection("Return", "returns"),
     YieldsSection("Yields", "yields"),
     YieldsSection("Yield", "yields"),
-    Section("Examples", "examples"),
-    Section("Example", "examples"),
+    ExamplesSection("Examples", "examples"),
+    ExamplesSection("Example", "examples"),
     Section("Warnings", "warnings"),
     Section("Warning", "warnings"),
     Section("See Also", "see_also"),
