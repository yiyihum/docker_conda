diff --git a/docstring_parser/tests/test_numpydoc.py b/docstring_parser/tests/test_numpydoc.py
index 57c6ac6..60ef1c9 100644
--- a/docstring_parser/tests/test_numpydoc.py
+++ b/docstring_parser/tests/test_numpydoc.py
@@ -660,20 +660,80 @@ def test_simple_sections() -> None:
     assert docstring.meta[3].args == ["references"]
 
 
-def test_examples() -> None:
+@pytest.mark.parametrize(
+    "source, expected_results",
+    [
+        (
+            "Description\nExamples\n--------\nlong example\n\nmore here",
+            [
+                (None, "long example\n\nmore here"),
+            ],
+        ),
+        (
+            "Description\nExamples\n--------\n>>> test",
+            [
+                (">>> test", ""),
+            ],
+        ),
+        (
+            "Description\nExamples\n--------\n>>> testa\n>>> testb",
+            [
+                (">>> testa\n>>> testb", ""),
+            ],
+        ),
+        (
+            "Description\nExamples\n--------\n>>> test1\ndesc1",
+            [
+                (">>> test1", "desc1"),
+            ],
+        ),
+        (
+            "Description\nExamples\n--------\n"
+            ">>> test1a\n>>> test1b\ndesc1a\ndesc1b",
+            [
+                (">>> test1a\n>>> test1b", "desc1a\ndesc1b"),
+            ],
+        ),
+        (
+            "Description\nExamples\n--------\n"
+            ">>> test1\ndesc1\n>>> test2\ndesc2",
+            [
+                (">>> test1", "desc1"),
+                (">>> test2", "desc2"),
+            ],
+        ),
+        (
+            "Description\nExamples\n--------\n"
+            ">>> test1a\n>>> test1b\ndesc1a\ndesc1b\n"
+            ">>> test2a\n>>> test2b\ndesc2a\ndesc2b\n",
+            [
+                (">>> test1a\n>>> test1b", "desc1a\ndesc1b"),
+                (">>> test2a\n>>> test2b", "desc2a\ndesc2b"),
+            ],
+        ),
+        (
+            "Description\nExamples\n--------\n"
+            "    >>> test1a\n    >>> test1b\n    desc1a\n    desc1b\n"
+            "    >>> test2a\n    >>> test2b\n    desc2a\n    desc2b\n",
+            [
+                (">>> test1a\n>>> test1b", "desc1a\ndesc1b"),
+                (">>> test2a\n>>> test2b", "desc2a\ndesc2b"),
+            ],
+        ),
+    ],
+)
+def test_examples(
+    source, expected_results: T.List[T.Tuple[T.Optional[str], str]]
+) -> None:
     """Test parsing examples."""
-    docstring = parse(
-        """
-        Short description
-        Examples
-        --------
-        long example
-
-        more here
-        """
-    )
-    assert len(docstring.meta) == 1
-    assert docstring.meta[0].description == "long example\n\nmore here"
+    docstring = parse(source)
+    assert len(docstring.meta) == len(expected_results)
+    for meta, expected_result in zip(docstring.meta, expected_results):
+        assert meta.description == expected_result[1]
+    assert len(docstring.examples) == len(expected_results)
+    for example, expected_result in zip(docstring.examples, expected_results):
+        assert example.snippet == expected_result[0]
+        assert example.description == expected_result[1]
 
 
 @pytest.mark.parametrize(
@@ -944,6 +1004,32 @@ def test_deprecation(
             "    ValueError\n"
             "        description",
         ),
+        (
+            """
+            Description
+            Examples:
+            --------
+            >>> test1a
+            >>> test1b
+            desc1a
+            desc1b
+            >>> test2a
+            >>> test2b
+            desc2a
+            desc2b
+            """,
+            "Description\n"
+            "Examples:\n"
+            "--------\n"
+            ">>> test1a\n"
+            ">>> test1b\n"
+            "desc1a\n"
+            "desc1b\n"
+            ">>> test2a\n"
+            ">>> test2b\n"
+            "desc2a\n"
+            "desc2b",
+        ),
     ],
 )
 def test_compose(source: str, expected: str) -> None:
