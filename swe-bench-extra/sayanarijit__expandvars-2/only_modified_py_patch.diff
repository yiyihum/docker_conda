diff --git a/expandvars.py b/expandvars.py
index c93fb3a..d1e763a 100644
--- a/expandvars.py
+++ b/expandvars.py
@@ -11,6 +11,9 @@ __license__ = "MIT"
 __all__ = ["Expander", "expandvars"]
 
 
+ESCAPE_CHAR = "\\"
+
+
 def _valid_char(char):
     return char.isalnum() or char == "_"
 
@@ -45,7 +48,7 @@ class Expander(object):
             return
         variter = iter(vars_)
         c = next(variter)
-        if c == "\\":
+        if c == ESCAPE_CHAR:
             self.escape(variter)
             return
         if c == "$":
@@ -66,10 +69,12 @@ class Expander(object):
         try:
             c = next(variter)
         except StopIteration:
-            raise ValueError("escape chracter is not escaping anything")
+            raise ValueError("escape character is not escaping anything")
         if c == "$":
             self._result.append(c)
             c = self._next_or_done(variter)
+        else:
+            self._result.append(ESCAPE_CHAR)
         self.expand_val(variter, c)
 
     def process_buffr(self):
@@ -150,7 +155,7 @@ class Expander(object):
         if not c:
             self._result.append("$")
             return
-        if c == "\\":
+        if c == ESCAPE_CHAR:
             self.expand_val(variter, "$\\")
             return
 
@@ -161,7 +166,7 @@ class Expander(object):
         while _valid_char(c):
             self._buffr.append(c)
             c = self._next_or_done(variter)
-            if c == "\\":
+            if c == ESCAPE_CHAR:
                 self.escape(variter)
                 return
             if not c:
@@ -198,7 +203,7 @@ class Expander(object):
         while c and c != "$":
             self._result.append(c)
             c = self._next_or_done(variter)
-            if c == "\\":
+            if c == ESCAPE_CHAR:
                 self.escape(variter)
                 return
         if c:
diff --git a/setup.py b/setup.py
index 99b7ab9..6d5f61f 100644
--- a/setup.py
+++ b/setup.py
@@ -1,3 +1,4 @@
+import sys
 from codecs import open
 from os import path
 
@@ -12,6 +13,16 @@ here = path.abspath(path.dirname(__file__))
 with open(path.join(here, "README.md"), encoding="utf-8") as f:
     long_description = f.read()
 
+setup_requires = [
+    'pytest-runner'
+]
+
+tests_require = ['pytest', 'pytest-cov']
+
+dev_requires = ['tox']
+
+install_requires = []
+
 setup(
     name="expandvars",
     version=__version__,
@@ -49,6 +60,8 @@ setup(
     platforms=["Any"],
     keywords="expand system variables",
     packages=find_packages(exclude=["contrib", "docs", "tests", "examples"]),
-    install_requires=[],
-    extras_require={"testing": ["pytest>=4.4.1", 'pytest-cov>=2.7.1']},
+    install_requires=install_requires,
+    setup_requires=setup_requires,
+    tests_require=tests_require,
+    extras_require={"testing": tests_require, "dev": dev_requires},
 )
