diff --git a/src/structlog/threadlocal.py b/src/structlog/threadlocal.py
index ea221ac..31df92e 100644
--- a/src/structlog/threadlocal.py
+++ b/src/structlog/threadlocal.py
@@ -13,6 +13,8 @@ import uuid
 
 from typing import Any, Dict, Generator, Iterator, Type, TypeVar
 
+import structlog
+
 from ._config import BoundLoggerLazyProxy
 from .types import BindableLogger, Context, EventDict, WrappedLogger
 
@@ -169,6 +171,28 @@ class _ThreadLocalDictWrapper:
 _CONTEXT = threading.local()
 
 
+def get_threadlocal() -> Context:
+    """
+    Return a copy of the current thread-local context.
+
+    .. versionadded:: 21.2.0
+    """
+    return _get_context().copy()
+
+
+def get_merged_threadlocal(bound_logger: BindableLogger) -> Context:
+    """
+    Return a copy of the current thread-local context merged with the context
+    from *bound_logger*.
+
+    .. versionadded:: 21.2.0
+    """
+    ctx = _get_context().copy()
+    ctx.update(structlog.get_context(bound_logger))
+
+    return ctx
+
+
 def merge_threadlocal(
     logger: WrappedLogger, method_name: str, event_dict: EventDict
 ) -> EventDict:
@@ -181,7 +205,7 @@ def merge_threadlocal(
     .. versionadded:: 19.2.0
 
     .. versionchanged:: 20.1.0
-       This function used to be called ``merge_threalocal_context`` and that
+       This function used to be called ``merge_threadlocal_context`` and that
        name is still kept around for backward compatibility.
     """
     context = _get_context().copy()

