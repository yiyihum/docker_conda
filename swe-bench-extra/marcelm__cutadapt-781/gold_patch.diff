diff --git a/src/cutadapt/report.py b/src/cutadapt/report.py
index 84ff9e0..2b47d8e 100644
--- a/src/cutadapt/report.py
+++ b/src/cutadapt/report.py
@@ -177,16 +177,28 @@ class Statistics:
             if isinstance(modifier, PolyATrimmer):
                 self.poly_a_trimmed_lengths[i] = modifier.trimmed_bases
             elif isinstance(modifier, AdapterCutter):
-                assert self.with_adapters[i] is None
-                self.with_adapters[i] = modifier.with_adapters
-                self.adapter_stats[i] = list(modifier.adapter_statistics.values())
+                if self.with_adapters[i] is None:
+                    self.with_adapters[i] = modifier.with_adapters
+                    self.adapter_stats[i] = list(modifier.adapter_statistics.values())
+                else:
+                    self.with_adapters[i] += modifier.with_adapters  # type: ignore
+                    self.adapter_stats[i] += list(modifier.adapter_statistics.values())
             elif isinstance(modifier, ReverseComplementer):
-                assert self.with_adapters[i] is None
-                self.with_adapters[i] = modifier.adapter_cutter.with_adapters
-                self.adapter_stats[i] = list(
-                    modifier.adapter_cutter.adapter_statistics.values()
-                )
-                self.reverse_complemented = modifier.reverse_complemented
+                if self.with_adapters[i] is None:
+                    self.with_adapters[i] = modifier.adapter_cutter.with_adapters
+                    self.adapter_stats[i] = list(
+                        modifier.adapter_cutter.adapter_statistics.values()
+                    )
+                    self.reverse_complemented = modifier.reverse_complemented
+                else:
+                    assert self.with_adapters[i] is not None
+                    self.with_adapters[i] += modifier.adapter_cutter.with_adapters  # type: ignore
+                    self.adapter_stats[i] += list(
+                        modifier.adapter_cutter.adapter_statistics.values()
+                    )
+                    self.reverse_complemented = add_if_not_none(
+                        self.reverse_complemented, modifier.reverse_complemented
+                    )
 
     def as_json(self, gc_content: float = 0.5, one_line: bool = False) -> Dict:
         """
