diff --git a/README.md b/README.md
index 9230fe5..f5d6db7 100644
--- a/README.md
+++ b/README.md
@@ -77,6 +77,14 @@ Availability:
 123456789123456789123456789L  # 123456789123456789123456789
 ```
 
+### Octal literals
+
+Availability:
+- If `pyupgrade` is running in python 2.
+```python
+0755  # 0o755
+```
+
 
 ## Planned features
 
diff --git a/pyupgrade.py b/pyupgrade.py
index d305ad2..cac40ea 100644
--- a/pyupgrade.py
+++ b/pyupgrade.py
@@ -435,6 +435,20 @@ def _fix_long_literals(contents_text):
     return tokens_to_src(tokens)
 
 
+def _fix_octal_literals(contents_text):
+    def _fix_octal(s):
+        if not s.startswith('0') or not s.isdigit() or s == len(s) * '0':
+            return s
+        else:  # pragma: no cover (py2 only)
+            return '0o' + s[1:]
+
+    tokens = src_to_tokens(contents_text)
+    for i, token in enumerate(tokens):
+        if token.name == 'NUMBER':
+            tokens[i] = token._replace(src=_fix_octal(token.src))
+    return tokens_to_src(tokens)
+
+
 def fix_file(filename, args):
     with open(filename, 'rb') as f:
         contents_bytes = f.read()
@@ -450,6 +464,7 @@ def fix_file(filename, args):
     contents_text = _fix_format_literals(contents_text)
     contents_text = _fix_unicode_literals(contents_text, args.py3_only)
     contents_text = _fix_long_literals(contents_text)
+    contents_text = _fix_octal_literals(contents_text)
 
     if contents_text != contents_text_orig:
         print('Rewriting {}'.format(filename))
