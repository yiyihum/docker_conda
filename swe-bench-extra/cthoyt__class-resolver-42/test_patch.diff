diff --git a/tests/test_utils.py b/tests/test_utils.py
index e0b7278..3dc141f 100644
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -6,13 +6,30 @@ import enum
 import unittest
 from collections import Counter, defaultdict
 
-from class_resolver.utils import get_subclasses, normalize_with_default, same_module
+from class_resolver.utils import (
+    get_subclasses,
+    is_private,
+    normalize_with_default,
+    same_module,
+)
 from tests._private_extras import PrivateDict
 
 
 class TestUtilities(unittest.TestCase):
     """Test utilities."""
 
+    def test_is_private(self):
+        """Test whether a module should be considered private."""
+        self.assertFalse(is_private("A", "", main_is_private=False))
+        self.assertFalse(is_private("A", "", main_is_private=True))
+        self.assertTrue(is_private("_module", "", main_is_private=True))
+        self.assertTrue(is_private("_module", "", main_is_private=True))
+        self.assertTrue(is_private("A", "B._module", main_is_private=True))
+        self.assertTrue(is_private("A", "__main__", main_is_private=True))
+        self.assertFalse(is_private("A", "__main__", main_is_private=False))
+        self.assertTrue(is_private("_A", "__main__", main_is_private=True))
+        self.assertTrue(is_private("_A", "__main__", main_is_private=False))
+
     def test_same_module(self):
         """Test getting subclasses."""
         self.assertFalse(same_module(Counter, dict))
