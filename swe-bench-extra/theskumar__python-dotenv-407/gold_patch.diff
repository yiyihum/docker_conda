diff --git a/README.md b/README.md
index eb6bb53..a9d19bf 100644
--- a/README.md
+++ b/README.md
@@ -146,6 +146,11 @@ $ dotenv set EMAIL foo@example.org
 $ dotenv list
 USER=foo
 EMAIL=foo@example.org
+$ dotenv list --format=json
+{
+  "USER": "foo",
+  "EMAIL": "foo@example.org"
+}
 $ dotenv run -- python foo.py
 ```
 
diff --git a/src/dotenv/cli.py b/src/dotenv/cli.py
index 3411e34..b845b95 100644
--- a/src/dotenv/cli.py
+++ b/src/dotenv/cli.py
@@ -1,4 +1,6 @@
+import json
 import os
+import shlex
 import sys
 from subprocess import Popen
 from typing import Any, Dict, List
@@ -36,7 +38,11 @@ def cli(ctx: click.Context, file: Any, quote: Any, export: Any) -> None:
 
 @cli.command()
 @click.pass_context
-def list(ctx: click.Context) -> None:
+@click.option('--format', default='simple',
+              type=click.Choice(['simple', 'json', 'shell', 'export']),
+              help="The format in which to display the list. Default format is simple, "
+                   "which displays name=value without quotes.")
+def list(ctx: click.Context, format: bool) -> None:
     '''Display all the stored key/value.'''
     file = ctx.obj['FILE']
     if not os.path.isfile(file):
@@ -45,8 +51,16 @@ def list(ctx: click.Context) -> None:
             ctx=ctx
         )
     dotenv_as_dict = dotenv_values(file)
-    for k, v in dotenv_as_dict.items():
-        click.echo('%s=%s' % (k, v))
+    if format == 'json':
+        click.echo(json.dumps(dotenv_as_dict, indent=2, sort_keys=True))
+    else:
+        prefix = 'export ' if format == 'export' else ''
+        for k in sorted(dotenv_as_dict):
+            v = dotenv_as_dict[k]
+            if v is not None:
+                if format in ('export', 'shell'):
+                    v = shlex.quote(v)
+                click.echo('%s%s=%s' % (prefix, k, v))
 
 
 @cli.command()
