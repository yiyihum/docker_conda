diff --git a/src/ufoLib2/errors.py b/src/ufoLib2/errors.py
index 292b963..6ace0c5 100644
--- a/src/ufoLib2/errors.py
+++ b/src/ufoLib2/errors.py
@@ -1,5 +1,17 @@
 from __future__ import annotations
 
+from typing import Any
+
 
 class Error(Exception):
     """The base exception for ufoLib2."""
+
+
+class ExtrasNotInstalledError(Error):
+    """The extras required for this feature are not installed."""
+
+    def __init__(self, extras: str) -> None:
+        super().__init__(f"Extras not installed: ufoLib2[{extras}]")
+
+    def __call__(self, *args: Any, **kwargs: Any) -> None:
+        raise self
diff --git a/src/ufoLib2/serde/__init__.py b/src/ufoLib2/serde/__init__.py
index 0573abb..2659e9b 100644
--- a/src/ufoLib2/serde/__init__.py
+++ b/src/ufoLib2/serde/__init__.py
@@ -4,6 +4,7 @@ from functools import partialmethod
 from importlib import import_module
 from typing import IO, Any, AnyStr, Callable, Type
 
+from ufoLib2.errors import ExtrasNotInstalledError
 from ufoLib2.typing import PathLike, T
 
 _SERDE_FORMATS_ = ("json", "msgpack")
@@ -75,12 +76,9 @@ def serde(cls: Type[T]) -> Type[T]:
 
         try:
             serde_submodule = import_module(f"ufoLib2.serde.{fmt}")
-        except ImportError as e:
-            exc = e
-
-            def raise_error(*args: Any, **kwargs: Any) -> None:
-                raise exc
-
+        except ImportError as exc:
+            raise_error = ExtrasNotInstalledError(fmt)
+            raise_error.__cause__ = exc
             for method in ("loads", "load", "dumps", "dump"):
                 setattr(cls, f"{fmt}_{method}", raise_error)
         else:
