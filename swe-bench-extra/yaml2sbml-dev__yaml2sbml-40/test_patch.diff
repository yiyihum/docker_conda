diff --git a/tests/test_YamlModel.py b/tests/test_YamlModel.py
index a02407f..43842b5 100644
--- a/tests/test_YamlModel.py
+++ b/tests/test_YamlModel.py
@@ -254,6 +254,21 @@ class TestYamlModel(unittest.TestCase):
         model.delete_condition(condition_id)
         self.assertListEqual(model.get_condition_ids(), [])
 
+    def test_valid_model(self):
+        """
+        Tests, whether the resulting models are valid.
+        """
+        model = YamlModel()
+
+        model.set_time('t')
+        model.add_ode(state_id='x',
+                      right_hand_side='k_1 * x + t',
+                      initial_value=0)
+        model.add_parameter(parameter_id='k_1',
+                            nominal_value=1)
+
+        model.validate_model()
+
 
 if __name__ == '__main__':
     suite = unittest.TestSuite()
diff --git a/tests/test_yaml2sbml/ode_input_invalid_time_1.yaml b/tests/test_yaml2sbml/ode_input_invalid_time_1.yaml
new file mode 100644
index 0000000..08acc01
--- /dev/null
+++ b/tests/test_yaml2sbml/ode_input_invalid_time_1.yaml
@@ -0,0 +1,9 @@
+time:
+  - t
+odes:
+- initialValue: 0
+  rightHandSide: k_1 * x + t
+  stateId: x
+parameters:
+- nominalValue: 1
+  parameterId: k_1
diff --git a/tests/test_yaml2sbml/ode_input_invalid_time_2.yaml b/tests/test_yaml2sbml/ode_input_invalid_time_2.yaml
new file mode 100644
index 0000000..dedcf75
--- /dev/null
+++ b/tests/test_yaml2sbml/ode_input_invalid_time_2.yaml
@@ -0,0 +1,9 @@
+time:
+  - variable: t
+odes:
+- initialValue: 0
+  rightHandSide: k_1 * x + t
+  stateId: x
+parameters:
+- nominalValue: 1
+  parameterId: k_1
diff --git a/tests/test_yaml_validation.py b/tests/test_yaml_validation.py
index 19cce2f..0bebd4d 100644
--- a/tests/test_yaml_validation.py
+++ b/tests/test_yaml_validation.py
@@ -36,6 +36,18 @@ class TestYamlValidation(unittest.TestCase):
         with self.assertRaises(ValidationError):
             validate_yaml(file_in)
 
+    def test_catch_invalid_time_block_missing_variable_key(self):
+        # time block without kew word "variable"
+        file_in = os.path.join(self.test_folder, 'ode_input_invalid_time_1.yaml')
+        with self.assertRaises(ValidationError):
+            validate_yaml(file_in)
+
+    def test_catch_invalid_time_block_as_array(self):
+        # time block as array instead of single object
+        file_in = os.path.join(self.test_folder, 'ode_input_invalid_time_2.yaml')
+        with self.assertRaises(ValidationError):
+            validate_yaml(file_in)
+
 
 if __name__ == '__main__':
     suite = unittest.TestSuite()
