diff --git a/CHANGES b/CHANGES
index c9976ff..02157de 100644
--- a/CHANGES
+++ b/CHANGES
@@ -15,6 +15,8 @@ PyVISA Changelog
   - `p.u.get_shared_library_arch` now returns `p.u.PEMachineType` instead of a string
   - `p.u.get_arch` now returns a list of `p.u.ArchitectureType`
 - update `Resource` context manager type annotation to preserve derived type PR # 740
+- added support for using custom simulation files when using the `sim` backend
+  with `pyvisa-shell`. PR #774
 
 1.13.0 (22-12-2022)
 -------------------
diff --git a/docs/source/introduction/shell.rst b/docs/source/introduction/shell.rst
index cc4d7ed..5cd0662 100644
--- a/docs/source/introduction/shell.rst
+++ b/docs/source/introduction/shell.rst
@@ -158,6 +158,10 @@ You can invoke::
 to use python-sim as backend instead of ni backend.
 This can be used for example for testing of python-sim configuration.
 
+You can include a specific file to use for the simulated backend::
+
+    pyvisa-shell -b file.yaml@sim
+
 You can invoke::
 
     pyvisa-shell -b py
diff --git a/pyvisa/cmd_line_tools.py b/pyvisa/cmd_line_tools.py
index f8218a4..a31f23b 100644
--- a/pyvisa/cmd_line_tools.py
+++ b/pyvisa/cmd_line_tools.py
@@ -7,6 +7,7 @@ This file is part of PyVISA.
 :license: MIT, see LICENSE for more details.
 
 """
+import argparse
 from typing import Optional
 
 
@@ -50,13 +51,27 @@ def visa_main(command: Optional[str] = None) -> None:
     elif args.command == "shell":
         from pyvisa import shell
 
-        shell.main("@" + args.backend if args.backend else "")
+        backend = _create_backend_str(args)
+        shell.main(backend)
     else:
         raise ValueError(
             f"Unknown command {args.command}. Valid values are: info and shell"
         )
 
 
+def _create_backend_str(args: argparse.Namespace) -> str:
+    """Create the backend string from the CLI arguments."""
+    if not args.backend:
+        return ""
+
+    # User already entered things correctly like "@py" or "file.yaml@sim"
+    if "@" in args.backend:
+        return args.backend
+
+    # Keep the current functionality
+    return "@" + args.backend
+
+
 def visa_shell() -> None:
     """Run the VISA shell CLI program."""
     visa_main("shell")
