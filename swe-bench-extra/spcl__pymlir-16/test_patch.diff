diff --git a/tests/test_syntax.py b/tests/test_syntax.py
index a785b23..37208de 100644
--- a/tests/test_syntax.py
+++ b/tests/test_syntax.py
@@ -215,6 +215,24 @@ def test_generic_dialect_std(parser: Optional[Parser] = None):
     module = parser.parse(code)
     print(module.pretty())
 
+def test_generic_dialect_std_cond_br(parser: Optional[Parser] = None):
+    code = '''
+"module"() ( {
+"func"() ( {
+^bb0(%arg0: i32):  // no predecessors
+    %c1_i32 = "std.constant"() {value = 1 : i32} : () -> i32
+    %0 = "std.cmpi"(%arg0, %c1_i32) {predicate = 3 : i64} : (i32, i32) -> i1
+    "std.cond_br"(%0)[^bb1, ^bb2] {operand_segment_sizes = dense<[1, 0, 0]> : vector<3xi32>} : (i1) -> ()
+^bb1:  // pred: ^bb0
+    "std.return"(%c1_i32) : (i32) -> ()
+^bb2:  // pred: ^bb0
+    "std.return"(%c1_i32) : (i32) -> ()
+}) {sym_name = "mlir_entry", type = (i32) -> i32} : () -> ()
+}) : () -> ()
+    '''
+    parser = parser or Parser()
+    module = parser.parse(code)
+    print(module.pretty())
 
 def test_generic_dialect_llvm(parser: Optional[Parser] = None):
     code = '''
@@ -255,5 +273,6 @@ if __name__ == '__main__':
     test_affine(p)
     test_definitions(p)
     test_generic_dialect_std(p)
+    test_generic_dialect_std_cond_br(p)
     test_generic_dialect_llvm(p)
     test_integer_sign(p)
