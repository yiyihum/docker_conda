diff --git a/tests/test_ast_language.py b/tests/test_ast_language.py
index 1383477..b83cb8d 100644
--- a/tests/test_ast_language.py
+++ b/tests/test_ast_language.py
@@ -231,3 +231,9 @@ def test_Choose():
                          n=unwrap_ast(ast.parse('2')))
     assert_equivalent_python_ast_and_text_ast(wrap_ast(choose_node),
                                               '(Choose data_source 2)')
+
+
+def test_Last():
+    first_node = Last(source=unwrap_ast(ast.parse('data_source')))
+    assert_equivalent_python_ast_and_text_ast(wrap_ast(first_node),
+                                              '(Last data_source)')
diff --git a/tests/test_linq_util.py b/tests/test_linq_util.py
index c603f3d..cfc7e9c 100644
--- a/tests/test_linq_util.py
+++ b/tests/test_linq_util.py
@@ -316,3 +316,22 @@ def test_choose_composite():
 def test_choose_bad():
     with pytest.raises(SyntaxError):
         insert_linq_nodes(ast.parse('the_source.Choose()'))
+
+
+def test_last():
+    initial_ast = ast.parse("the_source.Last()")
+    final_ast = insert_linq_nodes(initial_ast)
+    expected_ast = wrap_ast(Last(source=unwrap_ast(ast.parse('the_source'))))
+    assert_ast_nodes_are_equal(final_ast, expected_ast)
+
+
+def test_last_composite():
+    initial_ast = ast.parse("the_source.Last().Last()")
+    final_ast = insert_linq_nodes(initial_ast)
+    expected_ast = wrap_ast(Last(source=Last(source=unwrap_ast(ast.parse('the_source')))))
+    assert_ast_nodes_are_equal(final_ast, expected_ast)
+
+
+def test_last_bad():
+    with pytest.raises(SyntaxError):
+        insert_linq_nodes(ast.parse('the_source.Last(None)'))
