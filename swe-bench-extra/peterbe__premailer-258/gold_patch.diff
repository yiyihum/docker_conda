diff --git a/CHANGES.rst b/CHANGES.rst
index 85c1be6..debbd61 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,6 +4,10 @@ premailer Changes
 Peter's note: Unfortunately, ``premailer`` didn't use to keep a change log. But it's
 never too late to start, so let's start here and now.
 
+Unreleased
+----------
+* New option ``session=None`` to provide the session used for making http requests.
+
 3.9.0
 -----
 
diff --git a/README.rst b/README.rst
index 0dad963..1b6b8cc 100644
--- a/README.rst
+++ b/README.rst
@@ -137,6 +137,7 @@ The ``transform`` shortcut function transforms the given HTML using the defaults
     allow_network=True # allow network access to fetch linked css files
     allow_insecure_ssl=False # Don't allow unverified SSL certificates for external links
     allow_loading_external_files=False # Allow loading any non-HTTP external file URL
+    session=None # Session used for http requests - supply your own for caching or to provide authentication
 
 For more advanced options, check out the code of the ``Premailer`` class
 and all its options in its constructor.
diff --git a/premailer/premailer.py b/premailer/premailer.py
index b9d1390..66907ca 100644
--- a/premailer/premailer.py
+++ b/premailer/premailer.py
@@ -140,6 +140,7 @@ class Premailer(object):
         allow_network=True,
         allow_insecure_ssl=False,
         allow_loading_external_files=False,
+        session=None,
     ):
         self.html = html
         self.base_url = base_url
@@ -185,6 +186,7 @@ class Premailer(object):
         self.allow_network = allow_network
         self.allow_insecure_ssl = allow_insecure_ssl
         self.allow_loading_external_files = allow_loading_external_files
+        self.session = session or requests
 
         if cssutils_logging_handler:
             cssutils.log.addHandler(cssutils_logging_handler)
@@ -568,7 +570,7 @@ class Premailer(object):
             return out
 
     def _load_external_url(self, url):
-        response = requests.get(url, verify=not self.allow_insecure_ssl)
+        response = self.session.get(url, verify=not self.allow_insecure_ssl)
         response.raise_for_status()
         return response.text
 
