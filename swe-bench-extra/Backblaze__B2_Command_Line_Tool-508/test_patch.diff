diff --git a/test/test_bucket.py b/test/test_bucket.py
index 5d4633f..2601d28 100644
--- a/test/test_bucket.py
+++ b/test/test_bucket.py
@@ -242,8 +242,8 @@ class TestLs(TestCaseWithBucket):
         self.bucket.upload_bytes(data, 'ccc')
         expected = [
             ('9998', 'bb/1', 11, 'upload', None), ('9995', 'bb/2', 11, 'upload', None),
-            ('9996', 'bb/2', 11, 'upload', None), ('9997', 'bb/2', 11, 'upload',
-                                                   None), ('9994', 'bb/3', 11, 'upload', None)
+            ('9996', 'bb/2', 11, 'upload', None), ('9997', 'bb/2', 11, 'upload', None),
+            ('9994', 'bb/3', 11, 'upload', None)
         ]
         actual = [
             (info.id_, info.file_name, info.size, info.action, folder)
diff --git a/test/test_console_tool.py b/test/test_console_tool.py
index 3dbcc66..6ef2af7 100644
--- a/test/test_console_tool.py
+++ b/test/test_console_tool.py
@@ -1059,6 +1059,38 @@ class TestConsoleTool(TestBase):
             ''' % (mtime)
             self._run_command(['list_file_names', 'my-bucket'], expected_stdout, '', 0)
 
+    def test_sync_exclude_all_symlinks(self):
+        self._authorize_account()
+        self._create_my_bucket()
+
+        with TempDir() as temp_dir:
+            self._make_local_file(temp_dir, 'test.txt')
+            os.symlink('test.txt', os.path.join(temp_dir, 'alink'))
+            expected_stdout = '''
+            upload test.txt
+            '''
+
+            command = [
+                'sync', '--threads', '1', '--noProgress', '--excludeAllSymlinks', temp_dir,
+                'b2://my-bucket'
+            ]
+            self._run_command(command, expected_stdout, '', 0)
+
+    def test_sync_dont_exclude_all_symlinks(self):
+        self._authorize_account()
+        self._create_my_bucket()
+
+        with TempDir() as temp_dir:
+            self._make_local_file(temp_dir, 'test.txt')
+            os.symlink('test.txt', os.path.join(temp_dir, 'alink'))
+            expected_stdout = '''
+            upload alink
+            upload test.txt
+            '''
+
+            command = ['sync', '--threads', '1', '--noProgress', temp_dir, 'b2://my-bucket']
+            self._run_command(command, expected_stdout, '', 0)
+
     def test_ls(self):
         self._authorize_account()
         self._create_my_bucket()
diff --git a/test/test_raw_api.py b/test/test_raw_api.py
index cf44d20..148ba17 100644
--- a/test/test_raw_api.py
+++ b/test/test_raw_api.py
@@ -44,8 +44,9 @@ class TestRawAPIFilenames(TestBase):
         :param exception_message: regexp that matches the exception's detailed message
         """
         print(
-            u"Filename \"{0}\" should raise UnusableFileName(\".*{1}.*\")."
-            .format(filename, exception_message)
+            u"Filename \"{0}\" should raise UnusableFileName(\".*{1}.*\").".format(
+                filename, exception_message
+            )
         )
         with self.assertRaisesRegexp(UnusableFileName, exception_message):
             self.raw_api.check_b2_filename(filename)
diff --git a/test/test_sync.py b/test/test_sync.py
index 4c8f856..369dddc 100644
--- a/test/test_sync.py
+++ b/test/test_sync.py
@@ -412,6 +412,7 @@ class FakeArgs(object):
         debugLogs=True,
         dryRun=False,
         allowEmptySource=False,
+        excludeAllSymlinks=False,
     ):
         self.delete = delete
         self.keepDays = keepDays
@@ -431,6 +432,7 @@ class FakeArgs(object):
         self.debugLogs = debugLogs
         self.dryRun = dryRun
         self.allowEmptySource = allowEmptySource
+        self.excludeAllSymlinks = excludeAllSymlinks
 
 
 def b2_file(name, mod_times, size=10):
@@ -456,8 +458,8 @@ def b2_file(name, mod_times, size=10):
     """
     versions = [
         FileVersion(
-            'id_%s_%d' % (name[0], abs(mod_time)), 'folder/' + name, abs(mod_time), 'upload'
-            if 0 < mod_time else 'hide', size
+            'id_%s_%d' % (name[0], abs(mod_time)), 'folder/' + name, abs(mod_time),
+            'upload' if 0 < mod_time else 'hide', size
         ) for mod_time in mod_times
     ]  # yapf disable
     return File(name, versions)
@@ -496,6 +498,7 @@ class TestExclusions(TestSync):
             exclude_dir_regexes=fakeargs.excludeDirRegex,
             exclude_file_regexes=fakeargs.excludeRegex,
             include_file_regexes=fakeargs.includeRegex,
+            exclude_all_symlinks=fakeargs.excludeAllSymlinks
         )
         actions = list(
             make_folder_sync_actions(
diff --git a/test_b2_command_line.py b/test_b2_command_line.py
index e04c21a..d6a5175 100644
--- a/test_b2_command_line.py
+++ b/test_b2_command_line.py
@@ -680,6 +680,38 @@ def _sync_test_using_dir(b2_tool, bucket_name, dir_):
             ], file_version_summary(file_versions)
         )
 
+        # confirm symlink is skipped
+        write_file(p('linktarget'), b'hello')
+        os.symlink('linktarget', p('alink'))
+
+        b2_tool.should_succeed(
+            ['sync', '--noProgress', '--excludeAllSymlinks', dir_path, b2_sync_point],
+        )
+        file_versions = b2_tool.list_file_versions(bucket_name)
+        should_equal(
+            [
+                '+ ' + prefix + 'c',
+                '+ ' + prefix + 'c',
+                '+ ' + prefix + 'c',
+                '+ ' + prefix + 'linktarget',
+            ],
+            file_version_summary(file_versions),
+        )
+
+        # confirm symlink target is uploaded (with symlink's name)
+        b2_tool.should_succeed(['sync', '--noProgress', dir_path, b2_sync_point])
+        file_versions = b2_tool.list_file_versions(bucket_name)
+        should_equal(
+            [
+                '+ ' + prefix + 'alink',
+                '+ ' + prefix + 'c',
+                '+ ' + prefix + 'c',
+                '+ ' + prefix + 'c',
+                '+ ' + prefix + 'linktarget',
+            ],
+            file_version_summary(file_versions),
+        )
+
 
 def sync_down_test(b2_tool, bucket_name):
     sync_down_helper(b2_tool, bucket_name, 'sync')
