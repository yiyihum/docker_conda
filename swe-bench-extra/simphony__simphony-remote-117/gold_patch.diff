diff --git a/remoteappmanager/db/csv_db.py b/remoteappmanager/db/csv_db.py
index 99227dc..7c8d6d9 100644
--- a/remoteappmanager/db/csv_db.py
+++ b/remoteappmanager/db/csv_db.py
@@ -44,6 +44,7 @@ Note
 """
 
 import csv
+import hashlib
 
 from remoteappmanager.db.interfaces import (
     ABCAccounting, ABCApplication, ABCApplicationPolicy)
@@ -132,9 +133,11 @@ class CSVAccounting(ABCAccounting):
 
                 # Save the configuration
                 # Note that we don't filter existing duplicate entry
+                mapping_id_prehex = '_'.join((application.image, str(count)))
                 self.all_records.setdefault(username, []).append(
-                    ('_'.join((application.image, str(count))),
-                     application, application_policy))
+                    (hashlib.md5(mapping_id_prehex.encode('u8')).hexdigest(),
+                     application,
+                     application_policy))
 
     def get_user_by_name(self, user_name):
         """ Return a CSVUser for a given user_name, or return
diff --git a/remoteappmanager/restresources/container.py b/remoteappmanager/restresources/container.py
index 864e1fd..3191c6b 100644
--- a/remoteappmanager/restresources/container.py
+++ b/remoteappmanager/restresources/container.py
@@ -202,7 +202,7 @@ class Container(Resource):
         server_url = "http://{}:{}{}/".format(
             container.ip,
             container.port,
-            url_path_join(self.application.command_line_config.base_url,
+            url_path_join(self.application.command_line_config.base_urlpath,
                           container.urlpath))
 
         yield _wait_for_http_server_2xx(
