diff --git a/docs/config_reference.rst b/docs/config_reference.rst
index 356a97ce..d03e882f 100644
--- a/docs/config_reference.rst
+++ b/docs/config_reference.rst
@@ -467,6 +467,7 @@ ReFrame can launch containerized applications, but you need to configure properl
    The type of the container platform.
    Available values are the following:
 
+   - ``Apptainer``: The `Apptainer <https://apptainer.org/>`__ container runtime.
    - ``Docker``: The `Docker <https://www.docker.com/>`__ container runtime.
    - ``Sarus``: The `Sarus <https://sarus.readthedocs.io/>`__ container runtime.
    - ``Shifter``: The `Shifter <https://github.com/NERSC/shifter>`__ container runtime.
diff --git a/reframe/core/containers.py b/reframe/core/containers.py
index 15be3766..6182b3d8 100644
--- a/reframe/core/containers.py
+++ b/reframe/core/containers.py
@@ -243,6 +243,7 @@ class Singularity(ContainerPlatform):
     def __init__(self):
         super().__init__()
         self.with_cuda = False
+        self._launch_command = 'singularity'
 
     def emit_prepare_commands(self, stagedir):
         return []
@@ -259,10 +260,23 @@ class Singularity(ContainerPlatform):
 
         run_opts += self.options
         if self.command:
-            return (f'singularity exec {" ".join(run_opts)} '
+            return (f'{self._launch_command} exec {" ".join(run_opts)} '
                     f'{self.image} {self.command}')
 
-        return f'singularity run {" ".join(run_opts)} {self.image}'
+        return f'{self._launch_command} run {" ".join(run_opts)} {self.image}'
+
+
+class Apptainer(Singularity):
+    '''Container platform backend for running containers with `Apptainer
+    <https://apptainer.org/>`__.
+
+    .. versionadded:: 4.0.0
+
+    '''
+
+    def __init__(self):
+        super().__init__()
+        self._launch_command = 'apptainer'
 
 
 class ContainerPlatformField(fields.TypedField):
