diff --git a/git_machete/client.py b/git_machete/client.py
index 556fa3d..d1d9146 100644
--- a/git_machete/client.py
+++ b/git_machete/client.py
@@ -1631,6 +1631,7 @@ class MacheteClient:
             *,
             branch: LocalBranchShortName,
             is_called_from_traverse: bool,
+            is_called_from_create_pr: bool,
             opt_push_untracked: bool,
             opt_push_tracked: bool,
             opt_yes: bool
@@ -1654,6 +1655,7 @@ class MacheteClient:
                 new_remote=rems[index],
                 branch=branch,
                 is_called_from_traverse=is_called_from_traverse,
+                is_called_from_create_pr=is_called_from_create_pr,
                 opt_push_untracked=opt_push_untracked,
                 opt_push_tracked=opt_push_tracked,
                 opt_yes=opt_yes)
@@ -1667,12 +1669,13 @@ class MacheteClient:
             new_remote: str,
             branch: LocalBranchShortName,
             is_called_from_traverse: bool,
+            is_called_from_create_pr: bool,
             opt_push_untracked: bool,
             opt_push_tracked: bool,
             opt_yes: bool
     ) -> None:
         rems: List[str] = self.__git.get_remotes()
-        can_pick_other_remote = len(rems) > 1
+        can_pick_other_remote = len(rems) > 1 and not is_called_from_create_pr
         other_remote_choice = "o[ther-remote]" if can_pick_other_remote else ""
         remote_branch = RemoteBranchShortName.of(f"{new_remote}/{branch}")
         if not self.__git.get_commit_sha_by_revision(remote_branch):
@@ -1694,6 +1697,7 @@ class MacheteClient:
                     self.__pick_remote(
                         branch=branch,
                         is_called_from_traverse=is_called_from_traverse,
+                        is_called_from_create_pr=is_called_from_create_pr,
                         opt_push_untracked=opt_push_untracked,
                         opt_push_tracked=opt_push_tracked,
                         opt_yes=opt_yes)
@@ -1708,6 +1712,7 @@ class MacheteClient:
                     self.__pick_remote(
                         branch=branch,
                         is_called_from_traverse=is_called_from_traverse,
+                        is_called_from_create_pr=is_called_from_create_pr,
                         opt_push_untracked=opt_push_untracked,
                         opt_push_tracked=opt_push_tracked,
                         opt_yes=opt_yes)
@@ -1783,6 +1788,7 @@ class MacheteClient:
             self.__pick_remote(
                 branch=branch,
                 is_called_from_traverse=is_called_from_traverse,
+                is_called_from_create_pr=is_called_from_create_pr,
                 opt_push_untracked=opt_push_untracked,
                 opt_push_tracked=opt_push_tracked,
                 opt_yes=opt_yes)
@@ -1994,9 +2000,24 @@ class MacheteClient:
         self.flush_caches()
 
         base: Optional[LocalBranchShortName] = self.up_branch.get(LocalBranchShortName.of(head))
+        if not base:
+            raise MacheteException(f'Could not determine base branch for PR. Branch `{head}` is a root branch.')
         org: str
         repo: str
-        _, (org, repo) = self.__derive_remote_and_github_org_and_repo()
+        remote, (org, repo) = self.__derive_remote_and_github_org_and_repo()
+        print(f"Fetching {remote}...")
+        self.__git.fetch_remote(remote)
+        if '/'.join([remote, base]) not in self.__git.get_remote_branches():
+            warn(f'Base branch for this PR (`{base}`) is not found on remote, pushing...')
+            self.handle_untracked_branch(
+                branch=base,
+                new_remote=remote,
+                is_called_from_traverse=False,
+                is_called_from_create_pr=True,
+                opt_push_tracked=False,
+                opt_push_untracked=True,
+                opt_yes=False)
+
         current_user: Optional[str] = git_machete.github.derive_current_user_login()
         debug(f'create_github_pr({head})', f'organization is {org}, repository is {repo}')
         debug(f'create_github_pr({head})', 'current GitHub user is ' + (current_user or '<none>'))
@@ -2079,13 +2100,16 @@ class MacheteClient:
                 new_remote=rmt,
                 branch=branch,
                 is_called_from_traverse=is_called_from_traverse,
+                is_called_from_create_pr=False,
                 opt_push_untracked=opt_push_untracked,
                 opt_push_tracked=opt_push_tracked,
                 opt_yes=opt_yes)
         elif len(rems) == 1:
             self.handle_untracked_branch(
-                new_remote=rems[0], branch=branch,
+                new_remote=rems[0],
+                branch=branch,
                 is_called_from_traverse=is_called_from_traverse,
+                is_called_from_create_pr=False,
                 opt_push_untracked=opt_push_untracked,
                 opt_push_tracked=opt_push_tracked,
                 opt_yes=opt_yes)
@@ -2094,6 +2118,7 @@ class MacheteClient:
                 new_remote="origin",
                 branch=branch,
                 is_called_from_traverse=is_called_from_traverse,
+                is_called_from_create_pr=False,
                 opt_push_untracked=opt_push_untracked,
                 opt_push_tracked=opt_push_tracked,
                 opt_yes=opt_yes)
@@ -2103,6 +2128,7 @@ class MacheteClient:
             self.__pick_remote(
                 branch=branch,
                 is_called_from_traverse=is_called_from_traverse,
+                is_called_from_create_pr=False,
                 opt_push_untracked=opt_push_untracked,
                 opt_push_tracked=opt_push_tracked,
                 opt_yes=opt_yes)
