diff --git a/tests/integration/test_core.py b/tests/integration/test_core.py
new file mode 100644
index 0000000..c462889
--- /dev/null
+++ b/tests/integration/test_core.py
@@ -0,0 +1,17 @@
+"""
+Tests for ansible invocation
+"""
+import pytest
+from flexmock import flexmock
+
+from ansible_bender import utils
+from ansible_bender.core import run_playbook
+from tests.spellbook import C7_AP_VER_OUT
+
+
+def test_ansibles_python():
+    flexmock(utils, run_cmd=lambda *args, **kwargs: C7_AP_VER_OUT),
+    with pytest.raises(RuntimeError) as ex:
+        run_playbook(None, None, None, None)
+    assert str(ex.value).startswith(
+        "ansible-bender is written in python 3 and does not work in python 2,\n")
diff --git a/tests/spellbook.py b/tests/spellbook.py
index 723f4fe..1635998 100644
--- a/tests/spellbook.py
+++ b/tests/spellbook.py
@@ -31,6 +31,15 @@ change_layering_playbook = os.path.join(data_dir, "change_layering.yaml")
 bad_playbook_path = os.path.join(data_dir, "bad_playbook.yaml")
 base_image = "docker.io/library/python:3-alpine"
 
+C7_AP_VER_OUT = """\
+ansible-playbook 2.4.2.0
+  config file = /etc/ansible/ansible.cfg
+  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
+  ansible python module location = /usr/lib/python2.7/site-packages/ansible
+  executable location = /usr/bin/ansible-playbook
+  python version = 2.7.5 (default, Oct 30 2018, 23:45:53) [GCC 4.8.5 20150623 (Red Hat 4.8.5-36)]
+"""
+
 
 def random_word(length):
     # https://stackoverflow.com/a/2030081/909579
diff --git a/tests/unit/test_utils.py b/tests/unit/test_utils.py
index 0eb0883..5960da9 100644
--- a/tests/unit/test_utils.py
+++ b/tests/unit/test_utils.py
@@ -1,9 +1,12 @@
 import re
 
 import pytest
+from flexmock import flexmock
 
+from ansible_bender import utils
 from ansible_bender.db import generate_working_cont_name
-from ansible_bender.utils import run_cmd, graceful_get
+from ansible_bender.utils import run_cmd, graceful_get, ap_command_exists, is_ansibles_python_2
+from tests.spellbook import C7_AP_VER_OUT
 
 
 def test_run_cmd():
@@ -39,3 +42,20 @@ def test_graceful_g_w_default():
     assert graceful_get(inp, 1, default="asd") == {2: 3}
     assert graceful_get(inp, 1, 2, default="asd") == 3
     assert graceful_get(inp, 1, 2, 4, default="asd") == "asd"
+
+
+@pytest.mark.parametrize("m,is_py2", (
+    (object, False),  # no mocking
+    (
+        lambda: flexmock(utils, run_cmd=lambda *args, **kwargs: C7_AP_VER_OUT),
+        True
+    ),
+    (
+        lambda: flexmock(utils, run_cmd=lambda *args, **kwargs: "nope"),
+        False
+    ),
+))
+def test_ansibles_python(m, is_py2):
+    m()
+    cmd = ap_command_exists()
+    assert is_ansibles_python_2(cmd) == is_py2
