diff --git a/lightstep/http_converter.py b/lightstep/http_converter.py
index c17573d..a05c582 100644
--- a/lightstep/http_converter.py
+++ b/lightstep/http_converter.py
@@ -1,8 +1,10 @@
+import socket
+import sys
+
 from lightstep.collector_pb2 import Auth, ReportRequest, Span, Reporter, KeyValue, Reference, SpanContext
 from lightstep.converter import Converter
 from . import util
 from . import version as tracer_version
-import sys
 from google.protobuf.timestamp_pb2 import Timestamp
 
 
@@ -22,6 +24,7 @@ class HttpConverter(Converter):
         if tags is None:
             tags = {}
         tracer_tags = tags.copy()
+        tracer_tags['lightstep.hostname'] = tracer_tags.get('lightstep.hostname', socket.gethostname())
 
         tracer_tags.update({
             'lightstep.tracer_platform': 'python',
diff --git a/lightstep/recorder.py b/lightstep/recorder.py
index 1e06282..9bedbee 100644
--- a/lightstep/recorder.py
+++ b/lightstep/recorder.py
@@ -14,7 +14,7 @@ import traceback
 import warnings
 
 from basictracer.recorder import SpanRecorder
-from opentracing.logs import ERROR_KIND, STACK
+from opentracing.logs import ERROR_KIND, STACK, ERROR_OBJECT
 
 from lightstep.http_converter import HttpConverter
 from lightstep.thrift_converter import ThriftConverter
@@ -171,7 +171,11 @@ class Recorder(SpanRecorder):
                 log.key_values[ERROR_KIND] = util._format_exc_type(log.key_values[ERROR_KIND])
 
             if STACK in log.key_values:
-                log.key_values[STACK] = util._format_exc_tb(log.key_values[STACK])
+                log.key_values[STACK] = util._format_exc_tb(
+                    log.key_values.get(ERROR_OBJECT),
+                    log.key_values.get(ERROR_KIND),
+                    log.key_values[STACK]
+                )
 
         return log
 
diff --git a/lightstep/thrift_converter.py b/lightstep/thrift_converter.py
index ffcf314..72debc5 100644
--- a/lightstep/thrift_converter.py
+++ b/lightstep/thrift_converter.py
@@ -1,7 +1,9 @@
+import socket
+import sys
+
 from lightstep import constants
 from lightstep.converter import Converter
 from .crouton import ttypes
-import sys
 from . import util
 from . import version as tracer_version
 import jsonpickle
@@ -22,6 +24,7 @@ class ThriftConverter(Converter):
         if tags is None:
             tags = {}
         tracer_tags = tags.copy()
+        tracer_tags['lightstep.hostname'] = tracer_tags.get('lightstep.hostname', socket.gethostname())
 
         tracer_tags.update({
             'lightstep.tracer_platform': 'python',
diff --git a/lightstep/util.py b/lightstep/util.py
index 50b61d3..33c403e 100755
--- a/lightstep/util.py
+++ b/lightstep/util.py
@@ -105,9 +105,9 @@ def _coerce_to_unicode(val):
             return '(encoding error)'
 
 
-def _format_exc_tb(exc_tb):
+def _format_exc_tb(exc_value, exc_type, exc_tb):
     if type(exc_tb) is types.TracebackType:
-        return ''.join(traceback.format_tb(exc_tb))
+        return ''.join(traceback.format_exception(exc_value, exc_type, exc_tb))
 
     return exc_tb
 

