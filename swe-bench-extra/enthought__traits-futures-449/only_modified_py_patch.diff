diff --git a/traits_futures/api.py b/traits_futures/api.py
index 914b21b..9d00855 100644
--- a/traits_futures/api.py
+++ b/traits_futures/api.py
@@ -28,7 +28,6 @@ Task submission functions
 - :func:`~.submit_call`
 - :func:`~.submit_iteration`
 - :func:`~.submit_progress`
-- :exc:`~.ProgressCancelled`
 
 Types of futures
 ----------------
@@ -36,6 +35,7 @@ Types of futures
 - :class:`~.CallFuture`
 - :class:`~.IterationFuture`
 - :class:`~.ProgressFuture`
+- :exc:`~.TaskCancelled`
 
 Future states
 -------------
@@ -85,12 +85,8 @@ from traits_futures.background_iteration import (
     IterationFuture,
     submit_iteration,
 )
-from traits_futures.background_progress import (
-    ProgressCancelled,
-    ProgressFuture,
-    submit_progress,
-)
-from traits_futures.base_future import BaseFuture, BaseTask
+from traits_futures.background_progress import ProgressFuture, submit_progress
+from traits_futures.base_future import BaseFuture, BaseTask, TaskCancelled
 from traits_futures.ets_event_loop import ETSEventLoop
 from traits_futures.executor_states import (
     ExecutorState,
@@ -119,7 +115,7 @@ __all__ = [
     "CallFuture",
     "IterationFuture",
     "ProgressFuture",
-    "ProgressCancelled",
+    "TaskCancelled",
     # Future states
     "FutureState",
     "CANCELLED",
diff --git a/traits_futures/background_progress.py b/traits_futures/background_progress.py
index 774f3c1..73b1dc3 100644
--- a/traits_futures/background_progress.py
+++ b/traits_futures/background_progress.py
@@ -21,7 +21,7 @@ be cancelled.
 
 from traits.api import Callable, Dict, Event, HasStrictTraits, Str, Tuple
 
-from traits_futures.base_future import BaseFuture, BaseTask
+from traits_futures.base_future import BaseFuture, BaseTask, TaskCancelled
 from traits_futures.i_task_specification import ITaskSpecification
 
 # Message types for messages from ProgressTask
@@ -32,13 +32,6 @@ from traits_futures.i_task_specification import ITaskSpecification
 PROGRESS = "progress"
 
 
-class ProgressCancelled(Exception):
-    """
-    Exception raised when progress reporting is interrupted by
-    task cancellation.
-    """
-
-
 class ProgressReporter:
     """
     Object used by the target callable to report progress.
@@ -63,13 +56,13 @@ class ProgressReporter:
 
         Raises
         ------
-        ProgressCancelled
+        TaskCancelled
             If a cancellation request for this task has already been made.
             In this case, the exception will be raised before any progress
             information is sent.
         """
         if self.cancelled():
-            raise ProgressCancelled("Task was cancelled")
+            raise TaskCancelled("Task was cancelled")
         self.send(PROGRESS, progress_info)
 
 
@@ -94,7 +87,7 @@ class ProgressTask(BaseTask):
                 **self.kwargs,
                 progress=progress.report,
             )
-        except ProgressCancelled:
+        except TaskCancelled:
             return None
 
 
diff --git a/traits_futures/base_future.py b/traits_futures/base_future.py
index f425aae..578cbc7 100644
--- a/traits_futures/base_future.py
+++ b/traits_futures/base_future.py
@@ -125,6 +125,12 @@ _CANCELLABLE_INTERNAL_STATES = {
 }
 
 
+class TaskCancelled(Exception):
+    """
+    Exception raised within the background task on cancellation.
+    """
+
+
 class _StateTransitionError(Exception):
     """
     Exception used to indicate a bad state transition.

