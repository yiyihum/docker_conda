diff --git a/fakeredis/_commands.py b/fakeredis/_commands.py
index 3d2ef57..1d25e0d 100644
--- a/fakeredis/_commands.py
+++ b/fakeredis/_commands.py
@@ -238,6 +238,9 @@ class BeforeAny:
     def __eq__(self, other):
         return isinstance(other, BeforeAny)
 
+    def __hash__(self):
+        return 1
+
 
 @functools.total_ordering
 class AfterAny:
@@ -247,6 +250,9 @@ class AfterAny:
     def __eq__(self, other):
         return isinstance(other, AfterAny)
 
+    def __hash__(self):
+        return 1
+
 
 class ScoreTest:
     """Argument converter for sorted set score endpoints."""
diff --git a/fakeredis/_zset.py b/fakeredis/_zset.py
index 2a7c090..c6c22d2 100644
--- a/fakeredis/_zset.py
+++ b/fakeredis/_zset.py
@@ -74,8 +74,10 @@ class ZSet:
     def irange_lex(self, start, stop, inclusive=(True, True), reverse=False):
         if not self._byscore:
             return iter([])
-        score = self._byscore[0][0]
-        it = self._byscore.irange((score, start), (score, stop),
+        default_score = self._byscore[0][0]
+        start_score = self._bylex.get(start, default_score)
+        stop_score = self._bylex.get(stop, default_score)
+        it = self._byscore.irange((start_score, start), (stop_score, stop),
                                   inclusive=inclusive, reverse=reverse)
         return (item[1] for item in it)
 
