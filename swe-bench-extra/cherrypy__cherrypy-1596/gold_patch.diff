diff --git a/README.rst b/README.rst
index e7b7fda9..21c07ace 100644
--- a/README.rst
+++ b/README.rst
@@ -56,9 +56,8 @@ Additionally:
 
 -  Tutorials are included in the repository:
    https://github.com/cherrypy/cherrypy/tree/master/cherrypy/tutorial
--  A general wiki at(will be moved to github):
-   https://bitbucket.org/cherrypy/cherrypy/wiki/Home
--  Plugins are described at: http://tools.cherrypy.org/
+-  A general wiki at:
+   https://github.com/cherrypy/cherrypy/wiki
 
 If the docs are insufficient to address your needs, the CherryPy
 community has several `avenues for support
@@ -70,4 +69,4 @@ Contributing
 Please follow the `contribution guidelines
 <http://docs.cherrypy.org/en/latest/contribute.html>`_.
 And by all means, absorb the `Zen of
-CherryPy <https://bitbucket.org/cherrypy/cherrypy/wiki/ZenOfCherryPy>`_.
+CherryPy <https://github.com/cherrypy/cherrypy/wiki/The-Zen-of-CherryPy>`_.
diff --git a/cherrypy/_helper.py b/cherrypy/_helper.py
index 5875ec0f..9b727eac 100644
--- a/cherrypy/_helper.py
+++ b/cherrypy/_helper.py
@@ -223,6 +223,30 @@ def url(path='', qs='', script_name=None, base=None, relative=None):
     if qs:
         qs = '?' + qs
 
+    def normalize_path(path):
+        if './' not in path:
+            return path
+
+        # Normalize the URL by removing ./ and ../
+        atoms = []
+        for atom in path.split('/'):
+            if atom == '.':
+                pass
+            elif atom == '..':
+                # Don't pop from empty list
+                # (i.e. ignore redundant '..')
+                if atoms:
+                    atoms.pop()
+            elif atom:
+                atoms.append(atom)
+
+        newpath = '/'.join(atoms)
+        # Preserve leading '/'
+        if path.startswith('/'):
+            newpath = '/' + newpath
+
+        return newpath
+
     if cherrypy.request.app:
         if not path.startswith('/'):
             # Append/remove trailing slash from path_info as needed
@@ -246,7 +270,7 @@ def url(path='', qs='', script_name=None, base=None, relative=None):
         if base is None:
             base = cherrypy.request.base
 
-        newurl = base + script_name + path + qs
+        newurl = base + script_name + normalize_path(path) + qs
     else:
         # No request.app (we're being called outside a request).
         # We'll have to guess the base from server.* attributes.
@@ -256,19 +280,7 @@ def url(path='', qs='', script_name=None, base=None, relative=None):
             base = cherrypy.server.base()
 
         path = (script_name or '') + path
-        newurl = base + path + qs
-
-    if './' in newurl:
-        # Normalize the URL by removing ./ and ../
-        atoms = []
-        for atom in newurl.split('/'):
-            if atom == '.':
-                pass
-            elif atom == '..':
-                atoms.pop()
-            else:
-                atoms.append(atom)
-        newurl = '/'.join(atoms)
+        newurl = base + normalize_path(path) + qs
 
     # At this point, we should have a fully-qualified absolute URL.
 
