diff --git a/geopandas/base.py b/geopandas/base.py
index 6503ca7..3e971b1 100644
--- a/geopandas/base.py
+++ b/geopandas/base.py
@@ -100,6 +100,17 @@ class GeoPandasBase(object):
             _sindex = sindex_cls(self.geometry)
             if not _sindex.is_empty:
                 self._sindex = _sindex
+            else:
+                warn(
+                    "Generated spatial index is empty and returned `None`. "
+                    "Future versions of GeoPandas will return zero-length spatial "
+                    "index instead of `None`. Use `len(gdf.sindex) > 0` "
+                    "or `if gdf.sindex` instead of `if gd.sindex is not None` "
+                    "to check for empty spatial indexes.",
+                    FutureWarning,
+                    stacklevel=3,
+                )
+                self._sindex = None
         self._sindex_generated = True
 
     def _invalidate_sindex(self):
diff --git a/geopandas/sindex.py b/geopandas/sindex.py
index 22b6181..90e8ac4 100644
--- a/geopandas/sindex.py
+++ b/geopandas/sindex.py
@@ -1,4 +1,3 @@
-from warnings import warn
 from collections import namedtuple
 
 from shapely.geometry.base import BaseGeometry
@@ -22,21 +21,27 @@ VALID_QUERY_PREDICATES = {
 def has_sindex():
     """Dynamically checks for ability to generate spatial index.
     """
-    return get_sindex_class() is not None
+    try:
+        get_sindex_class()
+        return True
+    except ImportError:
+        return False
 
 
 def get_sindex_class():
     """Dynamically chooses a spatial indexing backend.
 
     Required to comply with _compat.USE_PYGEOS.
-    The selection order goes PyGEOS > RTree > None.
+    The selection order goes PyGEOS > RTree > Error.
     """
     if compat.USE_PYGEOS:
         return PyGEOSSTRTreeIndex
     if compat.HAS_RTREE:
         return RTreeIndex
-    warn("Spatial indexes require either `rtree` or `pygeos`.")
-    return None
+    raise ImportError(
+        "Spatial indexes require either `rtree` or `pygeos`. "
+        "See installation instructions at https://geopandas.org/install.html"
+    )
 
 
 if compat.HAS_RTREE:
@@ -246,6 +251,9 @@ if compat.HAS_RTREE:
         def is_empty(self):
             return self.size == 0
 
+        def __len__(self):
+            return self.size
+
 
 if compat.HAS_PYGEOS:
 
diff --git a/geopandas/tools/sjoin.py b/geopandas/tools/sjoin.py
index 51775c0..7f67c19 100644
--- a/geopandas/tools/sjoin.py
+++ b/geopandas/tools/sjoin.py
@@ -7,7 +7,6 @@ from shapely import prepared
 
 from geopandas import GeoDataFrame
 from geopandas import _compat as compat
-from geopandas._compat import HAS_RTREE
 
 
 def sjoin(
@@ -76,13 +75,6 @@ def sjoin(
             " joined".format(index_left, index_right)
         )
 
-    # Check if rtree is installed...
-    if not HAS_RTREE:
-        raise ImportError(
-            "Rtree must be installed to use sjoin\n\n"
-            "See installation instructions at https://geopandas.org/install.html"
-        )
-
     # Attempt to re-use spatial indexes, otherwise generate the spatial index
     # for the longer dataframe. If we are joining to an empty dataframe,
     # don't bother generating the index.

