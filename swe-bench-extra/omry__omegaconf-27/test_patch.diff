diff --git a/tests/test_basic_ops_dict.py b/tests/test_basic_ops_dict.py
index b90985b..b08f3ce 100644
--- a/tests/test_basic_ops_dict.py
+++ b/tests/test_basic_ops_dict.py
@@ -6,7 +6,7 @@ import pytest
 
 from omegaconf import OmegaConf, DictConfig, Config
 from omegaconf import nodes
-from omegaconf.errors import MissingMandatoryValue, FrozenConfigError
+from omegaconf.errors import MissingMandatoryValue
 from . import IllegalType
 
 
@@ -144,8 +144,27 @@ def test_map_expansion():
 
 
 def test_items():
-    c = OmegaConf.create('{a: 2, b: 10}')
-    assert {'a': 2, 'b': 10}.items() == c.items()
+    c = OmegaConf.create(dict(a=2, b=10))
+    assert sorted([('a', 2), ('b', 10)]) == sorted(list(c.items()))
+
+
+def test_items2():
+    c = OmegaConf.create(dict(a=dict(v=1), b=dict(v=1)))
+    for k, v in c.items():
+        v.v = 2
+
+    assert c.a.v == 2
+    assert c.b.v == 2
+
+
+def test_items_with_interpolation():
+    c = OmegaConf.create(
+        dict(
+            a=2,
+            b='${a}'
+        )
+    )
+    assert list({'a': 2, 'b': 2}.items()) == list(c.items())
 
 
 def test_dict_keys():
@@ -200,15 +219,6 @@ def test_iterate_dictionary():
     assert m2 == c
 
 
-def test_items():
-    c = OmegaConf.create(dict(a=dict(v=1), b=dict(v=1)))
-    for k, v in c.items():
-        v.v = 2
-
-    assert c.a.v == 2
-    assert c.b.v == 2
-
-
 def test_dict_pop():
     c = OmegaConf.create(dict(a=1, b=2))
     assert c.pop('a') == 1
@@ -390,6 +400,22 @@ def test_dict_eq(input1, input2):
     eq(c2, input2)
 
 
+@pytest.mark.parametrize('input1, input2', [
+    (dict(a=12, b='${a}'), dict(a=12, b=12)),
+])
+def test_dict_eq_with_interpolation(input1, input2):
+    c1 = OmegaConf.create(input1)
+    c2 = OmegaConf.create(input2)
+
+    def eq(a, b):
+        assert a == b
+        assert b == a
+        assert not a != b
+        assert not b != a
+
+    eq(c1, c2)
+
+
 @pytest.mark.parametrize('input1, input2', [
     (dict(), dict(a=10)),
     ({}, []),
@@ -424,7 +450,6 @@ def test_dict_not_eq_with_another_class():
     assert OmegaConf.create() != "string"
 
 
-
 def test_hash():
     c1 = OmegaConf.create(dict(a=10))
     c2 = OmegaConf.create(dict(a=10))
diff --git a/tests/test_basic_ops_list.py b/tests/test_basic_ops_list.py
index 0afeef0..930698c 100644
--- a/tests/test_basic_ops_list.py
+++ b/tests/test_basic_ops_list.py
@@ -62,6 +62,15 @@ def test_iterate_list():
     assert items[1] == 2
 
 
+def test_items_with_interpolation():
+    c = OmegaConf.create([
+        'foo',
+        '${0}'
+    ])
+
+    assert c == ['foo', 'foo']
+
+
 def test_list_pop():
     c = OmegaConf.create([1, 2, 3, 4])
     assert c.pop(0) == 1
@@ -267,6 +276,22 @@ def test_list_eq(l1, l2):
     eq(c2, l2)
 
 
+@pytest.mark.parametrize('l1,l2', [
+    ([10, '${0}'], [10, 10])
+])
+def test_list_eq_with_interpolation(l1, l2):
+    c1 = OmegaConf.create(l1)
+    c2 = OmegaConf.create(l2)
+
+    def eq(a, b):
+        assert a == b
+        assert b == a
+        assert not a != b
+        assert not b != a
+
+    eq(c1, c2)
+
+
 @pytest.mark.parametrize('input1, input2', [
     ([], [10]),
     ([10], [11]),
