diff --git a/tests/unit/core/test_config.py b/tests/unit/core/test_config.py
index c8ebfca..ed0535d 100644
--- a/tests/unit/core/test_config.py
+++ b/tests/unit/core/test_config.py
@@ -76,6 +76,29 @@ def test_log_config():
         ScoutConfig.reset_all()
 
 
+def test_core_agent_permissions_default():
+    config = ScoutConfig()
+    assert 0o700 == config.core_agent_permissions()
+
+
+def test_core_agent_permissions_custom():
+    ScoutConfig.set(core_agent_permissions=770)
+    config = ScoutConfig()
+    try:
+        assert 0o770 == config.core_agent_permissions()
+    finally:
+        ScoutConfig.reset_all()
+
+
+def test_core_agent_permissions_invalid_uses_default():
+    ScoutConfig.set(core_agent_permissions="THIS IS INVALID")
+    config = ScoutConfig()
+    try:
+        assert 0o700 == config.core_agent_permissions()
+    finally:
+        ScoutConfig.reset_all()
+
+
 def test_null_config_name():
     # For coverage... this is never called elsewhere.
     ScoutConfigNull().name()
diff --git a/tests/unit/core/test_util.py b/tests/unit/core/test_util.py
new file mode 100644
index 0000000..42e6f7a
--- /dev/null
+++ b/tests/unit/core/test_util.py
@@ -0,0 +1,18 @@
+from __future__ import absolute_import, division, print_function, unicode_literals
+
+from scout_apm.core.util import octal
+
+
+def test_octal_with_valid_integer():
+    assert 0o700 == octal(700)
+
+
+def test_octal_with_valid_string():
+    assert 0o700 == octal("700")
+
+
+def test_octal_raises_valueerror_on_invalid_value():
+    try:
+        octal("THIS IS INVALID")
+    except ValueError:
+        pass
