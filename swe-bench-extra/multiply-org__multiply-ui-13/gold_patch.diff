diff --git a/multiply_ui/server/cli.py b/multiply_ui/server/cli.py
index 0e45d2e..5be1f02 100644
--- a/multiply_ui/server/cli.py
+++ b/multiply_ui/server/cli.py
@@ -1,20 +1,32 @@
-import logging
 import signal
 import sys
 
-import tornado.ioloop
-import tornado.log
-import tornado.web
+import click
 
-from multiply_ui.server.app import new_application
-from multiply_ui.server.context import ServiceContext
+DEFAULT_SERVER_PORT = 9090
+DEFAULT_SERVER_ADDRESS = '0.0.0.0'
 
-PORT = 9090
 
-LOGGER = logging.getLogger('multiply_ui')
+@click.command('mui-server')
+@click.option('--port', '-p',
+              type=int, default=DEFAULT_SERVER_PORT,
+              help=f'Set service port number. Defaults to {DEFAULT_SERVER_PORT}.')
+@click.option('--address', '-a',
+              type=str, default=DEFAULT_SERVER_ADDRESS,
+              help=f'Set service IP address. Defaults to "{DEFAULT_SERVER_ADDRESS}".')
+def mui_server(port, address):
+    """
+    Starts a service which exposes a RESTful API to the Multiply UI.
+    """
 
+    from multiply_ui.server.app import new_application
+    from multiply_ui.server.config import LOGGER
+    from multiply_ui.server.context import ServiceContext
+
+    import tornado.ioloop
+    import tornado.log
+    import tornado.web
 
-def main():
     def shut_down():
         LOGGER.info(f"Shutting down...")
         tornado.ioloop.IOLoop.current().stop()
@@ -25,17 +37,25 @@ def main():
         LOGGER.warning(f'Caught signal {sig}')
         tornado.ioloop.IOLoop.current().add_callback_from_signal(shut_down)
 
-    signal.signal(signal.SIGINT, sig_handler)
-    signal.signal(signal.SIGTERM, sig_handler)
+    def register_termination_handlers():
+        signal.signal(signal.SIGINT, sig_handler)
+        signal.signal(signal.SIGTERM, sig_handler)
 
     tornado.log.enable_pretty_logging()
+
     application = new_application()
     application._ctx = ServiceContext()
-    application.listen(PORT)
+    application.listen(port, address)
+
+    tornado.ioloop.IOLoop.current().add_callback_from_signal(register_termination_handlers)
 
-    LOGGER.info(f"Server listening on port {PORT}...")
+    LOGGER.info(f"Server listening on port {port} at address {address}...")
     tornado.ioloop.IOLoop.current().start()
 
 
-if __name__ == "__main__":
+def main(args=None):
+    mui_server.main(args=args)
+
+
+if __name__ == '__main__':
     main()
