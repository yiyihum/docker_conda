diff --git a/tests/test_matcher.py b/tests/test_matcher.py
index 6665fff..4694a94 100644
--- a/tests/test_matcher.py
+++ b/tests/test_matcher.py
@@ -17,7 +17,7 @@ class MatcherTestCase(unittest.TestCase):
         "//  Copyright (c) 2015 MyCompany. All rights reserved.\n"
         "//\n")
 
-        assert Matcher(header).matches()
+        assert Matcher(header).match()
 
     def test_matcher_with_1_digit_month(self):
         header = (""
@@ -29,7 +29,7 @@ class MatcherTestCase(unittest.TestCase):
         "//  Copyright (c) 2015 MyCompany. All rights reserved.\n"
         "//\n")
 
-        assert Matcher(header).matches()
+        assert Matcher(header).match()
 
     def test_matcher_with_1_digit_day(self):
         header = (""
@@ -41,7 +41,7 @@ class MatcherTestCase(unittest.TestCase):
         "//  Copyright (c) 2015 MyCompany. All rights reserved.\n"
         "//\n")
 
-        assert Matcher(header).matches()
+        assert Matcher(header).match()
 
     def test_matcher_with_objc_header_file(self):
         header = (""
@@ -53,7 +53,7 @@ class MatcherTestCase(unittest.TestCase):
         "//  Copyright (c) 2015 MyCompany. All rights reserved.\n"
         "//\n")
 
-        assert Matcher(header).matches()
+        assert Matcher(header).match()
 
     def test_matcher_with_objc_implementation_file(self):
         header = (""
@@ -65,7 +65,7 @@ class MatcherTestCase(unittest.TestCase):
         "//  Copyright (c) 2015 MyCompany. All rights reserved.\n"
         "//\n")
 
-        assert Matcher(header).matches()
+        assert Matcher(header).match()
 
     def test_matcher_with_objc_implementation_file(self):
         header = (""
@@ -77,7 +77,7 @@ class MatcherTestCase(unittest.TestCase):
         "//  Copyright (c) 2015 MyCompany. All rights reserved.\n"
         "//\n")
 
-        assert Matcher(header).matches()
+        assert Matcher(header).match()
 
     def test_matcher_with_special_copyright_character(self):
         header = (""
@@ -89,7 +89,39 @@ class MatcherTestCase(unittest.TestCase):
         "//  Copyright © 2015 MyCompany. All rights reserved.\n"
         "//\n")
 
-        assert Matcher(header).matches()
+        assert Matcher(header).match()
+
+    def test_matcher_with_trim_new_lines_on(self):
+        header = (""
+        "\n"
+        "\n"
+        "//\n"
+        "//  MyFile.m\n"
+        "//  MyCompany\n"
+        "//\n"
+        "//  Created by John Appleseed on 12/18/15.\n"
+        "//  Copyright © 2015 MyCompany. All rights reserved.\n"
+        "//\n"
+        "\n"
+        "\n")
+
+        assert Matcher(header, trim_new_lines=True).match()
+
+    def test_matcher_with_trim_new_lines_off(self):
+        header = (""
+        "\n"
+        "\n"
+        "//\n"
+        "//  MyFile.m\n"
+        "//  MyCompany\n"
+        "//\n"
+        "//  Created by John Appleseed on 12/18/15.\n"
+        "//  Copyright © 2015 MyCompany. All rights reserved.\n"
+        "//\n"
+        "\n"
+        "\n")
+
+        assert not Matcher(header, trim_new_lines=False).match()
 
 if __name__ == '__main__':
     unittest.main()
