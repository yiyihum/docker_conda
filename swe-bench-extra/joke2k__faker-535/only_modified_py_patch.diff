diff --git a/faker/providers/date_time/__init__.py b/faker/providers/date_time/__init__.py
index 8b76e429..f4d2626b 100644
--- a/faker/providers/date_time/__init__.py
+++ b/faker/providers/date_time/__init__.py
@@ -360,7 +360,7 @@ class Provider(BaseProvider):
         start_date = cls._parse_date_time(start_date, tzinfo=tzinfo)
         end_date = cls._parse_date_time(end_date, tzinfo=tzinfo)
         timestamp = random.randint(start_date, end_date)
-        return datetime.fromtimestamp(timestamp, tzinfo)
+        return datetime(1970, 1, 1,tzinfo=tzinfo) + timedelta(seconds=timestamp)
 
     @classmethod
     def future_datetime(cls, end_date='+30d', tzinfo=None):
diff --git a/faker/providers/misc/__init__.py b/faker/providers/misc/__init__.py
index d219e0c5..679f84b9 100644
--- a/faker/providers/misc/__init__.py
+++ b/faker/providers/misc/__init__.py
@@ -5,6 +5,7 @@ import hashlib
 import string
 import uuid
 import os
+import sys
 
 from faker.generator import random
 from faker.providers.date_time import Provider as DatetimeProvider
@@ -91,7 +92,8 @@ class Provider(BaseProvider):
 
         Default blob size is 1 Mb.
         """
-        return os.urandom(length)
+        blob = [random.randrange(256) for o in range(length)]
+        return bytes(blob) if sys.version_info[0] >= 3 else bytearray(blob)
 
     @classmethod
     def md5(cls, raw_output=False):

