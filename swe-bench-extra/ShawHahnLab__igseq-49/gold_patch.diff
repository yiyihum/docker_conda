diff --git a/CHANGELOG.md b/CHANGELOG.md
index 4ba83d8..c57d74b 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -10,6 +10,12 @@
  * `msa` command for building multiple sequence alignments with
    [MUSCLE](https://drive5.com/muscle5/) ([#41])
 
+### Fixed
+
+ * `identity` command now uses a custom sequence ID column if one is given
+   ([#49])
+
+[#49]: https://github.com/ShawHahnLab/igseq/pull/49
 [#44]: https://github.com/ShawHahnLab/igseq/pull/44
 [#43]: https://github.com/ShawHahnLab/igseq/pull/43
 [#41]: https://github.com/ShawHahnLab/igseq/pull/41
diff --git a/igseq/data/examples/outputs/tree/example_pattern_from_newick.nex b/igseq/data/examples/outputs/tree/example_pattern_from_newick.nex
index 2485d4a..c2fd435 100644
--- a/igseq/data/examples/outputs/tree/example_pattern_from_newick.nex
+++ b/igseq/data/examples/outputs/tree/example_pattern_from_newick.nex
@@ -3,12 +3,12 @@ begin taxa;
 dimensions ntax=7;
 taxlabels
 'somethingelse'[&!color=#000000]
-'wk16-001'[&!color=#d186d7]
-'wk16-002'[&!color=#d186d7]
-'wk16-003'[&!color=#d186d7]
-'wk20-001'[&!color=#be4229]
-'wk20-002'[&!color=#be4229]
-'wk20-003'[&!color=#be4229]
+'wk16-001'[&!color=#be4229]
+'wk16-002'[&!color=#be4229]
+'wk16-003'[&!color=#be4229]
+'wk20-001'[&!color=#d186d7]
+'wk20-002'[&!color=#d186d7]
+'wk20-003'[&!color=#d186d7]
 ;
 end;
 
diff --git a/igseq/identity.py b/igseq/identity.py
index 24a47dd..8c80b11 100644
--- a/igseq/identity.py
+++ b/igseq/identity.py
@@ -58,7 +58,7 @@ def identity(path_in, path_out, path_ref=None, fmt_in=None, fmt_in_ref=None, col
                     record[reader.colmap["sequence"]],
                     ref[reader.colmap["sequence"]])
                 writer.write({
-                    "query": record["sequence_id"],
+                    "query": record[reader.colmap["sequence_id"]],
                     "ref": ref["sequence_id"],
                     "identity": score})
 
diff --git a/igseq/tree.py b/igseq/tree.py
index 9f61444..87f626c 100644
--- a/igseq/tree.py
+++ b/igseq/tree.py
@@ -286,6 +286,9 @@ def build_seq_sets(seq_ids, pattern=None, lists=None):
     if lists:
         for set_name, seq_set_ids in lists.items():
             seq_sets[set_name].update(seq_set_ids)
+    # Sort by key so we get a consistent order (yes, dicts are ordered these
+    # days)
+    seq_sets = {key: seq_sets[key] for key in sorted(seq_sets.keys())}
     return seq_sets
 
 def color_seqs(seq_ids, seq_sets, seq_set_colors=None):
