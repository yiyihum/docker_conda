diff --git a/pact/test/test_pact.py b/pact/test/test_pact.py
index 2cf5539..64c061f 100644
--- a/pact/test/test_pact.py
+++ b/pact/test/test_pact.py
@@ -76,6 +76,27 @@ class PactTestCase(TestCase):
         self.assertEqual(target._interactions[0]['response'],
                          {'status': 200, 'body': 'success'})
 
+    def test_definition_without_given(self):
+        target = Pact(self.consumer, self.provider)
+        (target
+            .upon_receiving('a specific request to the server')
+            .with_request('GET', '/path')
+            .will_respond_with(200, body='success'))
+
+        self.assertEqual(len(target._interactions), 1)
+
+        self.assertIsNone(
+            target._interactions[0].get('provider_state'))
+
+        self.assertEqual(
+            target._interactions[0]['description'],
+            'a specific request to the server')
+
+        self.assertEqual(target._interactions[0]['request'],
+                         {'path': '/path', 'method': 'GET'})
+        self.assertEqual(target._interactions[0]['response'],
+                         {'status': 200, 'body': 'success'})
+
     def test_definition_all_options(self):
         target = Pact(self.consumer, self.provider)
         (target
@@ -146,6 +167,40 @@ class PactTestCase(TestCase):
         self.assertEqual(target._interactions[0]['response'],
                          {'status': 200, 'body': 'success'})
 
+    def test_definition_multiple_interactions_without_given(self):
+        target = Pact(self.consumer, self.provider)
+        (target
+         .upon_receiving('a specific request to the server')
+         .with_request('GET', '/foo')
+         .will_respond_with(200, body='success')
+         .upon_receiving('a different request to the server')
+         .with_request('GET', '/bar')
+         .will_respond_with(200, body='success'))
+
+        self.assertEqual(len(target._interactions), 2)
+
+        self.assertIsNone(
+            target._interactions[1].get('provider_state'))
+        self.assertIsNone(
+            target._interactions[0].get('provider_state'))
+
+        self.assertEqual(
+            target._interactions[1]['description'],
+            'a specific request to the server')
+        self.assertEqual(
+            target._interactions[0]['description'],
+            'a different request to the server')
+
+        self.assertEqual(target._interactions[1]['request'],
+                         {'path': '/foo', 'method': 'GET'})
+        self.assertEqual(target._interactions[0]['request'],
+                         {'path': '/bar', 'method': 'GET'})
+
+        self.assertEqual(target._interactions[1]['response'],
+                         {'status': 200, 'body': 'success'})
+        self.assertEqual(target._interactions[0]['response'],
+                         {'status': 200, 'body': 'success'})
+
 
 class PactSetupTestCase(PactTestCase):
     def setUp(self):
diff --git a/pact/test/test_verify.py b/pact/test/test_verify.py
index f0b77a7..cdd1aad 100644
--- a/pact/test/test_verify.py
+++ b/pact/test/test_verify.py
@@ -69,7 +69,7 @@ class mainTestCase(TestCase):
     def test_provider_base_url_is_required(self):
         result = self.runner.invoke(verify.main, [])
         self.assertEqual(result.exit_code, 2)
-        self.assertIn(b'--provider-base-url', result.output_bytes)
+        self.assertIn(b'--provider-base-url', result.stdout_bytes)
         self.assertFalse(self.mock_Popen.called)
 
     def test_pact_urls_are_required(self):
@@ -77,14 +77,14 @@ class mainTestCase(TestCase):
             verify.main, ['--provider-base-url=http://localhost'])
 
         self.assertEqual(result.exit_code, 1)
-        self.assertIn(b'at least one', result.output_bytes)
+        self.assertIn(b'at least one', result.stdout_bytes)
         self.assertFalse(self.mock_Popen.called)
 
     def test_local_pact_urls_must_exist(self):
         self.mock_isfile.return_value = False
         result = self.runner.invoke(verify.main, self.default_opts)
         self.assertEqual(result.exit_code, 1)
-        self.assertIn(b'./pacts/consumer-provider.json', result.output_bytes)
+        self.assertIn(b'./pacts/consumer-provider.json', result.stdout_bytes)
         self.assertFalse(self.mock_Popen.called)
 
     def test_failed_verification(self):
@@ -150,7 +150,7 @@ class mainTestCase(TestCase):
         self.assertEqual(result.exit_code, 0)
         self.assertIn(
             b'Multiple --pact-urls arguments are deprecated.',
-            result.output_bytes)
+            result.stdout_bytes)
         self.mock_Popen.return_value.wait.assert_called_once_with()
         self.assertEqual(self.mock_Popen.call_count, 1)
         self.assertProcess(
@@ -166,7 +166,7 @@ class mainTestCase(TestCase):
         ])
         self.assertEqual(result.exit_code, 1)
         self.assertIn(
-            b'Provider application version is required', result.output_bytes)
+            b'Provider application version is required', result.stdout_bytes)
         self.assertFalse(self.mock_Popen.return_value.communicate.called)
 
 
