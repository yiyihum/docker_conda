diff --git a/src/tespy/connections/connection.py b/src/tespy/connections/connection.py
index ceb64a66..459bcd14 100644
--- a/src/tespy/connections/connection.py
+++ b/src/tespy/connections/connection.py
@@ -726,7 +726,7 @@ class Connection:
         ref = self.get_attr(f"{variable}_ref").ref
         self.residual[k] = (
             self.get_attr(variable).val_SI
-            - ref.obj.get_attr(variable).val_SI * ref.factor + ref.delta_SI
+            - (ref.obj.get_attr(variable).val_SI * ref.factor + ref.delta_SI)
         )
 
     def primary_ref_deriv(self, k, **kwargs):
@@ -761,7 +761,7 @@ class Connection:
     def T_ref_func(self, k, **kwargs):
         ref = self.T_ref.ref
         self.residual[k] = (
-            self.calc_T() - ref.obj.calc_T() * ref.factor + ref.delta_SI
+            self.calc_T() - (ref.obj.calc_T() * ref.factor + ref.delta_SI)
         )
 
     def T_ref_deriv(self, k, **kwargs):
@@ -810,7 +810,7 @@ class Connection:
         ref = self.v_ref.ref
         self.residual[k] = (
             self.calc_vol(T0=self.T.val_SI) * self.m.val_SI
-            - ref.obj.calc_vol(T0=ref.obj.T.val_SI) * ref.obj.m.val_SI * ref.factor + ref.delta_SI
+            - (ref.obj.calc_vol(T0=ref.obj.T.val_SI) * ref.obj.m.val_SI * ref.factor + ref.delta_SI)
         )
 
     def v_ref_deriv(self, k, **kwargs):
diff --git a/src/tespy/tools/helpers.py b/src/tespy/tools/helpers.py
index e177474e..d92ebf04 100644
--- a/src/tespy/tools/helpers.py
+++ b/src/tespy/tools/helpers.py
@@ -628,7 +628,7 @@ def newton(func, deriv, params, y, **kwargs):
             logger.debug(msg)
 
             break
-        if tol_mode == 'abs':
+        if tol_mode == 'abs' or y == 0:
             expr = abs(res) >= tol_abs
         elif tol_mode == 'rel':
             expr = abs(res / y) >= tol_rel
@@ -680,7 +680,7 @@ def newton_with_kwargs(
             logger.debug(msg)
 
             break
-        if tol_mode == 'abs':
+        if tol_mode == 'abs' or target_value == 0:
             expr = abs(residual) >= tol_abs
         elif tol_mode == 'rel':
             expr = abs(residual / target_value) >= tol_rel

