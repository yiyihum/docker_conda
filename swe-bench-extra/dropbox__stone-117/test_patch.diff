diff --git a/test/test_python_type_stubs.py b/test/test_python_type_stubs.py
index 2e6e42e..ec85dea 100644
--- a/test/test_python_type_stubs.py
+++ b/test/test_python_type_stubs.py
@@ -276,15 +276,15 @@ class TestPythonTypeStubs(unittest.TestCase):
 
             class Struct2(object):
                 def __init__(self,
-                             f2: List[long] = ...,
+                             f2: List[int] = ...,
                              f3: datetime.datetime = ...,
-                             f4: Dict[Text, long] = ...) -> None: ...
+                             f4: Dict[Text, int] = ...) -> None: ...
 
                 @property
-                def f2(self) -> List[long]: ...
+                def f2(self) -> List[int]: ...
 
                 @f2.setter
-                def f2(self, val: List[long]) -> None: ...
+                def f2(self, val: List[int]) -> None: ...
 
                 @f2.deleter
                 def f2(self) -> None: ...
@@ -301,10 +301,10 @@ class TestPythonTypeStubs(unittest.TestCase):
 
 
                 @property
-                def f4(self) -> Dict[Text, long]: ...
+                def f4(self) -> Dict[Text, int]: ...
 
                 @f4.setter
-                def f4(self, val: Dict[Text, long]) -> None: ...
+                def f4(self, val: Dict[Text, int]) -> None: ...
 
                 @f4.deleter
                 def f4(self) -> None: ...
@@ -340,24 +340,24 @@ class TestPythonTypeStubs(unittest.TestCase):
 
             class NestedTypes(object):
                 def __init__(self,
-                             list_of_nullables: List[Optional[long]] = ...,
-                             nullable_list: Optional[List[long]] = ...) -> None: ...
+                             list_of_nullables: List[Optional[int]] = ...,
+                             nullable_list: Optional[List[int]] = ...) -> None: ...
 
                 @property
-                def list_of_nullables(self) -> List[Optional[long]]: ...
+                def list_of_nullables(self) -> List[Optional[int]]: ...
 
                 @list_of_nullables.setter
-                def list_of_nullables(self, val: List[Optional[long]]) -> None: ...
+                def list_of_nullables(self, val: List[Optional[int]]) -> None: ...
 
                 @list_of_nullables.deleter
                 def list_of_nullables(self) -> None: ...
 
 
                 @property
-                def nullable_list(self) -> Optional[List[long]]: ...
+                def nullable_list(self) -> Optional[List[int]]: ...
 
                 @nullable_list.setter
-                def nullable_list(self, val: Optional[List[long]]) -> None: ...
+                def nullable_list(self, val: Optional[List[int]]) -> None: ...
 
                 @nullable_list.deleter
                 def nullable_list(self) -> None: ...
diff --git a/test/test_python_types.py b/test/test_python_types.py
index 0f84f49..5c00cc2 100644
--- a/test/test_python_types.py
+++ b/test/test_python_types.py
@@ -165,7 +165,7 @@ class TestGeneratedPythonTypes(unittest.TestCase):
                 @property
                 def annotated_field(self):
                     """
-                    :rtype: long
+                    :rtype: int
                     """
                     if self._annotated_field_present:
                         return self._annotated_field_value
@@ -186,7 +186,7 @@ class TestGeneratedPythonTypes(unittest.TestCase):
                 @property
                 def unannotated_field(self):
                     """
-                    :rtype: long
+                    :rtype: int
                     """
                     if self._unannotated_field_present:
                         return self._unannotated_field_value
@@ -268,14 +268,14 @@ class TestGeneratedPythonTypes(unittest.TestCase):
                     """
                     test parameter
 
-                    :rtype: long
+                    :rtype: int
                     """
                     return self._test_param
 
                 @property
                 def test_default_param(self):
                     """
-                    :rtype: long
+                    :rtype: int
                     """
                     return self._test_default_param
 
