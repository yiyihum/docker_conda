diff --git a/stix2elevator/test/test_main.py b/stix2elevator/test/test_main.py
index a962429..8b97a01 100644
--- a/stix2elevator/test/test_main.py
+++ b/stix2elevator/test/test_main.py
@@ -1,3 +1,4 @@
+from argparse import Namespace
 import io
 import os
 
@@ -9,8 +10,12 @@ import pytest
 from stix2elevator import (elevate,
                            elevate_file,
                            elevate_package,
-                           elevate_string)
-from stix2elevator.options import initialize_options, set_option_value
+                           elevate_string,
+                           options)
+from stix2elevator.options import (ElevatorOptions,
+                                   get_option_value,
+                                   initialize_options,
+                                   set_option_value)
 from stix2elevator.utils import find_dir
 
 # This module only tests for the main functions used to interact with the elevator from a programmatic or
@@ -29,6 +34,24 @@ def setup_options():
     set_option_value("policy", "no_policy")
 
 
+@pytest.mark.parametrize("opts", [
+    ElevatorOptions(policy="no_policy", spec_version="2.1", log_level="DEBUG", disabled=[212, 901]),
+    {"policy": "no_policy", "spec_version": "2.1", "log_level": "DEBUG", "disabled": [212, 901]},
+    Namespace(policy="no_policy", spec_version="2.1", log_level="DEBUG", disabled="212,901",
+              file_=None, incidents=False, missing_policy="add-to-description",
+              custom_property_prefix="elevator", infrastructure=False, package_created_by_id=None,
+              default_timestamp=None, validator_args="--strict-types", enabled=None, silent=False,
+              message_log_directory=None, output_directory=None, markings_allowed=""),
+])
+def test_setup_options(opts):
+    options.ALL_OPTIONS = None  # To make sure we can set it again
+    initialize_options(opts)
+    assert get_option_value("policy") == "no_policy"
+    assert get_option_value("spec_version") == "2.1"
+    assert get_option_value("log_level") == "DEBUG"
+    assert get_option_value("disabled") == [212, 901]
+
+
 def test_elevate_with_marking_container():
     setup_options()
 
diff --git a/stix2elevator/test/test_utils.py b/stix2elevator/test/test_utils.py
index 93c6aa3..bb1eea2 100644
--- a/stix2elevator/test/test_utils.py
+++ b/stix2elevator/test/test_utils.py
@@ -1,6 +1,8 @@
 from stix.indicator import Indicator
 
+import pytest
 from stix2elevator import convert_stix, utils
+from stix2elevator.options import _convert_to_int_list
 from stix2elevator.utils import Environment
 
 
@@ -26,3 +28,23 @@ def test_convert_timestamp_string():
     indicator = Indicator()
     indicator_instance = convert_stix.create_basic_object("indicator", indicator, env)
     assert indicator_instance is not None
+
+
+@pytest.mark.parametrize("data", [
+    [123, 245, 344],
+    "123,245,344",
+    ["123", "245", 344],
+])
+def test_convert_int_function(data):
+    assert _convert_to_int_list(data) == [123, 245, 344]
+
+
+@pytest.mark.parametrize("data", [
+    "12 3,245,344",
+    "212,garbage,33",
+    "definitely-not,an_int",
+    234,
+])
+def test_convert_int_function_bad(data):
+    with pytest.raises((RuntimeError, ValueError)):
+        _convert_to_int_list(data)
