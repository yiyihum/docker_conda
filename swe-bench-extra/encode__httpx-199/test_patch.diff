diff --git a/tests/client/test_headers.py b/tests/client/test_headers.py
index bf82a57..2d17c12 100755
--- a/tests/client/test_headers.py
+++ b/tests/client/test_headers.py
@@ -1,15 +1,16 @@
 #!/usr/bin/env python3
 
 import json
+
 from httpx import (
-    __version__,
-    Client,
+    AsyncDispatcher,
     AsyncRequest,
     AsyncResponse,
-    VerifyTypes,
     CertTypes,
+    Client,
     TimeoutTypes,
-    AsyncDispatcher,
+    VerifyTypes,
+    __version__,
 )
 
 
diff --git a/tests/client/test_redirects.py b/tests/client/test_redirects.py
index ff75475..f9c2075 100644
--- a/tests/client/test_redirects.py
+++ b/tests/client/test_redirects.py
@@ -86,6 +86,17 @@ class MockDispatch(AsyncDispatcher):
             body = json.dumps({"body": content.decode()}).encode()
             return AsyncResponse(codes.OK, content=body, request=request)
 
+        elif request.url.path == "/cross_subdomain":
+            if request.headers["host"] != "www.example.org":
+                headers = {"location": "https://www.example.org/cross_subdomain"}
+                return AsyncResponse(
+                    codes.PERMANENT_REDIRECT, headers=headers, request=request
+                )
+            else:
+                return AsyncResponse(
+                    codes.OK, content=b"Hello, world!", request=request
+                )
+
         return AsyncResponse(codes.OK, content=b"Hello, world!", request=request)
 
 
@@ -250,3 +261,11 @@ async def test_cannot_redirect_streaming_body():
 
     with pytest.raises(RedirectBodyUnavailable):
         await client.post(url, data=streaming_body())
+
+
+@pytest.mark.asyncio
+async def test_cross_dubdomain_redirect():
+    client = AsyncClient(dispatch=MockDispatch())
+    url = "https://example.com/cross_subdomain"
+    response = await client.get(url)
+    assert response.url == URL("https://www.example.org/cross_subdomain")
