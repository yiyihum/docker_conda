diff --git a/tests/test_extensions/_snippets/indented.txt b/tests/test_extensions/_snippets/indented.txt
new file mode 100644
index 00000000..b5628843
--- /dev/null
+++ b/tests/test_extensions/_snippets/indented.txt
@@ -0,0 +1,9 @@
+class SomeClass:
+    """Docstring."""
+
+    # --8<-- [start: py-section]
+    def some_method(self, param):
+        """Docstring."""
+
+        return param
+    # --8<-- [end: py-section]
diff --git a/tests/test_extensions/_snippets/section.txt b/tests/test_extensions/_snippets/section.txt
index ea43f9f4..ea99478c 100644
--- a/tests/test_extensions/_snippets/section.txt
+++ b/tests/test_extensions/_snippets/section.txt
@@ -1,19 +1,19 @@
-/* --8<-- [start: cssSection] */
+/* --8<-- [start: css-section] */
 div {
     color: red;
 }
-/* --8<-- [end: cssSection] */
+/* --8<-- [end: css-section] */
 
-<!-- -8<- [start: htmlSection] -->
+<!-- -8<- [start: html-section] -->
 <div><p>content</p></div>
-<!-- -8<- [end: htmlSection] -->
+<!-- -8<- [end: html-section] -->
 
-/* --8<-- [end: cssSection2] */
-/* --8<-- [start: cssSection2] */
+/* --8<-- [end: css-section2] */
+/* --8<-- [start: css-section2] */
 div {
     color: red;
 }
-/* --8<-- [end: cssSection2] */
+/* --8<-- [end: css-section2] */
 
-<!-- --8<-- [start: htmlSection2] -->
+<!-- --8<-- [start: html-section2] -->
 <div><p>content</p></div>
diff --git a/tests/test_extensions/test_snippets.py b/tests/test_extensions/test_snippets.py
index 4bb03d90..31006020 100644
--- a/tests/test_extensions/test_snippets.py
+++ b/tests/test_extensions/test_snippets.py
@@ -7,6 +7,79 @@ from unittest.mock import patch, MagicMock
 BASE = os.path.abspath(os.path.dirname(__file__))
 
 
+class TestSnippetDedent(util.MdCase):
+    """Test snippet cases."""
+
+    extension = [
+        'pymdownx.snippets', 'pymdownx.superfences'
+    ]
+
+    extension_configs = {
+        'pymdownx.snippets': {
+            'base_path': [os.path.join(BASE, '_snippets')],
+            'dedent_subsections': True
+        }
+    }
+
+    def test_dedent_section(self):
+        """Test dedenting sections."""
+
+        self.check_markdown(
+            R'''
+            ```text
+            ---8<--- "indented.txt:py-section"
+            ```
+            ''',  # noqa: W291
+            R'''
+            <div class="highlight"><pre><span></span><code>def some_method(self, param):
+                &quot;&quot;&quot;Docstring.&quot;&quot;&quot;
+
+                return param
+            </code></pre></div>
+            ''',
+            True
+        )
+
+    def test_dedent_lines(self):
+        """Test dedenting lines."""
+
+        self.check_markdown(
+            R'''
+            ```text
+            ---8<--- "indented.txt:5:8"
+            ```
+            ''',  # noqa: W291
+            R'''
+            <div class="highlight"><pre><span></span><code>def some_method(self, param):
+                &quot;&quot;&quot;Docstring.&quot;&quot;&quot;
+
+                return param
+            </code></pre></div>
+            ''',
+            True
+        )
+
+    def test_dedent_indented(self):
+        """Test dedenting sections that has indented insertion."""
+
+        self.check_markdown(
+            R'''
+            Paragraph
+
+                ---8<--- "indented.txt:py-section"
+            ''',  # noqa: W291
+            R'''
+            <p>Paragraph</p>
+            <pre><code>def some_method(self, param):
+                """Docstring."""
+
+                return param
+            </code></pre>
+            ''',
+            True
+        )
+
+
 class TestSnippets(util.MdCase):
     """Test snippet cases."""
 
@@ -229,7 +302,7 @@ class TestSnippets(util.MdCase):
         self.check_markdown(
             R'''
             ```
-            --8<-- "section.txt:cssSection"
+            --8<-- "section.txt:css-section"
             ```
             ''',
             '''
@@ -247,7 +320,7 @@ class TestSnippets(util.MdCase):
         self.check_markdown(
             R'''
             ```
-            -8<- "section.txt:cssSection"
+            -8<- "section.txt:css-section"
             ```
             ''',
             '''
@@ -265,7 +338,7 @@ class TestSnippets(util.MdCase):
         self.check_markdown(
             R'''
             --8<--
-            section.txt:htmlSection
+            section.txt:html-section
             --8<--
             ''',
             '''
@@ -280,7 +353,7 @@ class TestSnippets(util.MdCase):
         self.check_markdown(
             R'''
             -8<-
-            section.txt:htmlSection
+            section.txt:html-section
             -8<-
             ''',
             '''
@@ -295,7 +368,7 @@ class TestSnippets(util.MdCase):
         self.check_markdown(
             R'''
             --8<--
-            section.txt:cssSection2
+            section.txt:css-section2
             --8<--
             ''',
             '''
@@ -309,7 +382,7 @@ class TestSnippets(util.MdCase):
         self.check_markdown(
             R'''
             --8<--
-            section.txt:htmlSection2
+            section.txt:html-section2
             --8<--
             ''',
             '''
@@ -428,7 +501,7 @@ class TestSnippetsMissing(util.MdCase):
                 True
             )
 
-    def test_missing_lines(self):
+    def test_missing_file_lines(self):
         """Test missing file with line numbers."""
 
         with self.assertRaises(SnippetMissingError):
@@ -441,6 +514,19 @@ class TestSnippetsMissing(util.MdCase):
                 True
             )
 
+    def test_missing_section(self):
+        """Test missing section."""
+
+        with self.assertRaises(SnippetMissingError):
+            self.check_markdown(
+                R'''
+                --8<-- "section.txt:missing-section"
+                ''',
+                '''
+                ''',
+                True
+            )
+
 
 class TestSnippetsGracefulMissing(util.MdCase):
     """Test snippet file case."""
@@ -731,7 +817,7 @@ class TestURLSnippets(util.MdCase):
 
         self.check_markdown(
             R'''
-            --8<-- "https://test.com/myfile.md:htmlSection"
+            --8<-- "https://test.com/myfile.md:html-section"
             ''',
             '''
             <div><p>content</p></div>
@@ -740,6 +826,57 @@ class TestURLSnippets(util.MdCase):
         )
 
 
+class TestURLDedentSnippets(util.MdCase):
+    """Test snippet URL cases."""
+
+    extension = [
+        'pymdownx.snippets', 'pymdownx.superfences'
+    ]
+
+    extension_configs = {
+        'pymdownx.snippets': {
+            'base_path': [os.path.join(BASE, '_snippets')],
+            'url_download': True,
+            'dedent_subsections': True
+        }
+    }
+
+    @patch('urllib.request.urlopen')
+    def test_url_sections(self, mock_urlopen):
+        """Test specifying a section in a URL."""
+
+        content = []
+        length = 0
+        with open('tests/test_extensions/_snippets/indented.txt', 'rb') as f:
+            for l in f:
+                length += len(l)
+                content.append(l)
+
+        cm = MagicMock()
+        cm.status = 200
+        cm.code = 200
+        cm.readlines.return_value = content
+        cm.headers = {'content-length': length}
+        cm.__enter__.return_value = cm
+        mock_urlopen.return_value = cm
+
+        self.check_markdown(
+            R'''
+            ```
+            --8<-- "https://test.com/myfile.md:py-section"
+            ```
+            ''',
+            '''
+            <div class="highlight"><pre><span></span><code>def some_method(self, param):
+                &quot;&quot;&quot;Docstring.&quot;&quot;&quot;
+
+                return param
+            </code></pre></div>
+            ''',
+            True
+        )
+
+
 class TestURLSnippetsNoMax(util.MdCase):
     """Test snippet URL cases no max size."""
 
