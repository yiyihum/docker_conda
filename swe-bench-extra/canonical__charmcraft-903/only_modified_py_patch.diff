diff --git a/charmcraft/commands/store/__init__.py b/charmcraft/commands/store/__init__.py
index 26ab8dd..cbccb21 100644
--- a/charmcraft/commands/store/__init__.py
+++ b/charmcraft/commands/store/__init__.py
@@ -401,6 +401,10 @@ class ListNamesCommand(BaseCommand):
         seen by any user, while `private` items are only for you and the
         other accounts with permission to collaborate on that specific name.
 
+        The --include-collaborations option can be included to also list those
+        names you collaborate with; in that case the publisher will be included
+        in the output.
+
         Listing names will take you through login if needed.
     """
     )
@@ -409,26 +413,36 @@ class ListNamesCommand(BaseCommand):
     def fill_parser(self, parser):
         """Add own parameters to the general parser."""
         self.include_format_option(parser)
+        parser.add_argument(
+            "--include-collaborations",
+            action="store_true",
+            help="Include the names you are a collaborator of",
+        )
 
     def run(self, parsed_args):
         """Run the command."""
         store = Store(self.config.charmhub)
-        result = store.list_registered_names()
+        with_collab = parsed_args.include_collaborations
+        result = store.list_registered_names(include_collaborations=with_collab)
 
         # build the structure that we need for both human and programmatic output
         headers = ["Name", "Type", "Visibility", "Status"]
         prog_keys = ["name", "type", "visibility", "status"]
+        if with_collab:
+            headers.append("Publisher")
+            prog_keys.append("publisher")
         data = []
         for item in result:
             visibility = "private" if item.private else "public"
-            data.append(
-                [
-                    item.name,
-                    item.entity_type,
-                    visibility,
-                    item.status,
-                ]
-            )
+            datum = [
+                item.name,
+                item.entity_type,
+                visibility,
+                item.status,
+            ]
+            if with_collab:
+                datum.append(item.publisher_display_name)
+            data.append(datum)
 
         if parsed_args.format:
             info = [dict(zip(prog_keys, item)) for item in data]
diff --git a/charmcraft/commands/store/store.py b/charmcraft/commands/store/store.py
index ed887e2..dd6fe74 100644
--- a/charmcraft/commands/store/store.py
+++ b/charmcraft/commands/store/store.py
@@ -33,7 +33,7 @@ from charmcraft.commands.store.client import Client, ALTERNATE_AUTH_ENV_VAR
 Account = namedtuple("Account", "name username id")
 Package = namedtuple("Package", "id name type")
 MacaroonInfo = namedtuple("MacaroonInfo", "account channels packages permissions")
-Entity = namedtuple("Charm", "entity_type name private status")
+Entity = namedtuple("Charm", "entity_type name private status publisher_display_name")
 Uploaded = namedtuple("Uploaded", "ok status revision errors")
 # XXX Facundo 2020-07-23: Need to do a massive rename to call `revno` to the "revision as
 # the number" inside the "revision as the structure", this gets super confusing in the code with
@@ -246,9 +246,12 @@ class Store:
         )
 
     @_store_client_wrapper()
-    def list_registered_names(self):
+    def list_registered_names(self, include_collaborations):
         """Return names registered by the authenticated user."""
-        response = self._client.request_urlpath_json("GET", "/v1/charm")
+        endpoint = "/v1/charm"
+        if include_collaborations:
+            endpoint += "?include-collaborations=true"
+        response = self._client.request_urlpath_json("GET", endpoint)
         result = []
         for item in response["results"]:
             result.append(
@@ -257,6 +260,7 @@ class Store:
                     private=item["private"],
                     status=item["status"],
                     entity_type=item["type"],
+                    publisher_display_name=item["publisher"]["display-name"],
                 )
             )
         return result
