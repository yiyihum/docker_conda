diff --git a/tests/func/experiments/test_diff.py b/tests/func/experiments/test_diff.py
--- a/tests/func/experiments/test_diff.py
+++ b/tests/func/experiments/test_diff.py
@@ -1,6 +1,17 @@
 from funcy import first
 
 
+def test_diff_no_commits(tmp_dir):
+    from scmrepo.git import Git
+
+    from dvc.repo import Repo
+
+    git = Git.init(tmp_dir.fs_path)
+    assert git.no_commits
+
+    assert Repo.init().experiments.diff() == {}
+
+
 def test_diff_empty(tmp_dir, scm, dvc, exp_stage):
     assert dvc.experiments.diff() == {"params": {}, "metrics": {}}
 
diff --git a/tests/func/experiments/test_show.py b/tests/func/experiments/test_show.py
--- a/tests/func/experiments/test_show.py
+++ b/tests/func/experiments/test_show.py
@@ -35,6 +35,18 @@ def make_executor_info(**kwargs):
     return ExecutorInfo(**kwargs)
 
 
+@pytest.mark.vscode
+def test_show_no_commits(tmp_dir):
+    from scmrepo.git import Git
+
+    from dvc.repo import Repo
+
+    git = Git.init(tmp_dir.fs_path)
+    assert git.no_commits
+
+    assert Repo.init().experiments.show() == {}
+
+
 @pytest.mark.vscode
 def test_show_simple(tmp_dir, scm, dvc, exp_stage):
     assert dvc.experiments.show()["workspace"] == {
diff --git a/tests/func/plots/test_diff.py b/tests/func/plots/test_diff.py
--- a/tests/func/plots/test_diff.py
+++ b/tests/func/plots/test_diff.py
@@ -1,3 +1,5 @@
+import pytest
+
 from tests.utils.plots import get_plot
 
 
@@ -46,3 +48,15 @@ def test_diff_dirty(tmp_dir, scm, dvc, run_copy_metrics):
     assert get_plot(
         diff_result, "workspace", "definitions", file="", endkey="data"
     ) == {"metric.json": props}
+
+
+@pytest.mark.vscode
+def test_no_commits(tmp_dir):
+    from scmrepo.git import Git
+
+    from dvc.repo import Repo
+
+    git = Git.init(tmp_dir.fs_path)
+    assert git.no_commits
+
+    assert Repo.init().plots.diff() == {}
diff --git a/tests/unit/test_scm.py b/tests/unit/test_scm.py
new file mode 100644
--- /dev/null
+++ b/tests/unit/test_scm.py
@@ -0,0 +1,9 @@
+import pytest
+
+from dvc.exceptions import DvcException
+from dvc.scm import resolve_rev
+
+
+def test_resolve_rev_empty_git_repo(scm):
+    with pytest.raises(DvcException):
+        resolve_rev(scm, "HEAD")
