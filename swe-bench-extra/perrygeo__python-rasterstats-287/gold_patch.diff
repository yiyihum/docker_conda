diff --git a/pyproject.toml b/pyproject.toml
index 3520992..f5bfa65 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -28,10 +28,10 @@ classifiers = [
 ]
 requires-python = ">=3.7"
 dependencies = [
-    "affine <3.0",
+    "affine",
     "click >7.1",
     "cligj >=0.4",
-    "fiona <1.9",
+    "fiona",
     "numpy >=1.9",
     "rasterio >=1.0",
     "simplejson",
@@ -42,6 +42,7 @@ dependencies = [
 [project.optional-dependencies]
 test = [
     "coverage",
+    "geopandas",
     "pyshp >=1.1.4",
     "pytest >=4.6",
     "pytest-cov >=2.2.0",
diff --git a/src/rasterstats/io.py b/src/rasterstats/io.py
index c2da133..e74d369 100644
--- a/src/rasterstats/io.py
+++ b/src/rasterstats/io.py
@@ -28,6 +28,21 @@ geom_types = [
     "MultiPolygon",
 ]
 
+try:
+    # Fiona 1.9+
+    import fiona.model
+
+    def fiona_generator(obj, layer=0):
+        with fiona.open(obj, "r", layer=layer) as src:
+            for feat in src:
+                yield fiona.model.to_dict(feat)
+
+except ModuleNotFoundError:
+    # Fiona <1.9
+    def fiona_generator(obj, layer=0):
+        with fiona.open(obj, "r", layer=layer) as src:
+            yield from src
+
 
 def wrap_geom(geom):
     """Wraps a geometry dict in an GeoJSON Feature"""
@@ -81,11 +96,7 @@ def read_features(obj, layer=0):
             with fiona.open(obj, "r", layer=layer) as src:
                 assert len(src) > 0
 
-            def fiona_generator(obj):
-                with fiona.open(obj, "r", layer=layer) as src:
-                    yield from src
-
-            features_iter = fiona_generator(obj)
+            features_iter = fiona_generator(obj, layer)
         except (AssertionError, TypeError, OSError, DriverError, UnicodeDecodeError):
             try:
                 mapping = json.loads(obj)
