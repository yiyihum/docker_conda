diff --git a/azurelinuxagent/ga/monitor.py b/azurelinuxagent/ga/monitor.py
index c1215806..d6b66921 100644
--- a/azurelinuxagent/ga/monitor.py
+++ b/azurelinuxagent/ga/monitor.py
@@ -406,7 +406,11 @@ class MonitorHandler(object):
             CGroupsTelemetry.track_cgroup(CGroups.for_extension(""))
             CGroupsTelemetry.track_agent()
         except Exception as e:
-            logger.error("monitor: Exception tracking wrapper and agent: {0} [{1}]", e, traceback.format_exc())
+            # when a hierarchy is not mounted, we raise an exception
+            # and we should therefore only issue a warning, since this
+            # is not unexpected
+            logger.warn("Monitor: cgroups not initialized: {0}", ustr(e))
+            logger.verbose(traceback.format_exc())
 
     def send_cgroup_telemetry(self):
         if self.last_cgroup_telemetry is None:
@@ -419,13 +423,15 @@ class MonitorHandler(object):
                         if value > 0:
                             report_metric(metric_group, metric_name, cgroup_name, value)
             except Exception as e:
-                logger.warn("Failed to collect performance metrics: {0} [{1}]", e, traceback.format_exc())
+                logger.warn("Monitor: failed to collect cgroups performance metrics: {0}", ustr(e))
+                logger.verbose(traceback.format_exc())
 
             # Look for extension cgroups we're not already tracking and track them
             try:
                 CGroupsTelemetry.update_tracked(self.protocol.client.get_current_handlers())
             except Exception as e:
-                logger.warn("Monitor: updating tracked extensions raised {0}: {1}", e, traceback.format_exc())
+                logger.warn("Monitor: failed to update cgroups tracked extensions: {0}", ustr(e))
+                logger.verbose(traceback.format_exc())
 
             self.last_cgroup_telemetry = datetime.datetime.utcnow()
 
diff --git a/azurelinuxagent/pa/provision/cloudinit.py b/azurelinuxagent/pa/provision/cloudinit.py
index 9609d7da..3f3cdb04 100644
--- a/azurelinuxagent/pa/provision/cloudinit.py
+++ b/azurelinuxagent/pa/provision/cloudinit.py
@@ -69,9 +69,10 @@ class CloudInitProvisionHandler(ProvisionHandler):
                 duration=elapsed_milliseconds(utc_start))
 
         except ProvisionError as e:
-            logger.error("Provisioning failed: {0}", ustr(e))
+            msg = "Provisioning with cloud-init failed: {0} ({1}s)".format(ustr(e), self._get_uptime_seconds())
+            logger.error(msg)
             self.report_not_ready("ProvisioningFailed", ustr(e))
-            self.report_event(ustr(e))
+            self.report_event(msg)
             return
 
     def wait_for_ovfenv(self, max_retry=1800, sleep_time=1):
diff --git a/azurelinuxagent/pa/provision/default.py b/azurelinuxagent/pa/provision/default.py
index a6e50824..0eb0823c 100644
--- a/azurelinuxagent/pa/provision/default.py
+++ b/azurelinuxagent/pa/provision/default.py
@@ -98,9 +98,10 @@ class ProvisionHandler(object):
             logger.info("Provisioning complete")
 
         except (ProtocolError, ProvisionError) as e:
+            msg = "Provisioning failed: {0} ({1}s)".format(ustr(e), self._get_uptime_seconds())
+            logger.error(msg)
             self.report_not_ready("ProvisioningFailed", ustr(e))
-            self.report_event(ustr(e), is_success=False)
-            logger.error("Provisioning failed: {0}", ustr(e))
+            self.report_event(msg, is_success=False)
             return
 
     @staticmethod

