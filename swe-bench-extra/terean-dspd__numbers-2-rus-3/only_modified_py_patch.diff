diff --git a/num2rus/converter.py b/num2rus/converter.py
index 89d38e1..212840d 100644
--- a/num2rus/converter.py
+++ b/num2rus/converter.py
@@ -131,7 +131,7 @@ NUMBERS = {
         40: "сорок",
         50: "пятьдесят",
         60: "шестьдесят",
-        70: "семьдесять",
+        70: "семьдесят",
         80: "восемьдесят",
         90: "девяносто",
     },
diff --git a/num2rus/main.py b/num2rus/main.py
index e586db5..6049e24 100644
--- a/num2rus/main.py
+++ b/num2rus/main.py
@@ -30,7 +30,7 @@ def chopper(num: int) -> Tuple[str, str]:
     marks them as
     `миллиард`, `миллион`, `тысяча`, `сотня`, `единица`, `десятка`
     """
-    num_str = str(num)
+    num_str = str(num) # '20'
     while len(num_str) > 0:
         if 13 > len(num_str) >= 10:
             step = len(num_str) - 9
@@ -50,9 +50,12 @@ def chopper(num: int) -> Tuple[str, str]:
         if len(num_str) == 1:
             yield num_str, 'единица'
             break
-        if len(num_str) == 2:
+        if len(num_str) == 2 and num_str[0] == '1':
             yield num_str, 'десятка'
             break
+        else:
+            yield num_str, 'сотня'
+            break
 
 
 def decimal_parser(number_str: str, zero_on: bool = True) -> Tuple[str, str]:
@@ -157,7 +160,6 @@ def converter(number: float, zero_on: bool = True) -> str:
     dec_str = "{0:.2f}".format(decimal - integet_part)
     decimal_part: str = dec_str.split('.')[1]
     result = ''
-    tl_g = ''
     for number, size in chopper(integet_part):
         string, tl, rub = main_parser(number, size)
         result += string + tl + ' '
@@ -169,4 +171,4 @@ def converter(number: float, zero_on: bool = True) -> str:
 
 if __name__ == "__main__":
     # num = input()
-    converter(34102)
+    converter(20)

