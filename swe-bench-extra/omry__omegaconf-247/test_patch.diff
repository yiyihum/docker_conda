diff --git a/tests/structured_conf/test_structured_config.py b/tests/structured_conf/test_structured_config.py
index 2e544de..73d446d 100644
--- a/tests/structured_conf/test_structured_config.py
+++ b/tests/structured_conf/test_structured_config.py
@@ -465,6 +465,12 @@ class TestConfigs:
         with pytest.raises(ValidationError):
             OmegaConf.merge(c1, c2)
 
+    def test_merge_into_Dict(self, class_type: str) -> None:
+        module: Any = import_module(class_type)
+        cfg = OmegaConf.structured(module.DictExamples)
+        res = OmegaConf.merge(cfg, {"strings": {"x": "abc"}})
+        assert res.strings == {"a": "foo", "b": "bar", "x": "abc"}
+
     def test_typed_dict_key_error(self, class_type: str) -> None:
         module: Any = import_module(class_type)
         input_ = module.ErrorDictIntKey
@@ -532,11 +538,6 @@ class TestConfigs:
     def test_dict_examples(self, class_type: str) -> None:
         module: Any = import_module(class_type)
         conf = OmegaConf.structured(module.DictExamples)
-        # any: Dict = {"a": 1, "b": "foo"}
-        # ints: Dict[str, int] = {"a": 10, "b": 20}
-        # strings: Dict[str, str] = {"a": "foo", "b": "bar"}
-        # booleans: Dict[str, bool] = {"a": True, "b": False}
-        # colors: Dict[str, Color] = {"red": Color.RED, "green": "GREEN", "blue": 3}
 
         def test_any(name: str) -> None:
             conf[name].c = True
diff --git a/tests/test_merge.py b/tests/test_merge.py
index 5aea074..56f80fe 100644
--- a/tests/test_merge.py
+++ b/tests/test_merge.py
@@ -125,11 +125,16 @@ from . import (
             [Users, {"name2user": {"joe": User(name="joe")}}],
             {"name2user": {"joe": {"name": "joe", "age": MISSING}}},
         ),
-        (
+        pytest.param(
             [Users, {"name2user": {"joe": {"name": "joe"}}}],
             {"name2user": {"joe": {"name": "joe", "age": MISSING}}},
+            id="users_merge_with_missing_age",
+        ),
+        pytest.param(
+            [ConfWithMissingDict, {"dict": {"foo": "bar"}}],
+            {"dict": {"foo": "bar"}},
+            id="conf_missing_dict",
         ),
-        ([ConfWithMissingDict, {"dict": {"foo": "bar"}}], {"dict": {"foo": "bar"}}),
         pytest.param(
             [{}, ConfWithMissingDict],
             {"dict": "???"},
