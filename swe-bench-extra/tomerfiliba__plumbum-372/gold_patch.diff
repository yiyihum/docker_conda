diff --git a/build.py b/build.py
index 1cfd980..cacb752 100755
--- a/build.py
+++ b/build.py
@@ -25,7 +25,7 @@ class BuildProject(cli.Application):
             if twine is None:
                 print("Twine not installed, cannot securely upload. Install twine.")
             else:
-                twine['upload','dist/*gztar' 'dist/*.exe' '*.whl'] & FG
+                twine['upload', 'dist/*tar.gz', 'dist/*.exe', 'dist/*.whl'] & FG
 
 
 if __name__ == "__main__":
diff --git a/dev-requirements.txt b/dev-requirements.txt
index db117b1..ebc89d8 100644
--- a/dev-requirements.txt
+++ b/dev-requirements.txt
@@ -1,5 +1,6 @@
 pytest
 pytest-cov
+pytest-mock
 pycparser<2.18 ; python_version < '2.7'
 paramiko<2.4 ; python_version < '2.7'
 paramiko ; python_version >= '2.7'
diff --git a/plumbum/cli/application.py b/plumbum/cli/application.py
index 75bad0e..5434de1 100644
--- a/plumbum/cli/application.py
+++ b/plumbum/cli/application.py
@@ -406,15 +406,13 @@ class Application(object):
                 ngettext(
                     "Expected at least {0} positional argument, got {1}",
                     "Expected at least {0} positional arguments, got {1}",
-                    min_args).format(
-                        min_args, tailargs))
+                    min_args).format(min_args, tailargs))
         elif len(tailargs) > max_args:
             raise PositionalArgumentsError(
                 ngettext(
                     "Expected at most {0} positional argument, got {1}",
                     "Expected at most {0} positional arguments, got {1}",
-                    max_args).format(
-                        max_args, tailargs))
+                    max_args).format(max_args, tailargs))
 
         # Positional arguement validataion
         if hasattr(self.main, 'positional'):
diff --git a/plumbum/cli/i18n.py b/plumbum/cli/i18n.py
index b85db2c..45ef8b9 100644
--- a/plumbum/cli/i18n.py
+++ b/plumbum/cli/i18n.py
@@ -8,9 +8,9 @@ if loc is None or loc.startswith('en'):
             return str
         def ngettext(self, str1, strN, n):
             if n==1:
-                return str1.format(n)
+                return str1.replace("{0}", str(n))
             else:
-                return strN.format(n)
+                return strN.replace("{0}", str(n))
 
     def get_translation_for(package_name):
         return NullTranslation()
diff --git a/plumbum/machines/ssh_machine.py b/plumbum/machines/ssh_machine.py
index e963745..68819a2 100644
--- a/plumbum/machines/ssh_machine.py
+++ b/plumbum/machines/ssh_machine.py
@@ -276,6 +276,7 @@ class PuttyMachine(SshMachine):
             user = local.env.user
         if port is not None:
             ssh_opts.extend(["-P", str(port)])
+            scp_opts = list(scp_opts) + ["-P", str(port)]
             port = None
         SshMachine.__init__(self, host, user, port, keyfile = keyfile, ssh_command = ssh_command,
             scp_command = scp_command, ssh_opts = ssh_opts, scp_opts = scp_opts, encoding = encoding,
@@ -292,5 +293,3 @@ class PuttyMachine(SshMachine):
     def session(self, isatty = False, new_session = False):
         return ShellSession(self.popen((), (["-t"] if isatty else ["-T"]), new_session = new_session),
             self.custom_encoding, isatty, self.connect_timeout)
-
-
