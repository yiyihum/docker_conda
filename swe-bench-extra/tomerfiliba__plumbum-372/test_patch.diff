diff --git a/tests/test_cli.py b/tests/test_cli.py
index 95bc7c6..71298de 100644
--- a/tests/test_cli.py
+++ b/tests/test_cli.py
@@ -25,7 +25,9 @@ class SimpleApp(cli.Application):
         self.eggs = old
         self.tailargs = args
 
-
+class PositionalApp(cli.Application):
+    def main(self, one):
+        print("Got", one)
 
 class Geet(cli.Application):
     debug = cli.Flag("--debug")
@@ -123,6 +125,24 @@ class TestCLI:
         _, rc = SimpleApp.run(["foo", "--bacon=hello"], exit = False)
         assert rc == 2
 
+
+    # Testing #371
+    def test_extra_args(self, capsys):
+
+        _, rc = PositionalApp.run(["positionalapp"], exit = False)
+        assert rc != 0
+        stdout, stderr = capsys.readouterr()
+        assert "Expected at least" in stdout
+
+        _, rc = PositionalApp.run(["positionalapp", "one"], exit = False)
+        assert rc == 0
+        stdout, stderr = capsys.readouterr()
+
+        _, rc = PositionalApp.run(["positionalapp", "one", "two"], exit = False)
+        assert rc != 0
+        stdout, stderr = capsys.readouterr()
+        assert "Expected at most" in stdout
+
     def test_subcommands(self):
         _, rc = Geet.run(["geet", "--debug"], exit = False)
         assert rc == 0
diff --git a/tests/test_putty.py b/tests/test_putty.py
new file mode 100644
index 0000000..763407f
--- /dev/null
+++ b/tests/test_putty.py
@@ -0,0 +1,69 @@
+"""Test that PuttyMachine initializes its SshMachine correctly"""
+
+import pytest
+from plumbum import PuttyMachine, SshMachine
+
+from plumbum._testtools import xfail_on_pypy
+
+
+@pytest.fixture(params=['default', '322'])
+def ssh_port(request):
+    return request.param
+
+
+class TestPuttyMachine:
+    @xfail_on_pypy
+    def test_putty_command(self, mocker, ssh_port):
+        local = mocker.patch('plumbum.machines.ssh_machine.local')
+        init = mocker.spy(SshMachine, '__init__')
+        mocker.patch('plumbum.machines.ssh_machine.BaseRemoteMachine')
+
+        host = mocker.MagicMock()
+        user = local.env.user
+        port = keyfile = None
+        ssh_command = local["plink"]
+        scp_command = local["pscp"]
+        ssh_opts = ["-ssh"]
+        if ssh_port == 'default':
+            putty_port = None
+            scp_opts = ()
+        else:
+            putty_port = int(ssh_port)
+            ssh_opts.extend(['-P', ssh_port])
+            scp_opts = ['-P', ssh_port]
+        encoding = mocker.MagicMock()
+        connect_timeout = 20
+        new_session = True
+
+        PuttyMachine(
+            host,
+            port=putty_port,
+            connect_timeout=connect_timeout,
+            new_session=new_session,
+            encoding=encoding,
+        )
+
+        init.assert_called_with(
+            mocker.ANY,
+            host,
+            user,
+            port,
+            keyfile=keyfile,
+            ssh_command=ssh_command,
+            scp_command=scp_command,
+            ssh_opts=ssh_opts,
+            scp_opts=scp_opts,
+            encoding=encoding,
+            connect_timeout=connect_timeout,
+            new_session=new_session,
+        )
+
+    def test_putty_str(self, mocker):
+        local = mocker.patch('plumbum.machines.ssh_machine.local')
+        mocker.patch('plumbum.machines.ssh_machine.BaseRemoteMachine')
+
+        host = mocker.MagicMock()
+        user = local.env.user
+
+        machine = PuttyMachine(host)
+        assert str(machine) == 'putty-ssh://{0}@{1}'.format(user, host)
