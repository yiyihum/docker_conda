diff --git a/docs/examples/alias_generator_config.py b/docs/examples/alias_generator_config.py
--- a/docs/examples/alias_generator_config.py
+++ b/docs/examples/alias_generator_config.py
@@ -5,12 +5,11 @@ def to_camel(string: str) -> str:
 
 class Voice(BaseModel):
     name: str
-    gender: str
     language_code: str
 
     class Config:
         alias_generator = to_camel
 
-voice = Voice(Name='Filiz', Gender='Female', LanguageCode='tr-TR')
+voice = Voice(Name='Filiz', LanguageCode='tr-TR')
 print(voice.language_code)
 print(voice.dict(by_alias=True))
diff --git a/docs/examples/alias_precedence.py b/docs/examples/alias_precedence.py
new file mode 100644
--- /dev/null
+++ b/docs/examples/alias_precedence.py
@@ -0,0 +1,21 @@
+from pydantic import BaseModel
+
+class Voice(BaseModel):
+    name: str
+    language_code: str
+
+    class Config:
+        @classmethod
+        def alias_generator(cls, string: str) -> str:
+            # this is the same as `alias_generator = to_camel` above
+            return ''.join(word.capitalize() for word in string.split('_'))
+
+class Character(Voice):
+    mood: str
+
+    class Config:
+        fields = {'mood': 'Mood', 'language_code': 'lang'}
+
+c = Character(Mood='happy', Name='Filiz', lang='tr-TR')
+print(c)
+print(c.dict(by_alias=True))
diff --git a/pydantic/fields.py b/pydantic/fields.py
--- a/pydantic/fields.py
+++ b/pydantic/fields.py
@@ -263,10 +263,10 @@ def infer(
 
     def set_config(self, config: Type['BaseConfig']) -> None:
         self.model_config = config
-        schema_from_config = config.get_field_info(self.name)
-        if schema_from_config:
+        info_from_config = config.get_field_info(self.name)
+        if info_from_config:
             self.field_info = cast(FieldInfo, self.field_info)
-            self.field_info.alias = self.field_info.alias or schema_from_config.get('alias') or self.name
+            self.field_info.alias = info_from_config.get('alias') or self.field_info.alias or self.name
             self.alias = cast(str, self.field_info.alias)
 
     @property
