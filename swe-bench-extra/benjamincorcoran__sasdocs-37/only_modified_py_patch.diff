diff --git a/sasdocs/objects.py b/sasdocs/objects.py
index 3958f48..0ec2506 100644
--- a/sasdocs/objects.py
+++ b/sasdocs/objects.py
@@ -650,6 +650,33 @@ class macro(baseSASObject):
         self.shortDesc = re.sub(r'\s+',' ',self.shortDesc)       
 
 
+@attr.s
+class macroCall(baseSASObject):
+    """
+    Abstracted python class for SAS macro call.
+    
+    This class parses a SAS macro call. 
+
+    .. code-block:: sas
+
+        %runMacro;
+        
+        /*and*/
+
+        %runMacro(arg1=A);
+
+
+    Attributes
+    ----------
+    name : str 
+        Name of the marco
+    arguments : list, optional
+        List of macroarguments parsed from the macro defintion
+    """
+    name = attr.ib()
+    arguments = attr.ib()
+
+
 # Parsy Objects
 # Define reFlags as ignorecase and dotall to capture new lines
 reFlags = re.IGNORECASE|re.DOTALL
@@ -845,6 +872,12 @@ mcroStart = ps.seq(
 
 mcroEnd = (ps.regex(r'%mend.*?;',flags=re.IGNORECASE)).map(macroEnd)
 
+mcroCall = ps.seq(
+    name = ps.regex(r'%') >> sasName,
+    arguments = (opspc >> mcroargline).optional(),
+    _col = opspc + col
+).combine_dict(macroCall)
+
 # fullprogram: multiple SAS objects including macros
-fullprogram =  (nl|mcvDef|cmnt|datastep|proc|sql|lbnm|icld|mcroStart|mcroEnd).optional()
+fullprogram =  (nl|mcvDef|cmnt|datastep|proc|sql|lbnm|icld|mcroStart|mcroEnd|mcroCall).optional()
 

