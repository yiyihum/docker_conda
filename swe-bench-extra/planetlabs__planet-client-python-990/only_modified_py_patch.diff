diff --git a/planet/cli/orders.py b/planet/cli/orders.py
index 40ce1ba..6a6b511 100644
--- a/planet/cli/orders.py
+++ b/planet/cli/orders.py
@@ -253,11 +253,27 @@ async def create(ctx, request: str, pretty):
               default=False,
               is_flag=True,
               help='Send email notification when order is complete.')
+@click.option('--archive-type',
+              type=click.Choice(['zip']),
+              help="Optionally zip archive each item bundle.")
+@click.option('--archive-filename',
+              default='{{name}}-{{order_id}}.zip',
+              show_default=True,
+              help="Templated filename for archived bundles or orders.")
+@click.option('--single-archive',
+              is_flag=True,
+              default=False,
+              show_default=True,
+              help="Optionally zip archive all item bundles together.")
 @click.option(
+    '--delivery',
     '--cloudconfig',
     type=types.JSON(),
-    help="""Credentials for cloud storage provider to enable cloud delivery of
-    data. Can be a json string, filename, or '-' for stdin.""")
+    help=("Delivery configuration, which may include credentials for a cloud "
+          "storage provider, to enable cloud delivery of data, and/or "
+          "parameters for bundling deliveries as zip archives. Can be a JSON "
+          "string, a filename, or '-' for stdin. The --cloudconfig option is "
+          "an alias for this use case."))
 @click.option(
     '--stac/--no-stac',
     default=True,
@@ -274,7 +290,10 @@ async def request(ctx,
                   clip,
                   tools,
                   email,
-                  cloudconfig,
+                  archive_type,
+                  archive_filename,
+                  single_archive,
+                  delivery,
                   stac,
                   pretty):
     """Generate an order request.
@@ -303,14 +322,12 @@ async def request(ctx,
         except planet.exceptions.ClientError as e:
             raise click.BadParameter(e)
 
-    if cloudconfig:
-        delivery = planet.order_request.delivery(cloud_config=cloudconfig)
-        if "google_earth_engine" in cloudconfig:
-            stac = False
-    else:
-        delivery = None
+    delivery = planet.order_request.delivery(archive_type=archive_type,
+                                             archive_filename=archive_filename,
+                                             single_archive=single_archive,
+                                             cloud_config=delivery)
 
-    if stac:
+    if stac and "google_earth_engine" not in delivery:
         stac_json = {'stac': {}}
     else:
         stac_json = {}
diff --git a/planet/cli/subscriptions.py b/planet/cli/subscriptions.py
index f5551e8..eebc1a8 100644
--- a/planet/cli/subscriptions.py
+++ b/planet/cli/subscriptions.py
@@ -226,10 +226,13 @@ async def list_subscription_results_cmd(ctx,
               required=True,
               type=types.JSON(),
               help='Source JSON. Can be a string, filename, or - for stdin.')
-@click.option('--delivery',
-              required=True,
-              type=types.JSON(),
-              help='Delivery JSON. Can be a string, filename, or - for stdin.')
+@click.option(
+    '--delivery',
+    required=True,
+    type=types.JSON(),
+    help=("Delivery configuration, including credentials for a cloud "
+          "storage provider, to enable cloud delivery of data. Can be a "
+          "JSON string, a filename, or '-' for stdin. "))
 @click.option(
     '--notifications',
     type=types.JSON(),
diff --git a/planet/order_request.py b/planet/order_request.py
index f36644c..0d4b603 100644
--- a/planet/order_request.py
+++ b/planet/order_request.py
@@ -15,7 +15,7 @@
 """Functionality for preparing order details for use in creating an order"""
 from __future__ import annotations  # https://stackoverflow.com/a/33533514
 import logging
-from typing import Optional, Any, Dict, List, Union
+from typing import Any, Dict, List, Mapping, Optional, Union
 
 from . import geojson, specs
 from .exceptions import ClientError
@@ -163,9 +163,9 @@ def notifications(email: Optional[bool] = None,
 
 
 def delivery(archive_type: Optional[str] = None,
-             single_archive: bool = False,
+             single_archive: Optional[bool] = False,
              archive_filename: Optional[str] = None,
-             cloud_config: Optional[dict] = None) -> dict:
+             cloud_config: Optional[Mapping] = None) -> dict:
     """Order delivery configuration.
 
     Example:
@@ -196,20 +196,21 @@ def delivery(archive_type: Optional[str] = None,
     Raises:
         planet.specs.SpecificationException: If archive_type is not valid.
     """
+    config: Dict[str, Any] = {}
+
     if archive_type:
         archive_type = specs.validate_archive_type(archive_type)
 
-        # for missing archive file name
         if archive_filename is None:
             archive_filename = "{{name}}_{{order_id}}.zip"
 
-    fields = ['archive_type', 'single_archive', 'archive_filename']
-    values = [archive_type, single_archive, archive_filename]
-
-    config = dict((k, v) for k, v in zip(fields, values) if v)
+        config.update(archive_type=archive_type,
+                      archive_filename=archive_filename,
+                      single_archive=single_archive)
 
     if cloud_config:
         config.update(cloud_config)
+
     return config
 
 

