diff --git a/pydra/engine/tests/test_shelltask.py b/pydra/engine/tests/test_shelltask.py
index 79f1a8c..f77dd06 100644
--- a/pydra/engine/tests/test_shelltask.py
+++ b/pydra/engine/tests/test_shelltask.py
@@ -1674,6 +1674,40 @@ def test_shell_cmd_inputspec_12(tmpdir, plugin, results_function):
     assert shelly.output_dir == res.output.file_copy.parent
 
 
+def test_shell_cmd_inputspec_with_iterable():
+    """Test formatting of argstr with different iterable types."""
+
+    input_spec = SpecInfo(
+        name="Input",
+        fields=[
+            (
+                "iterable_1",
+                ty.Iterable[int],
+                {
+                    "help_string": "iterable input 1",
+                    "argstr": "--in1",
+                },
+            ),
+            (
+                "iterable_2",
+                ty.Iterable[str],
+                {
+                    "help_string": "iterable input 2",
+                    "argstr": "--in2...",
+                },
+            ),
+        ],
+        bases=(ShellSpec,),
+    )
+
+    task = ShellCommandTask(name="test", input_spec=input_spec, executable="test")
+
+    for iterable_type in (list, tuple):
+        task.inputs.iterable_1 = iterable_type(range(3))
+        task.inputs.iterable_2 = iterable_type(["bar", "foo"])
+        assert task.cmdline == "test --in1 0 1 2 --in2 bar --in2 foo"
+
+
 @pytest.mark.parametrize("results_function", [result_no_submitter, result_submitter])
 def test_shell_cmd_inputspec_copyfile_1(plugin, results_function, tmpdir):
     """shelltask changes a file in place,
@@ -3251,6 +3285,7 @@ def test_shell_cmd_outputspec_8d(tmpdir, plugin, results_function):
     """
     customised output_spec, adding Directory to the output named by input spec
     """
+
     # For /tmp/some_dict/test this function returns "/test"
     def get_lowest_directory(directory_path):
         return str(directory_path).replace(str(Path(directory_path).parents[0]), "")
@@ -4395,7 +4430,8 @@ def test_shell_cmd_non_existing_outputs_1(tmpdir):
 
 def test_shell_cmd_non_existing_outputs_2(tmpdir):
     """Checking that non existing output files do not return a phantom path,
-    but return NOTHING instead. This test has one existing and one non existing output file."""
+    but return NOTHING instead. This test has one existing and one non existing output file.
+    """
     input_spec = SpecInfo(
         name="Input",
         fields=[
@@ -4460,7 +4496,8 @@ def test_shell_cmd_non_existing_outputs_2(tmpdir):
 
 def test_shell_cmd_non_existing_outputs_3(tmpdir):
     """Checking that non existing output files do not return a phantom path,
-    but return NOTHING instead. This test has an existing mandatory output and another non existing output file."""
+    but return NOTHING instead. This test has an existing mandatory output and another non existing output file.
+    """
     input_spec = SpecInfo(
         name="Input",
         fields=[
@@ -4886,7 +4923,6 @@ def test_shellspec_formatter_splitter_2(tmpdir):
 
 @no_win
 def test_shellcommand_error_msg(tmpdir):
-
     script_path = Path(tmpdir) / "script.sh"
 
     with open(script_path, "w") as f:
