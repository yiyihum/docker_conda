diff --git a/sphinx_gallery/tests/reference_parse.txt b/sphinx_gallery/tests/reference_parse.txt
index 376bbee..8eda9f9 100644
--- a/sphinx_gallery/tests/reference_parse.txt
+++ b/sphinx_gallery/tests/reference_parse.txt
@@ -7,27 +7,29 @@
  ('text',
   'There is no need to always alternate between code and comment blocks\nNow there is free repetition of both\n',
   26),
- ('text', 'And a single line of hashes can split your blocks\n', 30),
- ('text', 'Latex in the comments does not need to be escaped\n\n.. math::\n   \\sin\n', 34),
+ ('text',
+  "A block an be split by either a single line of ``#``'s (>=20 columns) or \n``#%%``. For compatibility reasons ``# %%`` (with a space) can also be used\nbut we recommend only using ``#%%`` for consistency. All future \n'block splitters' used in the source ``.py`` document will be ``#%%``.\n",
+  30),
+ ('text', 'Latex in the comments does not need to be escaped\n\n.. math::\n   \\sin\n', 36),
  ('code',
   '\ndef dummy():\n    """This should not be part of a \'text\' block\'"""\n\n    ######################################\n    # Comment inside code to remain here\n    pass\n\n# this should not be part of a \'text\' block\n\n',
-  38),
+  40),
  ('text',
   '####################################################################\n\nMaking a line cut in sphinx\n',
-  49),
+  51),
  ('text',
-  '.. warning::\n    The next kind of comments are not supported and become to hard to escape\n    so just don\'t code like this::\n\n        def dummy2():\n            """Function docstring"""\n        ####################################\n        # This comment inside python indentation\n        # breaks the block structure and is not\n        # supported\n            dummy2\n\n',
-  55),
- ('code', '\n"""Free strings are not supported they remain part of the code"""\n\n', 67),
+  '.. warning::\n    The next kind of comments are not supported and become too hard to escape\n    so just don\'t code like this::\n\n        def dummy2():\n            """Function docstring"""\n        ####################################\n        # This comment \n        #%%\n        # and this comment inside python indentation\n        # breaks the block structure and is not\n        # supported\n            dummy2\n\n',
+  57),
+ ('code', '\n"""Free strings are not supported. They remain part of the code"""\n\n', 71),
  ('text',
-  'New lines can be included in you block comments and the parser\nis capable of retaining this significant whitespace to work with sphinx\n\nSo the reStructuredText headers survive\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
-  71),
- ('code', "\n\nprint('one')\n\n", 76),
+  'New lines can be included in your block comments and the parser\nis capable of retaining this significant whitespace to work with sphinx\n\nSo the reStructuredText headers survive\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
+  75),
+ ('code', "\n\nprint('one')\n\n", 80),
  ('text',
-  'Code block separators\n##############################################################################\n Surrounding a comment line with lines of # like a block spliter also\n works and creates a new header for that comment block\n too. Nevertheless to get rich text formatting we advise to use\n RestructuredText syntax in the comment blocks.\n',
-  81),
- ('code', "\nprint('two')\n", 87),
- ('code', 'B = 1\n\n', 91),
+  "Code block separators\n###################################################################\n Surrounding a comment line with a line of ``#``'s (like a block splitter)\n above and below (or ``#%%`` on top and a line of ``#``'s below, as we have \n done here in the source ``.py`` doc) also works and creates a new header for\n that comment block too. Nevertheless to get rich text formatting we advise to\n use RestructuredText syntax in the comment blocks.\n",
+  85),
+ ('code', "\nprint('two')\n", 92),
+ ('code', 'B = 1\n\n', 96),
  ('text',
   "End comments\n\nThat's all folks !\n\n.. literalinclude:: plot_parse.py\n\n\n",
-  94)]
+  99)]
diff --git a/sphinx_gallery/tests/test_gen_rst.py b/sphinx_gallery/tests/test_gen_rst.py
index b3d0081..82644ad 100644
--- a/sphinx_gallery/tests/test_gen_rst.py
+++ b/sphinx_gallery/tests/test_gen_rst.py
@@ -67,7 +67,8 @@ def test_split_code_and_text_blocks():
 
 def test_bug_cases_of_notebook_syntax():
     """Test over the known requirements of supported syntax in the
-    notebook styled comments"""
+    notebook styled comments. Use both '#'s' and '# %%' as cell 
+    separators"""
 
     with open('sphinx_gallery/tests/reference_parse.txt') as reference:
         ref_blocks = ast.literal_eval(reference.read())
@@ -110,8 +111,11 @@ def test_rst_block_after_docstring(gallery_conf, tmpdir):
                            '####################',
                            '# Paragraph 1',
                            '',
-                           '####################',
+                           '#%%',
                            '# Paragraph 2',
+                           '',
+                           '# %%',
+                           '# Paragraph 3',
                            '']))
     file_conf, blocks = sg.split_code_and_text_blocks(filename)
 
@@ -119,6 +123,7 @@ def test_rst_block_after_docstring(gallery_conf, tmpdir):
     assert blocks[0][0] == 'text'
     assert blocks[1][0] == 'text'
     assert blocks[2][0] == 'text'
+    assert blocks[3][0] == 'text'
 
     script_vars = {'execute_script': ''}
 
@@ -133,6 +138,8 @@ def test_rst_block_after_docstring(gallery_conf, tmpdir):
         '',
         'Paragraph 2',
         '',
+        'Paragraph 3',
+        '',
         ''])
 
 
