diff --git a/tests/func/machine/__init__.py b/tests/func/machine/__init__.py
--- a/tests/func/machine/__init__.py
+++ b/tests/func/machine/__init__.py
@@ -0,0 +1,10 @@
+import textwrap
+
+CONFIG_TEXT = textwrap.dedent(
+    """\
+        [feature]
+            machine = true
+        ['machine "foo"']
+            cloud = aws
+    """
+)
diff --git a/tests/func/machine/test_machine_config.py b/tests/func/machine/test_machine_config.py
--- a/tests/func/machine/test_machine_config.py
+++ b/tests/func/machine/test_machine_config.py
@@ -5,14 +5,7 @@
 
 from dvc.main import main
 
-CONFIG_TEXT = textwrap.dedent(
-    """\
-        [feature]
-            machine = true
-        ['machine \"foo\"']
-            cloud = aws
-    """
-)
+from . import CONFIG_TEXT
 
 
 @pytest.mark.parametrize(
diff --git a/tests/func/machine/test_machine_status.py b/tests/func/machine/test_machine_status.py
new file mode 100644
--- /dev/null
+++ b/tests/func/machine/test_machine_status.py
@@ -0,0 +1,43 @@
+import json
+
+from tpi.terraform import TerraformBackend
+
+from dvc.command.machine import CmdMachineStatus
+from dvc.main import main
+
+from . import CONFIG_TEXT
+
+STATUS = """{
+    "aws_security_group": null,
+    "cloud": "aws",
+    "id": "iterative-2jyhw8j9ieov6",
+    "image": "ubuntu-bionic-18.04-amd64-server-20210818",
+    "instance_gpu": null,
+    "instance_hdd_size": 35,
+    "instance_ip": "123.123.123.123",
+    "instance_launch_time": "2021-08-25T07:13:03Z",
+    "instance_type": "m",
+    "name": "test-resource",
+    "region": "us-west",
+    "spot": false,
+    "spot_price": -1,
+    "ssh_name": null,
+    "ssh_private": "-----BEGIN RSA PRIVATE KEY-----\\n",
+    "startup_script": "IyEvYmluL2Jhc2g=",
+    "timeouts": null
+}"""
+
+
+def test_status(tmp_dir, scm, dvc, mocker, capsys):
+    (tmp_dir / ".dvc" / "config").write_text(CONFIG_TEXT)
+    status = json.loads(STATUS)
+
+    mocker.patch.object(
+        TerraformBackend, "instances", autospec=True, return_value=[status]
+    )
+
+    assert main(["machine", "status", "foo"]) == 0
+    cap = capsys.readouterr()
+    assert "instance_num_1:" in cap.out
+    for key in CmdMachineStatus.SHOWN_FIELD:
+        assert f"\t{key:20}: {status[key]}" in cap.out
diff --git a/tests/unit/command/test_machine.py b/tests/unit/command/test_machine.py
--- a/tests/unit/command/test_machine.py
+++ b/tests/unit/command/test_machine.py
@@ -9,6 +9,7 @@
     CmdMachineModify,
     CmdMachineRemove,
     CmdMachineSsh,
+    CmdMachineStatus,
 )
 
 DATA = {
@@ -56,6 +57,19 @@ def test_create(tmp_dir, dvc, mocker):
     m.assert_called_once_with("foo")
 
 
+def test_status(tmp_dir, dvc, mocker):
+    cli_args = parse_args(["machine", "status", "foo"])
+    assert cli_args.func == CmdMachineStatus
+
+    cmd = cli_args.func(cli_args)
+    m = mocker.patch.object(
+        cmd.repo.machine, "status", autospec=True, return_value=[]
+    )
+
+    assert cmd.run() == 0
+    m.assert_called_once_with("foo")
+
+
 def test_destroy(tmp_dir, dvc, mocker):
     cli_args = parse_args(["machine", "destroy", "foo"])
     assert cli_args.func == CmdMachineDestroy
