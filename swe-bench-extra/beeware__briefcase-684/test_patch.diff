diff --git a/tests/commands/new/test_validate_bundle.py b/tests/commands/new/test_validate_bundle.py
index a07eb574..112399f3 100644
--- a/tests/commands/new/test_validate_bundle.py
+++ b/tests/commands/new/test_validate_bundle.py
@@ -23,6 +23,7 @@ def test_valid_bundle(new_command, bundle):
         'com.hello_world',  # underscore
         'com.hello,world',  # comma
         'com.hello world!',  # exclamation point
+        'com.pass.example',  # Reserved word
     ]
 )
 def test_invalid_bundle(new_command, bundle):
diff --git a/tests/config/test_AppConfig.py b/tests/config/test_AppConfig.py
index 4e7e8f6e..9c39b4ca 100644
--- a/tests/config/test_AppConfig.py
+++ b/tests/config/test_AppConfig.py
@@ -133,6 +133,53 @@ def test_invalid_app_name(name):
         )
 
 
+@pytest.mark.parametrize(
+    'bundle',
+    [
+        'com.example',
+        'com.example.more',
+        'com.example42.more',
+        'com.example-42.more',
+    ]
+)
+def test_valid_bundle(bundle):
+    try:
+        AppConfig(
+            app_name='myapp',
+            version="1.2.3",
+            bundle=bundle,
+            description="A simple app",
+            sources=['src/myapp']
+        )
+    except BriefcaseConfigError:
+        pytest.fail(f'{bundle} should be valid')
+
+
+@pytest.mark.parametrize(
+    'bundle',
+    [
+        'not a bundle!',  # Free text.
+        'home',  # Only one section.
+        'com.hello_world',  # underscore
+        'com.hello,world',  # comma
+        'com.hello world!',  # exclamation point
+        'com.pass',  # Python reserved word
+        'com.pass.example',  # Python reserved word
+        'com.switch',  # Java reserved word
+        'com.switch.example',  # Java reserved word
+    ]
+)
+def test_invalid_bundle_identifier(bundle):
+    with pytest.raises(BriefcaseConfigError, match=r"is not a valid bundle identifier\."):
+        AppConfig(
+            app_name="myapp",
+            version="1.2.3",
+            bundle=bundle,
+            description="A simple app",
+            sources=['src/invalid']
+        )
+
+
 def test_valid_app_version():
     try:
         AppConfig(
diff --git a/tests/config/test_is_valid_bundle_identifier.py b/tests/config/test_is_valid_bundle_identifier.py
new file mode 100644
index 00000000..0ad9f5fb
--- /dev/null
+++ b/tests/config/test_is_valid_bundle_identifier.py
@@ -0,0 +1,36 @@
+import pytest
+
+from briefcase.config import is_valid_bundle_identifier
+
+
+@pytest.mark.parametrize(
+    'bundle',
+    [
+        'com.example',
+        'com.example.more',
+        'com.example42.more',
+        'com.example-42.more',
+    ]
+)
+def test_valid_bundle(bundle):
+    "Test that valid bundles are accepted"
+    assert is_valid_bundle_identifier(bundle)
+
+
+@pytest.mark.parametrize(
+    'bundle',
+    [
+        'not a bundle!',  # Free text.
+        'home',  # Only one section.
+        'com.hello_world',  # underscore
+        'com.hello,world',  # comma
+        'com.hello world!',  # exclamation point
+        'com.pass',  # Python reserved word
+        'com.pass.example',  # Python reserved word
+        'com.switch',  # Java reserved word
+        'com.switch.example',  # Java reserved word
+    ]
+)
+def test_invalid_bundle(bundle):
+    "Test that invalid bundles are rejected"
+    assert not is_valid_bundle_identifier(bundle)
