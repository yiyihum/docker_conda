diff --git a/tests/func/test_cli.py b/tests/func/test_cli.py
--- a/tests/func/test_cli.py
+++ b/tests/func/test_cli.py
@@ -6,7 +6,6 @@
 from dvc.commands.checkout import CmdCheckout
 from dvc.commands.config import CmdConfig
 from dvc.commands.data_sync import CmdDataPull, CmdDataPush
-from dvc.commands.gc import CmdGC
 from dvc.commands.init import CmdInit
 from dvc.commands.remove import CmdRemove
 from dvc.commands.repro import CmdRepro
@@ -144,27 +143,6 @@ def test(self):
         cmd.repo.close()
 
 
-class TestGC(TestDvc):
-    def test(self):
-        args = parse_args(["gc"])
-        cmd = args.func(args)
-        self.assertIsInstance(cmd, CmdGC)
-
-        cmd.repo.close()
-
-
-class TestGCMultipleDvcRepos(TestDvc):
-    def test(self):
-        args = parse_args(["gc", "-p", "/tmp/asdf", "/tmp/xyz"])
-
-        cmd = args.func(args)
-        self.assertIsInstance(cmd, CmdGC)
-
-        self.assertEqual(args.repos, ["/tmp/asdf", "/tmp/xyz"])
-
-        cmd.repo.close()
-
-
 class TestConfig(TestDvc):
     def test(self):
         name = "section.option"
diff --git a/tests/func/test_gc.py b/tests/func/test_gc.py
--- a/tests/func/test_gc.py
+++ b/tests/func/test_gc.py
@@ -268,23 +268,14 @@ def test_gc_without_workspace_on_tags_branches_commits(tmp_dir, dvc):
     dvc.gc(force=False, all_branches=True, all_commits=False, workspace=False)
 
 
-def test_gc_without_workspace(tmp_dir, dvc, caplog):
+@pytest.mark.parametrize("cloud", ["c", ""])
+def test_gc_without_workspace(tmp_dir, dvc, caplog, cloud):
     with caplog.at_level(logging.WARNING, logger="dvc"):
-        assert main(["gc", "-vf"]) == 255
+        assert main(["gc", f"-{cloud}vf"]) == 255
 
     assert (
         "Either of `-w|--workspace`, `-a|--all-branches`, `-T|--all-tags` "
-        "`--all-experiments` or `--all-commits` needs to be set."
-    ) in caplog.text
-
-
-def test_gc_cloud_without_any_specifier(tmp_dir, dvc, caplog):
-    with caplog.at_level(logging.WARNING, logger="dvc"):
-        assert main(["gc", "-cvf"]) == 255
-
-    assert (
-        "Either of `-w|--workspace`, `-a|--all-branches`, `-T|--all-tags` "
-        "`--all-experiments` or `--all-commits` needs to be set."
+        "`--all-experiments`, `--all-commits` or `--date` needs to be set."
     ) in caplog.text
 
 
diff --git a/tests/unit/command/test_experiments.py b/tests/unit/command/test_experiments.py
--- a/tests/unit/command/test_experiments.py
+++ b/tests/unit/command/test_experiments.py
@@ -155,6 +155,8 @@ def test_experiments_gc(dvc, scm, mocker):
             "--all-branches",
             "--all-commits",
             "--queued",
+            "--date",
+            "2022-07-04",
             "--force",
         ]
     )
@@ -171,6 +173,7 @@ def test_experiments_gc(dvc, scm, mocker):
         all_tags=True,
         all_branches=True,
         all_commits=True,
+        commit_date="2022-07-04",
         queued=True,
     )
 
diff --git a/tests/unit/command/test_gc.py b/tests/unit/command/test_gc.py
new file mode 100644
--- /dev/null
+++ b/tests/unit/command/test_gc.py
@@ -0,0 +1,54 @@
+import pytest
+
+from dvc.cli import parse_args
+from dvc.commands.gc import CmdGC
+from dvc.exceptions import InvalidArgumentError
+
+
+def test_(dvc, scm, mocker):
+    cli_args = parse_args(
+        [
+            "gc",
+            "--workspace",
+            "--all-tags",
+            "--all-branches",
+            "--all-commits",
+            "--all-experiments",
+            "--date",
+            "2022-06-30",
+            "--cloud",
+            "--remote",
+            "origin",
+            "--force",
+            "--jobs",
+            "3",
+            "--projects",
+            "project1",
+            "project2",
+        ]
+    )
+    assert cli_args.func == CmdGC
+
+    cmd = cli_args.func(cli_args)
+    m = mocker.patch("dvc.repo.Repo.gc", return_value={})
+
+    assert cmd.run() == 0
+
+    m.assert_called_once_with(
+        workspace=True,
+        all_tags=True,
+        all_branches=True,
+        all_commits=True,
+        all_experiments=True,
+        commit_date="2022-06-30",
+        cloud=True,
+        remote="origin",
+        force=True,
+        jobs=3,
+        repos=["project1", "project2"],
+    )
+
+    cli_args = parse_args(["gc"])
+    cmd = cli_args.func(cli_args)
+    with pytest.raises(InvalidArgumentError):
+        cmd.run()
diff --git a/tests/unit/scm/test_scm.py b/tests/unit/scm/test_scm.py
--- a/tests/unit/scm/test_scm.py
+++ b/tests/unit/scm/test_scm.py
@@ -1,3 +1,7 @@
+from datetime import datetime
+
+from scmrepo.exceptions import SCMError
+
 from dvc.repo.experiments import ExpRefInfo
 from dvc.scm import GitMergeError, iter_revs
 
@@ -5,6 +9,7 @@
 def test_iter_revs(
     tmp_dir,
     scm,
+    mocker,
 ):
     """
     new         other
@@ -62,6 +67,25 @@ def test_iter_revs(
         rev_root: [rev_root],
     }
 
+    def _func(rev):
+
+        if rev == rev_root:
+            return mocker.Mock(commit_date=datetime(2022, 6, 28).timestamp())
+        if rev == rev_old:
+            raise SCMError
+        return mocker.Mock(commit_date=datetime(2022, 6, 30).timestamp())
+
+    mocker.patch(
+        "scmrepo.git.Git.resolve_commit", mocker.MagicMock(side_effect=_func)
+    )
+
+    gen = iter_revs(scm, commit_date="2022-06-29")
+    assert gen == {
+        rev_new: [rev_new],
+        rev_old: [rev_old],
+        rev_other: [rev_other],
+    }
+
 
 def test_merge_error(tmp_dir, scm):
     exc = GitMergeError("Merge failed")
