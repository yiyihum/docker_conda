diff --git a/src/aec/__init__.py b/src/aec/__init__.py
index a7c8d66..71ed17d 100644
--- a/src/aec/__init__.py
+++ b/src/aec/__init__.py
@@ -1,1 +1,1 @@
-__version__ = "2.5.5"
+__version__ = "2.5.6"
diff --git a/src/aec/command/ec2.py b/src/aec/command/ec2.py
index d76bbdc..9adc37c 100755
--- a/src/aec/command/ec2.py
+++ b/src/aec/command/ec2.py
@@ -250,6 +250,10 @@ def tag(
         parts = t.split("=")
         tagdefs.append({"Key": parts[0], "Value": parts[1]})
 
+    if not name and not name_match:
+        # avoid tagging all instances when there's no name
+        raise NoInstancesError(name=name, name_match=name_match)
+
     instances = describe(config, name, name_match)
 
     ids = [i["InstanceId"] for i in instances]
@@ -317,6 +321,10 @@ def start(config: Config, name: str) -> List[Instance]:
 
     print(f"Starting instances with the name {name} ... ")
 
+    if not name:
+        # avoid starting all instances when there's no name
+        raise NoInstancesError(name=name)
+
     instances = describe(config, name)
 
     if not instances:
@@ -336,6 +344,10 @@ def stop(config: Config, name: str) -> List[Dict[str, Any]]:
 
     ec2_client = boto3.client("ec2", region_name=config.get("region", None))
 
+    if not name:
+        # avoid stopping all instances when there's no name
+        raise NoInstancesError(name=name)
+
     instances = describe(config, name)
 
     if not instances:
@@ -351,6 +363,10 @@ def terminate(config: Config, name: str) -> List[Dict[str, Any]]:
 
     ec2_client = boto3.client("ec2", region_name=config.get("region", None))
 
+    if not name:
+        # avoid terminating all instances when there's no name
+        raise NoInstancesError(name=name)
+
     instances = describe(config, name)
 
     if not instances:
@@ -368,6 +384,10 @@ def modify(config: Config, name: str, type: str) -> List[Instance]:
 
     ec2_client = boto3.client("ec2", region_name=config.get("region", None))
 
+    if not name:
+        # avoid modifying all instances when there's no name
+        raise NoInstancesError(name=name)
+
     instances = describe(config, name)
 
     if not instances:
@@ -399,6 +419,10 @@ def logs(config: Config, name: str) -> str:
 
     ec2_client = boto3.client("ec2", region_name=config.get("region", None))
 
+    if not name:
+        # avoid describing all instances when there's no name
+        raise NoInstancesError(name=name)
+
     instances = describe(config, name)
 
     if not instances:
