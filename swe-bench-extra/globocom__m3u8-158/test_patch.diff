diff --git a/tests/playlists.py b/tests/playlists.py
index 26e9cd1..04324af 100755
--- a/tests/playlists.py
+++ b/tests/playlists.py
@@ -802,4 +802,17 @@ http://example.com/hi.m3u8
 http://example.com/audio-only.m3u8
 '''
 
+SESSION_DATA_PLAYLIST = '''#EXTM3U
+#EXT-X-VERSION:4
+#EXT-X-SESSION-DATA:DATA-ID="com.example.value",VALUE="example",LANGUAGE="en"
+'''
+
+MULTIPLE_SESSION_DATA_PLAYLIST = '''#EXTM3U
+#EXT-X-VERSION:4
+#EXT-X-SESSION-DATA:DATA-ID="com.example.value",VALUE="example",LANGUAGE="en"
+#EXT-X-SESSION-DATA:DATA-ID="com.example.value",VALUE="example",LANGUAGE="ru"
+#EXT-X-SESSION-DATA:DATA-ID="com.example.value",VALUE="example",LANGUAGE="de"
+#EXT-X-SESSION-DATA:DATA-ID="com.example.title",URI="title.json"
+'''
+
 del abspath, dirname, join
diff --git a/tests/test_model.py b/tests/test_model.py
index f6bf956..f1dea64 100755
--- a/tests/test_model.py
+++ b/tests/test_model.py
@@ -15,7 +15,7 @@ from m3u8.protocol import ext_x_start, ext_x_part
 
 import m3u8
 import playlists
-from m3u8.model import Segment, Key, Media, MediaList, RenditionReport, PartialSegment, denormalize_attribute, find_key
+from m3u8.model import Segment, Key, Media, MediaList, RenditionReport, PartialSegment, denormalize_attribute, find_key, SessionData
 
 
 class UTC(datetime.tzinfo):
@@ -631,6 +631,18 @@ def test_should_dump_complex_unencrypted_encrypted_keys_no_uri_attr():
 
     assert expected == obj.dumps().strip()
 
+def test_should_dump_session_data():
+    obj = m3u8.M3U8(playlists.SESSION_DATA_PLAYLIST)
+    expected = playlists.SESSION_DATA_PLAYLIST.strip()
+
+    assert expected == obj.dumps().strip()
+
+def test_should_dump_multiple_session_data():
+    obj = m3u8.M3U8(playlists.MULTIPLE_SESSION_DATA_PLAYLIST)
+    expected = playlists.MULTIPLE_SESSION_DATA_PLAYLIST.strip()
+
+    assert expected == obj.dumps().strip()
+
 
 
 def test_length_segments_by_key():
@@ -1002,6 +1014,43 @@ def test_partial_segment_gap_and_byterange():
 
     assert result == expected
 
+def test_session_data_with_value():
+    obj = SessionData(
+        'com.example.value',
+        'example',
+        language='en'
+    )
+
+    result = obj.dumps()
+    expected = '#EXT-X-SESSION-DATA:DATA-ID="com.example.value",VALUE="example",LANGUAGE="en"'
+
+    assert result == expected
+
+def test_session_data_with_uri():
+    obj = SessionData(
+        'com.example.value',
+        uri='example.json',
+        language='en'
+    )
+
+    result = obj.dumps()
+    expected = '#EXT-X-SESSION-DATA:DATA-ID="com.example.value",URI="example.json",LANGUAGE="en"'
+
+    assert result == expected
+
+def test_session_data_cannot_be_created_with_value_and_uri_at_the_same_time():
+    obj = SessionData(
+        'com.example.value',
+        value='example',
+        uri='example.json',
+        language='en'
+    )
+
+    result = obj.dumps()
+    expected = '#EXT-X-SESSION-DATA:DATA-ID="com.example.value",VALUE="example",LANGUAGE="en"'
+
+    assert result == expected
+
 def test_endswith_newline():
     obj = m3u8.loads(playlists.SIMPLE_PLAYLIST)
 
diff --git a/tests/test_parser.py b/tests/test_parser.py
index 71be2d8..912d408 100644
--- a/tests/test_parser.py
+++ b/tests/test_parser.py
@@ -317,6 +317,34 @@ def test_should_parse_start_with_precise():
     assert data['start']['time_offset'] == 10.5
     assert data['start']['precise'] == 'YES'
 
+
+def test_should_parse_session_data():
+    data = m3u8.parse(playlists.SESSION_DATA_PLAYLIST)
+    assert data['session_data'][0]['data_id'] == 'com.example.value'
+    assert data['session_data'][0]['value'] == 'example'
+    assert data['session_data'][0]['language'] == 'en'
+
+
+def test_should_parse_multiple_session_data():
+    data = m3u8.parse(playlists.MULTIPLE_SESSION_DATA_PLAYLIST)
+
+    assert len(data['session_data']) == 4
+
+    assert data['session_data'][0]['data_id'] == 'com.example.value'
+    assert data['session_data'][0]['value'] == 'example'
+    assert data['session_data'][0]['language'] == 'en'
+
+    assert data['session_data'][1]['data_id'] == 'com.example.value'
+    assert data['session_data'][1]['value'] == 'example'
+    assert data['session_data'][1]['language'] == 'ru'
+
+    assert data['session_data'][2]['data_id'] == 'com.example.value'
+    assert data['session_data'][2]['value'] == 'example'
+    assert data['session_data'][2]['language'] == 'de'
+
+    assert data['session_data'][3]['data_id'] == 'com.example.title'
+    assert data['session_data'][3]['uri'] == 'title.json'
+
 def test_simple_playlist_with_discontinuity_sequence():
     data = m3u8.parse(playlists.SIMPLE_PLAYLIST_WITH_DISCONTINUITY_SEQUENCE)
     assert data['discontinuity_sequence'] == 123
