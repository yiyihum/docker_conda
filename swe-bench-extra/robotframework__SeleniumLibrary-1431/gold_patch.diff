diff --git a/docs/extending/extending.rst b/docs/extending/extending.rst
index d143e884..9b521229 100644
--- a/docs/extending/extending.rst
+++ b/docs/extending/extending.rst
@@ -217,15 +217,16 @@ log                        Wrapper to ``robot.api.logger.write`` method.
 
 Also following attributes are available from the ``LibraryComponent`` class:
 
-==============  =====================================================================
-  Attribute                              Description
-==============  =====================================================================
-driver           Currently active browser/WebDriver instance in the SeleniumLibrary.
-drivers          `Cache`_ for the opened browsers/WebDriver instances.
-element_finder   Read/write attribute for the `ElementFinder`_ instance.
-ctx              Instance of the SeleniumLibrary.
-log_dir          Folder where output files are written.
-==============  =====================================================================
+======================  ==============================================================================
+      Attribute                                          Description
+======================  ==============================================================================
+driver                  Currently active browser/WebDriver instance in the SeleniumLibrary.
+drivers                 `Cache`_ for the opened browsers/WebDriver instances.
+element_finder          Read/write attribute for the `ElementFinder`_ instance.
+ctx                     Instance of the SeleniumLibrary.
+log_dir                 Folder where output files are written.
+event_firing_webdriver  Read/write attribute for the SeleniumLibrary `EventFiringWebDriver`_ instance.
+======================  ==============================================================================
 
 See the `SeleniumLibrary init`_, the `LibraryComponent`_ and the `ContextAware`_ classes for further
 implementation details.
diff --git a/src/SeleniumLibrary/base/context.py b/src/SeleniumLibrary/base/context.py
index d215441d..47f9ab6d 100644
--- a/src/SeleniumLibrary/base/context.py
+++ b/src/SeleniumLibrary/base/context.py
@@ -43,6 +43,14 @@ class ContextAware(object):
     def element_finder(self, value):
         self.ctx._element_finder = value
 
+    @property
+    def event_firing_webdriver(self):
+        return self.ctx.event_firing_webdriver
+
+    @event_firing_webdriver.setter
+    def event_firing_webdriver(self, event_firing_webdriver):
+        self.ctx.event_firing_webdriver = event_firing_webdriver
+
     def find_element(self, locator, tag=None, required=True, parent=None):
         """Find element matching `locator`.
 
