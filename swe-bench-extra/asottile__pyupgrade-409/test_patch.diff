diff --git a/tests/_plugins/__init__.py b/tests/_plugins/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/tests/_plugins/typing_pep604_test.py b/tests/_plugins/typing_pep604_test.py
new file mode 100644
index 0000000..ca786b7
--- /dev/null
+++ b/tests/_plugins/typing_pep604_test.py
@@ -0,0 +1,28 @@
+import pytest
+from tokenize_rt import src_to_tokens
+from tokenize_rt import tokens_to_src
+
+from pyupgrade._plugins.typing_pep604 import _fix_union
+
+
+@pytest.mark.parametrize(
+    ('s', 'arg_count', 'expected'),
+    (
+        ('Union[a, b]', 2, 'a | b'),
+        ('Union[(a, b)]', 2, 'a | b'),
+        ('Union[(a,)]', 1, 'a'),
+        ('Union[(((a, b)))]', 2, 'a | b'),
+        pytest.param('Union[((a), b)]', 2, '(a) | b', id='wat'),
+        ('Union[(((a,), b))]', 2, '(a,) | b'),
+        ('Union[((a,), (a, b))]', 2, '(a,) | (a, b)'),
+        ('Union[((a))]', 1, 'a'),
+        ('Union[a()]', 1, 'a()'),
+        ('Union[a(b, c)]', 1, 'a(b, c)'),
+        ('Union[(a())]', 1, 'a()'),
+        ('Union[(())]', 1, '()'),
+    ),
+)
+def test_fix_union_edge_cases(s, arg_count, expected):
+    tokens = src_to_tokens(s)
+    _fix_union(0, tokens, arg_count=arg_count)
+    assert tokens_to_src(tokens) == expected
diff --git a/tests/features/typing_pep604_test.py b/tests/features/typing_pep604_test.py
index 64c8f5d..503bc2a 100644
--- a/tests/features/typing_pep604_test.py
+++ b/tests/features/typing_pep604_test.py
@@ -165,6 +165,15 @@ def f(x: int | str) -> None: ...
 
             id='Optional rewrite multi-line',
         ),
+        pytest.param(
+            'from typing import Union, Sequence\n'
+            'def f(x: Union[Union[A, B], Sequence[Union[C, D]]]): pass\n',
+
+            'from typing import Union, Sequence\n'
+            'def f(x: A | B | Sequence[C | D]): pass\n',
+
+            id='nested unions',
+        ),
     ),
 )
 def test_fix_pep604_types(s, expected):
