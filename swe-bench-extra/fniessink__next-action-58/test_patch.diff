diff --git a/tests/unittests/test_cli.py b/tests/unittests/test_cli.py
index 0cabed3..1352148 100644
--- a/tests/unittests/test_cli.py
+++ b/tests/unittests/test_cli.py
@@ -65,8 +65,9 @@ class CLITest(unittest.TestCase):
         self.assertEqual(call("""\
 usage: next-action [-h] [--version] [-f <filename>] [-n <number> | -a] [<context|project> ...]
 
-Show the next action in your todo.txt. The next action is selected from the tasks in the todo.txt file based on
-priority, due date, creation date, and supplied filters.
+Show the next action in your todo.txt. The next action is selected from the tasks in the todo.txt file based on task
+properties such as priority, due date, and creation date. Limit the tasks from which the next action is selected by
+specifying contexts the tasks must have and/or projects the tasks must belong to.
 
 optional arguments:
   -h, --help            show this help message and exit
diff --git a/tests/unittests/test_pick_action.py b/tests/unittests/test_pick_action.py
index 8fec9cc..8ccd64b 100644
--- a/tests/unittests/test_pick_action.py
+++ b/tests/unittests/test_pick_action.py
@@ -61,6 +61,18 @@ class PickActionTest(unittest.TestCase):
         task2 = todotxt.Task("Task 2 due:2018-1-1")
         self.assertEqual([task2, task1], pick_action.next_actions([task1, task2]))
 
+    def test_project(self):
+        """ Test that a task with a project takes precedence over a task without a project. """
+        task1 = todotxt.Task("Task 1")
+        task2 = todotxt.Task("Task 2 +Project")
+        self.assertEqual([task2, task1], pick_action.next_actions([task1, task2]))
+
+    def test_projects(self):
+        """ Test that a task with more projects takes precedence over a task with less projects. """
+        task1 = todotxt.Task("Task 1 +Project")
+        task2 = todotxt.Task("Task 2 +Project1 +Project2")
+        self.assertEqual([task2, task1], pick_action.next_actions([task1, task2]))
+
 
 class FilterTasksTest(unittest.TestCase):
     """ Test that the tasks from which the next action is picked, can be filtered. """
