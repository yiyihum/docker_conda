diff --git a/beets/autotag/mb.py b/beets/autotag/mb.py
index 3bd7e8c8..5b8d4513 100644
--- a/beets/autotag/mb.py
+++ b/beets/autotag/mb.py
@@ -202,6 +202,19 @@ def _flatten_artist_credit(credit):
     )
 
 
+def _get_related_artist_names(relations, relation_type):
+    """Given a list representing the artist relationships extract the names of
+    the remixers and concatenate them.
+    """
+    related_artists = []
+
+    for relation in relations:
+        if relation['type'] == relation_type:
+            related_artists.append(relation['artist']['name'])
+
+    return ', '.join(related_artists)
+
+
 def track_info(recording, index=None, medium=None, medium_index=None,
                medium_total=None):
     """Translates a MusicBrainz recording result dictionary into a beets
@@ -231,6 +244,12 @@ def track_info(recording, index=None, medium=None, medium_index=None,
         artist = recording['artist-credit'][0]['artist']
         info.artist_id = artist['id']
 
+    if recording.get('artist-relation-list'):
+        info.remixer = _get_related_artist_names(
+            recording['artist-relation-list'],
+            relation_type='remixer'
+        )
+
     if recording.get('length'):
         info.length = int(recording['length']) / (1000.0)
 
diff --git a/beets/library.py b/beets/library.py
index becf1939..98156397 100644
--- a/beets/library.py
+++ b/beets/library.py
@@ -466,6 +466,7 @@ class Item(LibModel):
         'artist': types.STRING,
         'artist_sort': types.STRING,
         'artist_credit': types.STRING,
+        'remixer': types.STRING,
         'album': types.STRING,
         'albumartist': types.STRING,
         'albumartist_sort': types.STRING,
