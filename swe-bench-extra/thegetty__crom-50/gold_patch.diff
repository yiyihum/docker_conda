diff --git a/README.md b/README.md
index 73b4a2a..bab3576 100644
--- a/README.md
+++ b/README.md
@@ -18,12 +18,20 @@ Import the classes from the model module. As the classes are dynamically generat
 
 ```python
 from cromulent.model import factory, Group
-g1 = Group("Organization")
-g2 = Group("Department")
+g1 = Group(ident="Organization")
+g2 = Group(ident="Department")
 g1.member = g2
 print factory.toString(g1, compact=False)
 ```
 
+The constructor for the classes takes the following parameters:
+
+* `ident` - an identifier to use for this instance. If specified, it should be a URI represented as a string. If it is the empty string, it will result in no identifier. If not specified, or specified as `None`, then it will be auto-generated by the factory if `auto_assign_id` is true, or if `auto_assign_id` is false, then it will result in no identifier.
+* `label` - a human readable label for the resource, to act as internal documentation for the data
+* `value` or `content` - a data value for the class. Dimensions and MonetaryAmounts use `value` which must be a number, and Name, Identifier, LinguisticObject and similar use `content` which must be a string.
+* Additional keywords may be passed in, and will be sent to class-specific initialization code.
+
+
 ### Vocabulary
 
 ```python
@@ -38,6 +46,7 @@ print factory.toString(h, compact=False)
 
 * Assigning to the same property repeatedly does NOT overwrite the value, instead it appends. To overwrite a value, instead set it to a false value first.
 
+
 ### Factory settings
 
 There are quite a few settings for how the module works, which are managed by a `factory` object.  
diff --git a/cromulent/model.py b/cromulent/model.py
index f5ab3ae..05e9034 100644
--- a/cromulent/model.py
+++ b/cromulent/model.py
@@ -358,9 +358,9 @@ class ExternalResource(object):
 	_type = ""
 	_embed = True
 
-	def __init__(self, ident=""):
+	def __init__(self, ident=None):
 		self._factory = factory
-		if ident:
+		if ident is not None:
 			if ident.startswith('urn:uuid'):
 				self.id = ident
 			elif ident.startswith('http'):
@@ -378,6 +378,9 @@ class ExternalResource(object):
 					ident = "%s:%s" % (self._factory.prefixes_rev[pref], rest)
 
 				self.id = ident
+			elif ident == "":
+				# Allow explicit setting of empty string
+				self.id = ""
 			else:
 				# Allow for prefixed term
 				curied = ident.split(':', 1)
@@ -386,10 +389,10 @@ class ExternalResource(object):
 					self._full_id = self._factory.prefixes[curied[0]] + curied[1]	
 				else:
 					self.id = factory.base_url + self.__class__._uri_segment + "/" + ident
-
 		elif factory.auto_assign_id:
 			self.id = factory.generate_id(self)
 		else:
+			# Not auto assigning, and not submitted = blank node
 			self.id = ""
 
 	def _toJSON(self, done, top=None):
@@ -408,7 +411,7 @@ class BaseResource(ExternalResource):
 	_classification = ""
 	_classhier = []
 
-	def __init__(self, ident="", label="", value="", content="", **kw):
+	def __init__(self, ident=None, label="", value="", content="", **kw):
 		"""Initialize BaseObject."""
 		super(BaseResource, self).__init__(ident)
 
