diff --git a/datalad_next/constraints/compound.py b/datalad_next/constraints/compound.py
index f808c27..31b529a 100644
--- a/datalad_next/constraints/compound.py
+++ b/datalad_next/constraints/compound.py
@@ -222,15 +222,28 @@ class EnsureGeneratorFromFileLike(Constraint):
     existing file to be read from.
     """
 
-    def __init__(self, item_constraint: Callable):
+    def __init__(
+        self,
+        item_constraint: Callable,
+        exc_mode: str = 'raise',
+    ):
         """
         Parameters
         ----------
         item_constraint:
           Each incoming item will be mapped through this callable
           before being yielded by the generator.
+        exc_mode: {'raise', 'yield'}, optional
+          How to deal with exceptions occurring when processing
+          individual lines/items. With 'yield' the respective
+          exception instance is yielded, and processing continues.
+          A caller can then decide whether to ignore, report, or raise
+          the exception. With 'raise', an exception is raised immediately
+          and processing stops.
         """
+        assert exc_mode in ('raise', 'yield')
         self._item_constraint = item_constraint
+        self._exc_mode = exc_mode
         super().__init__()
 
     def __repr__(self):
@@ -267,11 +280,17 @@ class EnsureGeneratorFromFileLike(Constraint):
     def _item_yielder(self, fp, close_file):
         try:
             for line in fp:
-                yield self._item_constraint(
-                    # splitlines() removes the newline at the end of the string
-                    # that is left in by __iter__()
-                    line.splitlines()[0]
-                )
+                try:
+                    yield self._item_constraint(
+                        # splitlines() removes the newline at the end of
+                        # the string that is left in by __iter__()
+                        line.splitlines()[0]
+                    )
+                except Exception as e:
+                    if self._exc_mode == 'raise':
+                        raise
+                    else:
+                        yield e
         finally:
             if close_file:
                 fp.close()
