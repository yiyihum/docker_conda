diff --git a/pycparserext/ext_c_generator.py b/pycparserext/ext_c_generator.py
index 751905a..3ecccad 100644
--- a/pycparserext/ext_c_generator.py
+++ b/pycparserext/ext_c_generator.py
@@ -138,6 +138,9 @@ class GnuCGenerator(AsmAndAttributesMixin, CGeneratorBase):
     def visit_TypeList(self, n):
         return ', '.join(self.visit(ch) for ch in n.types)
 
+    def visit_RangeExpression(self, n):
+        return '%s ... %s' % (self.visit(n.first), self.visit(n.last))
+
 
 class GNUCGenerator(GnuCGenerator):
     def __init__(self):
diff --git a/pycparserext/ext_c_parser.py b/pycparserext/ext_c_parser.py
index 51d9b64..00fad2a 100644
--- a/pycparserext/ext_c_parser.py
+++ b/pycparserext/ext_c_parser.py
@@ -158,6 +158,29 @@ class TypeOfExpression(c_ast.Node):
     attr_names = ()
 
 
+class RangeExpression(c_ast.Node):
+    def __init__(self, first, last, coord=None):
+        self.first = first
+        self.last = last
+        self.coord = coord
+
+    def children(self):
+        nodelist = []
+        if self.first is not None:
+            nodelist.append(("first", self.first))
+        if self.last is not None:
+            nodelist.append(("last", self.last))
+        return tuple(nodelist)
+
+    def __iter__(self):
+        if self.first is not None:
+            yield self.first
+        if self.last is not None:
+            yield self.last
+
+    attr_names = ()
+
+
 # These are the same as pycparser's, but it does *not* declare __slots__--
 # so we can poke in attributes at our leisure.
 class TypeDeclExt(c_ast.TypeDecl):
@@ -512,6 +535,11 @@ class GnuCParser(_AsmAndAttributesMixin, CParserBase):
         """ struct_declaration_list : empty """
         p[0] = None
 
+    def p_range_designator(self, p):
+        """ designator  : LBRACKET constant_expression ELLIPSIS constant_expression RBRACKET
+        """
+        p[0] = RangeExpression(p[2], p[4], coord=self._coord(p.lineno(1)))
+
 # }}}
 
 
