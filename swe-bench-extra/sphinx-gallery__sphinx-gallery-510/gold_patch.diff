diff --git a/doc/getting_started.rst b/doc/getting_started.rst
index 4404d6e..bdb0e3c 100644
--- a/doc/getting_started.rst
+++ b/doc/getting_started.rst
@@ -39,7 +39,7 @@ Let's say your Python project looks like this:
     └── examples
       	├── plot_example.py
       	├── example.py
-      	└── README.txt
+      	└── README.txt (or .rst)
 
 Your Python module is in ``my_python_module``, examples for how to use it are
 in ``examples`` and the ``doc`` folder holds the base documentation
@@ -59,7 +59,8 @@ Structure the examples folder
 In order for Sphinx-Gallery to build a gallery from your ``examples`` folder,
 this folder must have the following things:
 
-* **The Gallery Header** (``README.txt``). A file called ``README.txt`` that
+* **The Gallery Header** (``README.txt``). A file called ``README.txt``
+  or ``README.rst`` that
   contains rST that will be used as a header for the gallery generated from
   this folder. It must have at least a title. For example::
 
diff --git a/mayavi_examples/README.txt b/mayavi_examples/README.rst
similarity index 100%
rename from mayavi_examples/README.txt
rename to mayavi_examples/README.rst
diff --git a/sphinx_gallery/gen_gallery.py b/sphinx_gallery/gen_gallery.py
index 36c35fa..26a53b7 100644
--- a/sphinx_gallery/gen_gallery.py
+++ b/sphinx_gallery/gen_gallery.py
@@ -14,29 +14,26 @@ from __future__ import division, print_function, absolute_import
 import codecs
 import copy
 from datetime import timedelta, datetime
+from distutils.version import LooseVersion
 from importlib import import_module
 import re
 import os
 from xml.sax.saxutils import quoteattr, escape
 
+import sphinx
 from sphinx.util.console import red
 from . import sphinx_compatibility, glr_path_static, __version__ as _sg_version
-from .utils import _replace_md5
+from .utils import _replace_md5, Bunch
 from .backreferences import finalize_backreferences
 from .gen_rst import (generate_dir_rst, SPHX_GLR_SIG, _get_memory_base,
-                      extract_intro_and_title, get_docstring_and_rest)
+                      extract_intro_and_title, get_docstring_and_rest,
+                      _get_readme)
 from .scrapers import _scraper_dict, _reset_dict
 from .docs_resolv import embed_code_links
 from .downloads import generate_zipfiles
 from .sorting import NumberOfCodeLinesSortKey
 from .binder import copy_binder_files
 
-try:
-    FileNotFoundError
-except NameError:
-    # Python2
-    FileNotFoundError = IOError
-
 try:
     basestring
 except NameError:
@@ -91,7 +88,7 @@ def parse_config(app):
     lang = app.builder.config.highlight_language
     gallery_conf = _complete_gallery_conf(
         app.config.sphinx_gallery_conf, src_dir, plot_gallery,
-        abort_on_example_error, lang, app.builder.name)
+        abort_on_example_error, lang, app.builder.name, app)
 
     # this assures I can call the config in other places
     app.config.sphinx_gallery_conf = gallery_conf
@@ -101,7 +98,7 @@ def parse_config(app):
 
 def _complete_gallery_conf(sphinx_gallery_conf, src_dir, plot_gallery,
                            abort_on_example_error, lang='python',
-                           builder_name='html'):
+                           builder_name='html', app=None):
     gallery_conf = copy.deepcopy(DEFAULT_GALLERY_CONF)
     gallery_conf.update(sphinx_gallery_conf)
     if sphinx_gallery_conf.get('find_mayavi_figures', False):
@@ -114,6 +111,11 @@ def _complete_gallery_conf(sphinx_gallery_conf, src_dir, plot_gallery,
     gallery_conf.update(plot_gallery=plot_gallery)
     gallery_conf.update(abort_on_example_error=abort_on_example_error)
     gallery_conf['src_dir'] = src_dir
+    # Old Sphinx can't handle pickling app, so let's just expose the one
+    # thing we need internally
+    if LooseVersion(sphinx.__version__) < LooseVersion('1.8'):
+        app = Bunch(config=app.config) if app is not None else app
+    gallery_conf['app'] = app
 
     if gallery_conf.get("mod_example_dir", False):
         backreferences_warning = """\n========
@@ -194,8 +196,8 @@ def _complete_gallery_conf(sphinx_gallery_conf, src_dir, plot_gallery,
     return gallery_conf
 
 
-def get_subsections(srcdir, examples_dir, sortkey):
-    """Return the list of subsections of a gallery
+def get_subsections(srcdir, examples_dir, gallery_conf):
+    """Return the list of subsections of a gallery.
 
     Parameters
     ----------
@@ -203,18 +205,18 @@ def get_subsections(srcdir, examples_dir, sortkey):
         absolute path to directory containing conf.py
     examples_dir : str
         path to the examples directory relative to conf.py
-    sortkey : :func:`python:callable`
-        The sort key to use.
+    gallery_conf : dict
+        The gallery configuration.
 
     Returns
     -------
     out : list
         sorted list of gallery subsection folder names
-
     """
+    sortkey = gallery_conf['subsection_order']
     subfolders = [subfolder for subfolder in os.listdir(examples_dir)
-                  if os.path.exists(os.path.join(
-                      examples_dir, subfolder, 'README.txt'))]
+                  if _get_readme(os.path.join(examples_dir, subfolder),
+                                 gallery_conf, raise_error=False) is not None]
     base_examples_dir_path = os.path.relpath(examples_dir, srcdir)
     subfolders_with_path = [os.path.join(base_examples_dir_path, item)
                             for item in subfolders]
@@ -269,15 +271,8 @@ def generate_gallery_rst(app):
         examples_dir = os.path.join(app.builder.srcdir, examples_dir)
         gallery_dir = os.path.join(app.builder.srcdir, gallery_dir)
 
-        if not os.path.exists(os.path.join(examples_dir, 'README.txt')):
-            raise FileNotFoundError("Main example directory {0} does not "
-                                    "have a README.txt file. Please write "
-                                    "one to introduce your gallery."
-                                    .format(examples_dir))
-
         # Here we don't use an os.walk, but we recurse only twice: flat is
         # better than nested.
-
         this_fhindex, this_computation_times = generate_dir_rst(
             examples_dir, gallery_dir, gallery_conf, seen_backrefs)
 
@@ -292,8 +287,7 @@ def generate_gallery_rst(app):
             fhindex.write(":orphan:\n\n" + this_fhindex)
 
             for subsection in get_subsections(
-                    app.builder.srcdir, examples_dir,
-                    gallery_conf['subsection_order']):
+                    app.builder.srcdir, examples_dir, gallery_conf):
                 src_dir = os.path.join(examples_dir, subsection)
                 target_dir = os.path.join(gallery_dir, subsection)
                 this_fhindex, this_computation_times = \
diff --git a/sphinx_gallery/gen_rst.py b/sphinx_gallery/gen_rst.py
index e303c66..0bf420a 100644
--- a/sphinx_gallery/gen_rst.py
+++ b/sphinx_gallery/gen_rst.py
@@ -40,7 +40,7 @@ try:
     from textwrap import indent
 except ImportError:
     def indent(text, prefix, predicate=None):
-        """Adds 'prefix' to the beginning of selected lines in 'text'.
+        """Add 'prefix' to the beginning of selected lines in 'text'.
 
         If 'predicate' is provided, 'prefix' will only be added to the lines
         where 'predicate(line)' is True. If 'predicate' is not provided,
@@ -56,6 +56,9 @@ except ImportError:
                 yield (prefix + line if predicate(line) else line)
         return ''.join(prefixed_lines())
 
+    FileNotFoundError = IOError
+
+
 import sphinx
 
 from . import glr_path_static
@@ -286,15 +289,28 @@ def save_thumbnail(image_path_template, src_file, file_conf, gallery_conf):
         scale_image(img, thumb_file, *gallery_conf["thumbnail_size"])
 
 
-def generate_dir_rst(src_dir, target_dir, gallery_conf, seen_backrefs):
-    """Generate the gallery reStructuredText for an example directory"""
+def _get_readme(dir_, gallery_conf, raise_error=True):
+    extensions = ['.txt'] + sorted(gallery_conf['app'].config['source_suffix'])
+    for ext in extensions:
+        fname = os.path.join(dir_, 'README' + ext)
+        if os.path.isfile(fname):
+            return fname
+    if raise_error:
+        raise FileNotFoundError(
+            "Example directory {0} does not have a README file with one "
+            "of the expected file extensions {1}. Please write one to "
+            "introduce your gallery.".format(dir_, extensions))
+    return None
 
+
+def generate_dir_rst(src_dir, target_dir, gallery_conf, seen_backrefs):
+    """Generate the gallery reStructuredText for an example directory."""
     head_ref = os.path.relpath(target_dir, gallery_conf['src_dir'])
     fhindex = """\n\n.. _sphx_glr_{0}:\n\n""".format(
         head_ref.replace(os.path.sep, '_'))
 
-    with codecs.open(os.path.join(src_dir, 'README.txt'), 'r',
-                     encoding='utf-8') as fid:
+    fname = _get_readme(src_dir, gallery_conf)
+    with codecs.open(fname, 'r', encoding='utf-8') as fid:
         fhindex += fid.read()
     # Add empty lines to avoid bug in issue #165
     fhindex += "\n\n"
diff --git a/sphinx_gallery/utils.py b/sphinx_gallery/utils.py
index 60f0ccf..afee07f 100644
--- a/sphinx_gallery/utils.py
+++ b/sphinx_gallery/utils.py
@@ -115,3 +115,11 @@ def _replace_md5(fname_new, fname_old=None, method='move'):
         else:
             copyfile(fname_new, fname_old)
     assert os.path.isfile(fname_old)
+
+
+class Bunch(dict):
+    """Dictionary-like object that exposes its keys as attributes."""
+
+    def __init__(self, **kwargs):  # noqa: D102
+        dict.__init__(self, kwargs)
+        self.__dict__ = self
