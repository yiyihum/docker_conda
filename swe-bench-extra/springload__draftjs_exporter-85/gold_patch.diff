diff --git a/README.rst b/README.rst
index 94898d6..20b58a9 100644
--- a/README.rst
+++ b/README.rst
@@ -248,33 +248,22 @@ See ``examples.py`` in the repository for more details.
 Alternative backing engines
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-By default the exporter uses ``html5lib`` via BeautifulSoup to build the DOM tree. There are two alternative backing engines: ``string`` and ``lxml``.
+By default, the exporter uses a dependency-free engine called ``string`` to build the DOM tree. There are two alternative backing engines: ``html5lib`` (via BeautifulSoup) and ``lxml``.
 
-The ``string`` engine is the fastest, and does not have any dependencies. Its only drawback is that the ``parse_html`` method does not escape/sanitise HTML like that of other engines.
+The ``string`` engine is the fastest, and does not have any dependencies. Its only drawback is that the ``parse_html`` method does not escape/sanitise HTML like that of other engines. It is also more recent, so hasn't been as battle-tested as the other ones.
 
-To use it, add the following to the exporter config:
+*  For ``html5lib``, do ``pip install draftjs_exporter[html5lib]``.
+*  For ``lxml``, do ``pip install draftjs_exporter[lxml]``. It also requires ``libxml2`` and ``libxslt`` to be available on your system.
 
-.. code:: python
-
-    config = {
-        # Specify which DOM backing engine to use.
-        'engine': 'string',
-    }
-
-``lxml`` is also supported. It requires ``libxml2`` and ``libxslt`` to be available on your system.
-
-.. code:: sh
-
-    # Use the `lxml` extra to install the exporter and its lxml dependencies:
-    pip install draftjs_exporter[lxml]
-
-Add the following to the exporter config:
+Then, use the ``engine`` attribute of the exporter config:
 
 .. code:: python
 
     config = {
         # Specify which DOM backing engine to use.
-        'engine': 'lxml',
+        'engine': DOM.HTML5LIB,
+        # Or for lxml:
+        'engine': DOM.LXML,
     }
 
 Custom backing engines
@@ -307,7 +296,10 @@ Here is an example implementation:
             return elt
 
 
-    exporter = HTML({'engine': DOMListTree})
+    exporter = HTML({
+        # Use the dotted module syntax to point to the DOMEngine implementation.
+        'engine': 'myproject.example.DOMListTree'
+    })
 
 Development
 -----------
diff --git a/draftjs_exporter/html.py b/draftjs_exporter/html.py
index 2eb5264..9c4ce2b 100644
--- a/draftjs_exporter/html.py
+++ b/draftjs_exporter/html.py
@@ -25,7 +25,7 @@ class HTML:
         self.block_map = config.get('block_map', BLOCK_MAP)
         self.style_map = config.get('style_map', STYLE_MAP)
 
-        DOM.use(config.get('engine', DOM.HTML5LIB))
+        DOM.use(config.get('engine', DOM.STRING))
 
     def render(self, content_state=None):
         """
diff --git a/setup.py b/setup.py
index c6438ed..4f0cb3b 100755
--- a/setup.py
+++ b/setup.py
@@ -11,8 +11,9 @@ try:
 except ImportError:
     from distutils.core import setup
 
+dependencies = []
 
-dependencies = [
+html5lib_dependencies = [
     'beautifulsoup4>=4.4.1,<5',
     'html5lib>=0.999,<=1.0b10',
 ]
@@ -34,7 +35,7 @@ testing_dependencies = [
     'coverage>=4.1.0',
     'flake8>=3.2.0',
     'isort==4.2.5',
-] + lxml_dependencies
+] + html5lib_dependencies + lxml_dependencies
 
 documentation_dependencies = [
 
@@ -78,5 +79,6 @@ setup(
         'testing': testing_dependencies,
         'docs': documentation_dependencies,
         'lxml': lxml_dependencies,
+        'html5lib': html5lib_dependencies,
     },
     zip_safe=False)
