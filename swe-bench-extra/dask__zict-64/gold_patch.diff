diff --git a/doc/source/changelog.rst b/doc/source/changelog.rst
index 0375754..e493d3f 100644
--- a/doc/source/changelog.rst
+++ b/doc/source/changelog.rst
@@ -4,6 +4,8 @@ Changelog
 2.2.0 - Unreleased
 ------------------
 - Added type annotations (:pr:`62`) `Guido Imperiale`_
+- If you call Func.update() and Func wraps around File, do not store all dump outputs in
+  memory (:pr:`64`) `Guido Imperiale`_
 
 
 2.1.0 - 2022-02-25
diff --git a/zict/common.py b/zict/common.py
index 6ed9e94..3d94a2e 100644
--- a/zict/common.py
+++ b/zict/common.py
@@ -1,6 +1,7 @@
 from __future__ import annotations
 
 from collections.abc import Iterable, Mapping
+from itertools import chain
 from typing import MutableMapping  # TODO move to collections.abc (needs Python >=3.9)
 from typing import Any, TypeVar, overload
 
@@ -39,12 +40,12 @@ class ZictBase(MutableMapping[KT, VT]):
         if args:
             other = args[0]
             if isinstance(other, Mapping) or hasattr(other, "items"):
-                items += other.items()
+                items = other.items()
             else:
                 # Assuming (key, value) pairs
-                items += other
+                items = other
         if kwds:
-            items += kwds.items()
+            items = chain(items, kwds.items())
         self._do_update(items)
 
     def _do_update(self, items: Iterable[tuple[KT, VT]]) -> None:
