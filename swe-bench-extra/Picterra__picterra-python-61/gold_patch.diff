diff --git a/src/picterra/__main__.py b/src/picterra/__main__.py
index 1dc840f..c2004a2 100644
--- a/src/picterra/__main__.py
+++ b/src/picterra/__main__.py
@@ -262,4 +262,5 @@ def main():
         exit("\033[91m%s\033[00m" % e)
 
 
-main()
+if __name__ == '__main__':
+    main()
diff --git a/src/picterra/nongeo.py b/src/picterra/nongeo.py
index bd2dab5..1e368ef 100644
--- a/src/picterra/nongeo.py
+++ b/src/picterra/nongeo.py
@@ -40,6 +40,33 @@ def _nongeo_latlng2xy(lat_deg, lng_deg):
     return x, y
 
 
+def _load_polygons(geojson):
+    """
+    Loads polygons from a geojson file; should work for both MultiPolygon and
+    FeatureCollection of Polygons
+    """
+    polygons = []
+    if geojson['type'] == 'MultiPolygon':
+        for polygon in geojson['coordinates']:
+            polygons.append(polygon)
+    elif geojson['type'] == 'Polygon':
+        polygons = [geojson['coordinates']]
+    elif geojson['type'] == 'FeatureCollection':
+        for feature in geojson['features']:
+            geom = feature['geometry']
+            polygons.extend(_load_polygons(geom))
+    return polygons
+
+
+def _polygon_to_xy(polygon):
+    xy_polygon = []
+    for ring in polygon:
+        xy_polygon.append([
+            _nongeo_latlng2xy(lat, lng) for lng, lat in ring
+        ])
+    return xy_polygon
+
+
 def nongeo_result_to_pixel(result_filename):
     """
     This is a helper function to convert result obtained on non-georeferenced
@@ -65,15 +92,7 @@ def nongeo_result_to_pixel(result_filename):
               ]
     """
     with open(result_filename) as f:
-        multipolygon = json.load(f)
-
-    polygons = []
-    for polygon in multipolygon['coordinates']:
-        xy_polygon = []
-        for ring in polygon:
-            xy_polygon.append([
-                _nongeo_latlng2xy(lat, lng) for lng, lat in ring
-            ])
-        polygons.append(xy_polygon)
-
+        geojson = json.load(f)
+    polygons = _load_polygons(geojson)
+    polygons = [_polygon_to_xy(p) for p in polygons]
     return polygons
