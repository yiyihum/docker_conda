diff --git a/tests/test_read_pdf_table.py b/tests/test_read_pdf_table.py
index 3907535..efe30ee 100644
--- a/tests/test_read_pdf_table.py
+++ b/tests/test_read_pdf_table.py
@@ -12,9 +12,11 @@ import subprocess
 try:
     FileNotFoundError
     from unittest.mock import patch
+    from urllib.request import Request
 except NameError:
     FileNotFoundError = IOError
     from mock import patch
+    from urllib2 import Request
 
 
 class TestReadPdfTable(unittest.TestCase):
@@ -30,6 +32,12 @@ class TestReadPdfTable(unittest.TestCase):
         df = tabula.read_pdf(uri)
         self.assertTrue(isinstance(df, pd.DataFrame))
 
+    def test_read_remote_pdf_with_custom_user_agent(self):
+        uri = "https://github.com/tabulapdf/tabula-java/raw/master/src/test/resources/technology/tabula/12s0324.pdf"
+
+        df = tabula.read_pdf(uri, user_agent='Mozilla/5.0')
+        self.assertTrue(isinstance(df, pd.DataFrame))
+
     def test_read_pdf_into_json(self):
         pdf_path = 'tests/resources/data.pdf'
         expected_json = 'tests/resources/data_1.json'
diff --git a/tests/test_util.py b/tests/test_util.py
index e4825d9..ab523c4 100644
--- a/tests/test_util.py
+++ b/tests/test_util.py
@@ -1,11 +1,36 @@
 import unittest
 import tabula
 
+try:
+    FileNotFoundError
+    from unittest.mock import patch, MagicMock
+    from urllib.request import Request
+except NameError:
+    FileNotFoundError = IOError
+    from mock import patch, MagicMock
+    from urllib2 import Request
+
 
 class TestUtil(unittest.TestCase):
     def test_environment_info(self):
         self.assertEqual(tabula.environment_info(), None)
 
+    @patch('tabula.file_util.shutil.copyfileobj')
+    @patch('tabula.file_util.urlopen')
+    @patch('tabula.file_util._create_request')
+    def test_localize_file_with_user_agent(self, mock_fun, mock_urlopen, mock_copyfileobj):
+        uri = "https://github.com/tabulapdf/tabula-java/raw/master/src/test/resources/technology/tabula/12s0324.pdf"
+        user_agent='Mozilla/5.0'
+
+        cm = MagicMock()
+        cm.getcode.return_value = 200
+        cm.read.return_value = b'contents'
+        cm.geturl.return_value = uri
+        mock_urlopen.return_value = cm
+
+        tabula.file_util.localize_file(uri, user_agent=user_agent)
+        mock_fun.assert_called_with(uri, user_agent)
+
 
 if __name__ == '__main__':
     unittest.main()
