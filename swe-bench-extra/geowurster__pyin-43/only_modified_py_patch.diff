diff --git a/pyin/__init__.py b/pyin/__init__.py
index 4cb5b31..e48091e 100644
--- a/pyin/__init__.py
+++ b/pyin/__init__.py
@@ -16,7 +16,7 @@ __source__ = 'https://github.com/geowurster/pyin'
 __license__ = '''
 MIT
 
-Copyright (c) 2015 Kevin D. Wurster
+Copyright (c) 2015-2016 Kevin D. Wurster
 
 Permission is hereby granted, free of charge, to any person obtaining a copy of
 this software and associated documentation files (the "Software"), to deal in
diff --git a/pyin/cli.py b/pyin/cli.py
index 39295f7..9679678 100644
--- a/pyin/cli.py
+++ b/pyin/cli.py
@@ -25,16 +25,19 @@ import pyin.core
 )
 @click.option(
     '--block', is_flag=True,
-    help="Operate on all input text as though it was a single line."
+    help="Place all input text into the `line` variable."
 )
 @click.option(
     '--no-newline', is_flag=True,
     help="Don't ensure each line ends with a newline character."
 )
+@click.option(
+    '--skip', 'skip_lines', type=click.IntRange(0), metavar='INTEGER', default=0,
+    help='Skip N input lines.')
 @click.argument(
     'expressions', required=True, nargs=-1,
 )
-def main(infile, outfile, expressions, no_newline, block):
+def main(infile, outfile, expressions, no_newline, block, skip_lines):
 
     """
     It's like sed, but Python!
@@ -88,6 +91,12 @@ def main(infile, outfile, expressions, no_newline, block):
         $ python -c "help('pyin.core.pmap')"
     """
 
+    for _ in range(skip_lines):
+        try:
+            next(infile)
+        except StopIteration:
+            raise click.ClickException("Skipped all input")
+
     if block:
         iterator = [infile.read()]
     else:
