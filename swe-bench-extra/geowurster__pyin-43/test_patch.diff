diff --git a/tests/conftest.py b/tests/conftest.py
new file mode 100644
index 0000000..32fcccd
--- /dev/null
+++ b/tests/conftest.py
@@ -0,0 +1,12 @@
+"""
+pytest fixtures
+"""
+
+
+from click.testing import CliRunner
+import pytest
+
+
+@pytest.fixture(scope='module')
+def runner():
+    return CliRunner()
diff --git a/tests/test_cli.py b/tests/test_cli.py
index 55e3467..20ef908 100644
--- a/tests/test_cli.py
+++ b/tests/test_cli.py
@@ -1,8 +1,14 @@
+"""
+Unittests for $ pyin
+"""
+
+
 import json
 import os
 from os import path
 
 from click.testing import CliRunner
+import pytest
 
 import pyin.cli
 
@@ -76,3 +82,23 @@ def test_block_mode():
 
     expected = '{"3": null, "4": null, "0": null, "2": null, "1": null}'
     assert json.loads(expected) == json.loads(result.output)
+
+
+@pytest.mark.parametrize("skip_lines", [1, 3])
+def test_skip_single_line(runner, skip_lines):
+    result = runner.invoke(pyin.cli.main, [
+        '--skip', skip_lines,
+        'line'
+    ], input=CSV_WITH_HEADER)
+    assert result.exit_code == 0
+    expected = os.linesep.join(CSV_WITH_HEADER.splitlines()[skip_lines:])
+    assert result.output.strip() == expected.strip()
+
+
+def test_skip_all_input(runner):
+    result = runner.invoke(pyin.cli.main, [
+        '--skip', 100,
+        'line'
+    ], input=CSV_WITH_HEADER)
+    assert result.output != 0
+    assert 'skipped' in result.output.lower()
