diff --git a/xskillscore/core/deterministic.py b/xskillscore/core/deterministic.py
index aafe46a..a8958eb 100644
--- a/xskillscore/core/deterministic.py
+++ b/xskillscore/core/deterministic.py
@@ -1046,12 +1046,13 @@ def mape(a, b, dim=None, weights=None, skipna=False, keep_attrs=False):
     .. math::
         \\mathrm{MAPE} = \\frac{1}{n} \\sum_{i=1}^{n}
                          \\frac{\\vert a_{i} - b_{i} \\vert}
-                               {\\vert a_{i} \\vert}
+                               {max(\epsilon, \\vert a_{i} \\vert)}
 
     .. note::
         The percent error is calculated in reference to ``a``. Percent
         error is reported as decimal percent. I.e., a value of 1 is
-        100%.
+        100%. :math:`\epsilon` is an arbitrary small yet strictly positive
+        number to avoid undefined results when ``a`` is zero.
 
     Parameters
     ----------
@@ -1078,6 +1079,10 @@ def mape(a, b, dim=None, weights=None, skipna=False, keep_attrs=False):
     xarray.Dataset or xarray.DataArray
         Mean Absolute Percentage Error.
 
+    See Also
+    --------
+    sklearn.metrics.mean_absolute_percentage_error
+
     References
     ----------
     https://en.wikipedia.org/wiki/Mean_absolute_percentage_error
diff --git a/xskillscore/core/np_deterministic.py b/xskillscore/core/np_deterministic.py
index e6fb19a..ae736ac 100644
--- a/xskillscore/core/np_deterministic.py
+++ b/xskillscore/core/np_deterministic.py
@@ -652,7 +652,7 @@ def _mape(a, b, weights, axis, skipna):
     .. math::
         \\mathrm{MAPE} = \\frac{1}{n} \\sum_{i=1}^{n}
                          \\frac{\\vert a_{i} - b_{i} \\vert}
-                               {\\vert a_{i} \\vert}
+                               {max(\epsilon, \\vert a_{i} \\vert)}
 
     Parameters
     ----------
@@ -679,6 +679,13 @@ def _mape(a, b, weights, axis, skipna):
     Percent error is reported as decimal percent. I.e., a value of
     1 is 100%.
 
+    \epsilon is an arbitrary small yet strictly positive number to avoid
+    undefined results when ``a`` is zero.
+
+    See Also
+    --------
+    sklearn.metrics.mean_absolute_percentage_error
+
     References
     ----------
     https://en.wikipedia.org/wiki/Mean_absolute_percentage_error
@@ -687,8 +694,8 @@ def _mape(a, b, weights, axis, skipna):
     if skipna:
         a, b, weights = _match_nans(a, b, weights)
     weights = _check_weights(weights)
-    # replace divided by 0 with nan
-    mape = np.absolute(a - b) / np.absolute(np.where(a != 0, a, np.nan))
+    epsilon = np.finfo(np.float64).eps
+    mape = np.absolute(a - b) / np.maximum(np.absolute(a), epsilon)
     if weights is not None:
         return sumfunc(mape * weights, axis=axis) / sumfunc(weights, axis=axis)
     else:

