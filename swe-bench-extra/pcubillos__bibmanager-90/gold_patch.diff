diff --git a/CHANGELOG.txt b/CHANGELOG.txt
index 44ed2ef..a3ea45c 100644
--- a/CHANGELOG.txt
+++ b/CHANGELOG.txt
@@ -2372,3 +2372,26 @@ Propagated typo corrections into the docs.
 *****
 
 Updated link of license badge to point to RTD docs. 
+
+
+*****  Sat Jun 12 19:01:21 CEST 2021  *****
+
+In bm.remove_dubplicates() added additional check for DOI after
+identical ISBN values in case the entries refer to different chapters
+of a same book.
+Added respective tests.
+
+*****
+
+Small tweak to docs (put latest tutorial video first).
+
+*****
+
+Bumped bibmanager to version 1.3.4
+
+*****
+
+Added mock_init to test_duplicate_isbn_same_unknown_doi() tests
+because the code needs the config file initialized to set the screen
+output style.
+
diff --git a/bibmanager/VERSION.py b/bibmanager/VERSION.py
index 1d5038e..c3c2aca 100644
--- a/bibmanager/VERSION.py
+++ b/bibmanager/VERSION.py
@@ -2,4 +2,4 @@
 # bibmanager is open-source software under the MIT license (see LICENSE).
 
 # bibmanager Version:
-__version__ = "1.3.3"
+__version__ = "1.3.4"
diff --git a/bibmanager/bib_manager/bib_manager.py b/bibmanager/bib_manager/bib_manager.py
index 20aa2fe..a8a00a3 100644
--- a/bibmanager/bib_manager/bib_manager.py
+++ b/bibmanager/bib_manager/bib_manager.py
@@ -461,6 +461,22 @@ def remove_duplicates(bibs, field):
         if nbibs == 1:
             continue
 
+        # If field is isbn, check doi to differentiate chapters from same book:
+        if field == 'isbn':
+            dois = [
+                bibs[idx].doi if bibs[idx].doi is not None else ""
+                for idx in indices]
+            u_doi, doi_inv, doi_counts = np.unique(
+                dois, return_inverse=True, return_counts=True)
+            doi_multis = np.where((doi_counts > 1) & (ubib != ""))[0]
+            single_dois = u_doi[doi_counts==1]
+            indices = [
+                idx for idx,doi in zip(indices,dois)
+                if doi not in single_dois]
+            nbibs = len(indices)
+            if nbibs <= 1:
+                continue
+
         # Query the user:
         labels = [idx + " ENTRY:\n" for idx in u.ordinal(np.arange(nbibs)+1)]
         display_bibs(labels, [bibs[i] for i in indices])
diff --git a/docs/index.rst b/docs/index.rst
index 3a49ea1..63494ca 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -50,13 +50,13 @@ Check out this video tutorial to get started with ``bibmanager``:
 
 .. raw:: html
 
-    <iframe width="720" height="405" src="https://www.youtube.com/embed/WVmhdwVNXOE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
+    <iframe width="720" height="405" src="https://www.youtube.com/embed/qewdBx0M8VE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
 
-And the new features for version 1.3+:
+And this one covering some other features:
 
 .. raw:: html
 
-    <iframe width="720" height="405" src="https://www.youtube.com/embed/qewdBx0M8VE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
+    <iframe width="720" height="405" src="https://www.youtube.com/embed/WVmhdwVNXOE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
 
 
 .. _team:
