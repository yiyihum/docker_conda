diff --git a/docs/extending/extending.rst b/docs/extending/extending.rst
index 9960ab02..d143e884 100644
--- a/docs/extending/extending.rst
+++ b/docs/extending/extending.rst
@@ -89,6 +89,15 @@ of the attributes are explained in the library `keyword documentation`_. please
 plugins may alter the functionality of the method or attributes and documentation applies
 only for the core SeleniumLibrary.
 
+Initialisation order
+====================
+When instance is created from the SeleniumLibrary, example when library is imported in the
+test data, there is an order in the initialisation. At first all classes defining SeleniumLibrary
+keywords are discovered. As a second event, discovery for the EventFiringWebDriver is done.
+At third event, plugins are discovered. As a last event, keywords are found from SeleniumLibrary
+classes and plugins. Because plugins are discovered last, they may example alter the
+EventFiringWebDriver. Consult the plugin's documentation for more details.
+
 Plugins
 =======
 SeleniumLibrary offers plugins as a way to modify, add library keywords and modify some of the internal
diff --git a/src/SeleniumLibrary/__init__.py b/src/SeleniumLibrary/__init__.py
index 0a53d434..59bde1ca 100644
--- a/src/SeleniumLibrary/__init__.py
+++ b/src/SeleniumLibrary/__init__.py
@@ -460,17 +460,16 @@ class SeleniumLibrary(DynamicCore):
             WaitingKeywords(self),
             WindowKeywords(self)
         ]
+        self.ROBOT_LIBRARY_LISTENER = LibraryListener()
+        self._running_keyword = None
+        self.event_firing_webdriver = None
+        if is_truthy(event_firing_webdriver):
+            self.event_firing_webdriver = self._parse_listener(event_firing_webdriver)
         if is_truthy(plugins):
             plugin_libs = self._parse_plugins(plugins)
             libraries = libraries + plugin_libs
         self._drivers = WebDriverCache()
         DynamicCore.__init__(self, libraries)
-        self.ROBOT_LIBRARY_LISTENER = LibraryListener()
-        if is_truthy(event_firing_webdriver):
-            self.event_firing_webdriver = self._parse_listener(event_firing_webdriver)
-        else:
-            self.event_firing_webdriver = None
-        self._running_keyword = None
 
     def run_keyword(self, name, args, kwargs):
         self._running_keyword = name
