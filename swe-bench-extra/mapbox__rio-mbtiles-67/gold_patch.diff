diff --git a/CHANGES.txt b/CHANGES.txt
index a2a5269..b479090 100644
--- a/CHANGES.txt
+++ b/CHANGES.txt
@@ -1,6 +1,12 @@
 Changes
 =======
 
+1.5b3 (2020-10-28)
+------------------
+
+- Add a --covers option, taking a quadkey, which limits the output to tiles
+  that cover the quadkey's tile (#66).
+
 1.5b2 (2020-10-16)
 ------------------
 
diff --git a/mbtiles/__init__.py b/mbtiles/__init__.py
index b918758..c8d075a 100644
--- a/mbtiles/__init__.py
+++ b/mbtiles/__init__.py
@@ -3,7 +3,7 @@
 import sys
 import warnings
 
-__version__ = "1.5b2"
+__version__ = "1.5b3"
 
 if sys.version_info < (3, 7):
     warnings.warn(
diff --git a/mbtiles/scripts/cli.py b/mbtiles/scripts/cli.py
index 17e2821..884f436 100644
--- a/mbtiles/scripts/cli.py
+++ b/mbtiles/scripts/cli.py
@@ -204,6 +204,7 @@ def extract_features(ctx, param, value):
 @click.option(
     "--progress-bar", "-#", default=False, is_flag=True, help="Display progress bar."
 )
+@click.option("--covers", help="Restrict mbtiles output to cover a quadkey")
 @click.option(
     "--cutline",
     type=click.Path(exists=True),
@@ -248,6 +249,7 @@ def mbtiles(
     rgba,
     implementation,
     progress_bar,
+    covers,
     cutline,
     open_options,
     warp_options,
@@ -351,6 +353,10 @@ def mbtiles(
                 )
                 warp_options["cutline"] = shapely.wkt.dumps(cutline_rev)
 
+        if covers is not None:
+            covers_tile = mercantile.quadkey_to_tile(covers)
+            west, south, east, north = mercantile.bounds(covers_tile)
+
         # Resolve the minimum and maximum zoom levels for export.
         if zoom_levels:
             minzoom, maxzoom = map(int, zoom_levels.split(".."))
