diff --git a/tests/test_lti11_authenticator.py b/tests/test_lti11_authenticator.py
index 267ceac..db45300 100644
--- a/tests/test_lti11_authenticator.py
+++ b/tests/test_lti11_authenticator.py
@@ -74,6 +74,35 @@ async def test_authenticator_returns_auth_dict_when_custom_canvas_user_id_is_emp
         assert result["name"] == expected["name"]
 
 
+@pytest.mark.asyncio
+async def test_authenticator_returns_auth_dict_when_custom_canvas_user_id_does_not_exist(
+    make_lti11_success_authentication_request_args,
+):
+    """
+    Do we get a valid username when the custom_canvas_user_id parameter does not exist in the launch request?
+    """
+    local_args = make_lti11_success_authentication_request_args()
+    del local_args["custom_canvas_user_id"]
+    with patch.object(
+        LTI11LaunchValidator, "validate_launch_request", return_value=True
+    ):
+        authenticator = LTI11Authenticator()
+        handler = Mock(
+            spec=RequestHandler,
+            get_secure_cookie=Mock(return_value=json.dumps(["key", "secret"])),
+            request=Mock(
+                arguments=local_args,
+                headers={},
+                items=[],
+            ),
+        )
+        result = await authenticator.authenticate(handler, None)
+        expected = {
+            "name": "185d6c59731a553009ca9b59ca3a885100000",
+        }
+        assert result["name"] == expected["name"]
+
+
 @pytest.mark.asyncio
 async def test_authenticator_returns_correct_username_when_using_lis_person_contact_email_primary(
     make_lti11_success_authentication_request_args,
