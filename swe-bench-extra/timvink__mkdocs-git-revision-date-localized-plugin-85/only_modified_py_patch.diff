diff --git a/mkdocs_git_revision_date_localized_plugin/plugin.py b/mkdocs_git_revision_date_localized_plugin/plugin.py
index 9a3bdb3..9d609fc 100644
--- a/mkdocs_git_revision_date_localized_plugin/plugin.py
+++ b/mkdocs_git_revision_date_localized_plugin/plugin.py
@@ -37,6 +37,7 @@ class GitRevisionDateLocalizedPlugin(BasePlugin):
         ("fallback_to_build_date", config_options.Type(bool, default=False)),
         ("locale", config_options.Type(str, default=None)),
         ("type", config_options.Type(str, default="date")),
+        ("custom_format", config_options.Type(str, default="%d. %B %Y")),
         ("timezone", config_options.Type(str, default="UTC")),
         ("exclude", config_options.Type(list, default=[])),
         ("enable_creation_date", config_options.Type(bool, default=False)),
@@ -61,7 +62,7 @@ class GitRevisionDateLocalizedPlugin(BasePlugin):
         if not self.config.get('enabled'):
             return config
         
-        assert self.config['type'] in ["date","datetime","iso_date","iso_datetime","timeago"]
+        assert self.config['type'] in ["date","datetime","iso_date","iso_datetime","timeago","custom"]
 
         self.util = Util(config=self.config)
 
@@ -195,7 +196,6 @@ class GitRevisionDateLocalizedPlugin(BasePlugin):
         assert len(locale) == 2, "locale must be a 2 letter code, see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes"
         
 
-
         # Retrieve git commit timestamp
         last_revision_timestamp = self.util.get_git_commit_timestamp(
                 path=page.file.abs_src_path,
diff --git a/mkdocs_git_revision_date_localized_plugin/util.py b/mkdocs_git_revision_date_localized_plugin/util.py
index 8fbf847..c93a5bd 100644
--- a/mkdocs_git_revision_date_localized_plugin/util.py
+++ b/mkdocs_git_revision_date_localized_plugin/util.py
@@ -46,7 +46,7 @@ class Util:
 
     @staticmethod
     def _date_formats(
-        unix_timestamp: float, locale: str = "en", time_zone: str = "UTC"
+        unix_timestamp: float, locale: str = "en", time_zone: str = "UTC", custom_format: str = "%d. %B %Y"
     ) -> Dict[str, Any]:
         """
         Calculate different date formats / types.
@@ -55,6 +55,7 @@ class Util:
             unix_timestamp (float): A timestamp in seconds since 1970.
             locale (str): Locale code of language to use. Defaults to 'en'.
             time_zone (str): Timezone database name (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
+            custom_format (str): strftime format specifier for the 'custom' type
 
         Returns:
             dict: Different date formats.
@@ -77,8 +78,8 @@ class Util:
             ),
             "iso_date": loc_revision_date.strftime("%Y-%m-%d"),
             "iso_datetime": loc_revision_date.strftime("%Y-%m-%d %H:%M:%S"),
-            "timeago": '<span class="timeago" datetime="%s" locale="%s"></span>'
-            % (loc_revision_date.isoformat(), locale),
+            "timeago": '<span class="timeago" datetime="%s" locale="%s"></span>' % (loc_revision_date.isoformat(), locale),
+            "custom": loc_revision_date.strftime(custom_format),
         }
 
     def get_git_commit_timestamp(
@@ -195,7 +196,8 @@ class Util:
         date_formats = self._date_formats(
             unix_timestamp=commit_timestamp, 
             time_zone=self.config.get("timezone"),
-            locale=locale
+            locale=locale,
+            custom_format=self.config.get('custom_format')
         )
         if add_spans:
             date_formats = self.add_spans(date_formats)

