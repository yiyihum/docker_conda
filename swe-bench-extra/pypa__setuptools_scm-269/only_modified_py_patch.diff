diff --git a/src/setuptools_scm/git.py b/src/setuptools_scm/git.py
index 6ff2c0d..7c45a84 100644
--- a/src/setuptools_scm/git.py
+++ b/src/setuptools_scm/git.py
@@ -111,19 +111,26 @@ def parse(root, describe_command=DEFAULT_DESCRIBE, pre_parse=warn_on_shallow):
             dirty=dirty,
             branch=wd.get_branch(),
         )
+    else:
+        tag, number, node, dirty = _git_parse_describe(out)
+
+        branch = wd.get_branch()
+        if number:
+            return meta(tag, distance=number, node=node, dirty=dirty, branch=branch)
+        else:
+            return meta(tag, node=node, dirty=dirty, branch=branch)
+
 
-    # 'out' looks e.g. like 'v1.5.0-0-g4060507' or
+def _git_parse_describe(describe_output):
+    # 'describe_output' looks e.g. like 'v1.5.0-0-g4060507' or
     # 'v1.15.1rc1-37-g9bd1298-dirty'.
-    if out.endswith("-dirty"):
+
+    if describe_output.endswith("-dirty"):
         dirty = True
-        out = out[:-6]
+        describe_output = describe_output[:-6]
     else:
         dirty = False
 
-    tag, number, node = out.rsplit("-", 2)
+    tag, number, node = describe_output.rsplit("-", 2)
     number = int(number)
-    branch = wd.get_branch()
-    if number:
-        return meta(tag, distance=number, node=node, dirty=dirty, branch=branch)
-    else:
-        return meta(tag, node=node, dirty=dirty, branch=branch)
+    return tag, number, node, dirty
diff --git a/src/setuptools_scm/version.py b/src/setuptools_scm/version.py
index aba231d..5799f1a 100644
--- a/src/setuptools_scm/version.py
+++ b/src/setuptools_scm/version.py
@@ -13,6 +13,7 @@ from pkg_resources import parse_version as pkg_parse_version
 SEMVER_MINOR = 2
 SEMVER_PATCH = 3
 SEMVER_LEN = 3
+TAG_PREFIX = re.compile(r"^\w+-(.*)")
 
 
 def _pad(iterable, size, padding=None):
@@ -56,14 +57,21 @@ def callable_or_entrypoint(group, callable_or_name):
 
 
 def tag_to_version(tag):
+    """
+    take a tag that might be prefixed with a keyword and return only the version part
+    """
     trace("tag", tag)
     if "+" in tag:
         warnings.warn("tag %r will be stripped of the local component" % tag)
         tag = tag.split("+")[0]
     # lstrip the v because of py2/py3 differences in setuptools
     # also required for old versions of setuptools
-
-    version = tag.rsplit("-", 1)[-1].lstrip("v")
+    prefix_match = TAG_PREFIX.match(tag)
+    if prefix_match is not None:
+        version = prefix_match.group(1)
+    else:
+        version = tag
+    trace("version pre parse", version)
     if VERSION_CLASS is None:
         return version
     version = pkg_parse_version(version)

