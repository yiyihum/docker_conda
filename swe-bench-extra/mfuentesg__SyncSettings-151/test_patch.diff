diff --git a/tests/mocks/sublime_mock.py b/tests/mocks/sublime_mock.py
index c7d5c25..d22a014 100644
--- a/tests/mocks/sublime_mock.py
+++ b/tests/mocks/sublime_mock.py
@@ -1,3 +1,6 @@
+import json
+import re
+
 DIALOG_YES = 1
 
 
@@ -29,3 +32,12 @@ def load_settings(*args):
         'included_files': [],
         'excluded_files': []
     })
+
+
+def encode_value(data, pretty):
+    return json.dumps(data)
+
+
+def decode_value(content):
+    decoded = re.sub(re.compile(r"/\*.*?\*/", re.DOTALL), "", content)
+    return json.loads(re.sub(re.compile(r"//.*?\n"), "", decoded))
diff --git a/tests/test_sync_version.py b/tests/test_sync_version.py
index 7a4930d..e518ce8 100644
--- a/tests/test_sync_version.py
+++ b/tests/test_sync_version.py
@@ -42,6 +42,17 @@ class TestSyncVersion(unittest.TestCase):
         v = version.get_local_version()
         self.assertDictEqual({'hash': '123123123', 'created_at': '2019-01-11T02:15:15Z'}, v)
 
+    @mock.patch('sync_settings.libs.path.exists', mock.MagicMock(return_value=True))
+    @mock.patch(
+        'sync_settings.sync_version.open',
+        mock.mock_open(
+            read_data='{"created_at": "2019-01-11T02:15:15Z", /* some comment */"hash": "123123123"}'
+        ),
+    )
+    def test_get_local_version_with_commented_content(self):
+        v = version.get_local_version()
+        self.assertDictEqual({"hash": "123123123", "created_at": "2019-01-11T02:15:15Z"}, v)
+
     @mock.patch('sublime.yes_no_cancel_dialog', mock.MagicMock(return_value=1))
     def test_show_update_dialog(self):
         def on_done():
