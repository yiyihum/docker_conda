diff --git a/CHANGELOG.md b/CHANGELOG.md
index 424148a..3f5a26d 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -3,6 +3,9 @@ Changelog
 
 Next Version
 ------------
+* Fix return value of DefaultMunch and DefaultFactoryMunch's get method (fixes [#53](https://github.com/Infinidat/munch/issues/53))
+
+* Support ``fromYAML`` classmethod for all Munch subclasses (PR [#52](https://github.com/Infinidat/munch/pull/52) fixes [#34](https://github.com/Infinidat/munch/issues/34)
 
 2.4.0 (2019-10-29)
 ------------------
diff --git a/munch/__init__.py b/munch/__init__.py
index 83420a4..98b92c7 100644
--- a/munch/__init__.py
+++ b/munch/__init__.py
@@ -238,10 +238,9 @@ class Munch(dict):
         """
         D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
         """
-        try:
-            return self[k]
-        except KeyError:
+        if k not in self:
             return d
+        return self[k]
 
     def setdefault(self, k, d=None):
         """
@@ -615,12 +614,13 @@ try:
         else:
             return yaml.dump(self, **opts)
 
-    def fromYAML(*args, **kwargs):
-        kwargs.setdefault('Loader', yaml.FullLoader)
-        return munchify(yaml.load(*args, **kwargs))
+    def fromYAML(cls, stream, *args, **kwargs):
+        factory = lambda d: cls(*(args + (d,)), **kwargs)
+        loader_class = kwargs.pop('Loader', yaml.FullLoader)
+        return munchify(yaml.load(stream, Loader=loader_class), factory=factory)
 
     Munch.toYAML = toYAML
-    Munch.fromYAML = staticmethod(fromYAML)
+    Munch.fromYAML = classmethod(fromYAML)
 
 except ImportError:
     pass
