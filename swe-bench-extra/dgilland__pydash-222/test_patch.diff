diff --git a/tests/pytest_mypy_testing/test_arrays.py b/tests/pytest_mypy_testing/test_arrays.py
index 2e30951..d7d6cb3 100644
--- a/tests/pytest_mypy_testing/test_arrays.py
+++ b/tests/pytest_mypy_testing/test_arrays.py
@@ -408,8 +408,7 @@ def test_mypy_unshift() -> None:
 
 @pytest.mark.mypy_testing
 def test_mypy_unzip() -> None:
-    reveal_type(_.unzip([[1, 4, 7], [2, 5, 8], [3, 6, 9]]))  # R: builtins.list[builtins.list[builtins.int]]
-    reveal_type(_.unzip([(1, 4, 7), (2, 5, 8), (3, 6, 9)]))  # R: builtins.list[builtins.list[builtins.int]]
+    reveal_type(_.unzip([(1, 4, 7), (2, 5, 8), (3, 6, 9)]))  # R: builtins.list[Tuple[builtins.int, builtins.int, builtins.int]]
 
 
 @pytest.mark.mypy_testing
@@ -447,7 +446,8 @@ def test_mypy_xor_with() -> None:
 
 @pytest.mark.mypy_testing
 def test_mypy_zip_() -> None:
-    reveal_type(_.zip_([1, 2, 3], [4, 5, 6], [7, 8, 9]))  # R: builtins.list[builtins.list[builtins.int]]
+    reveal_type(_.zip_([1, 2, 3], [4, 5, 6], [7, 8, 9]))  # R: builtins.list[Tuple[builtins.int, builtins.int, builtins.int]]
+    reveal_type(_.zip_([1, 2, 3], ["one", "two", "three"]))  # R: builtins.list[Tuple[builtins.int, builtins.str]]
 
 
 @pytest.mark.mypy_testing
@@ -469,5 +469,10 @@ def test_mypy_zip_with() -> None:
     def add(x: int, y: int) -> int:
         return x + y
 
-    reveal_type(_.zip_with([1, 2], [10, 20], [100, 200], add))  # R: builtins.list[Union[builtins.list[builtins.int], builtins.int]]
+    reveal_type(_.zip_with([1, 2], [10, 20], add))  # R: builtins.list[builtins.int]
     reveal_type(_.zip_with([1, 2], [10, 20], [100, 200], iteratee=add))  # R: builtins.list[builtins.int]
+
+    def more_hello(s: str, n: int) -> str:
+        return s * n
+
+    reveal_type(_.zip_with(["hello", "hello", "hello"], [1, 2, 3], iteratee=more_hello))  # R: builtins.list[builtins.str]
diff --git a/tests/pytest_mypy_testing/test_objects.py b/tests/pytest_mypy_testing/test_objects.py
index b4df527..28645e0 100644
--- a/tests/pytest_mypy_testing/test_objects.py
+++ b/tests/pytest_mypy_testing/test_objects.py
@@ -298,8 +298,8 @@ def test_mypy_to_number() -> None:
 
 @pytest.mark.mypy_testing
 def test_mypy_to_pairs() -> None:
-    reveal_type(_.to_pairs([1, 2, 3, 4]))  # R: builtins.list[builtins.list[builtins.int]]
-    reveal_type(_.to_pairs({'a': 1}))  # R: builtins.list[builtins.list[Union[builtins.str, builtins.int]]]
+    reveal_type(_.to_pairs([1, 2, 3, 4]))  # R: builtins.list[Tuple[builtins.int, builtins.int]]
+    reveal_type(_.to_pairs({'a': 1}))  # R: builtins.list[Tuple[builtins.str, builtins.int]]
     reveal_type(_.to_pairs(MyClass()))  # R: builtins.list[Any]
 
 
diff --git a/tests/test_arrays.py b/tests/test_arrays.py
index cdf6217..a0070cf 100644
--- a/tests/test_arrays.py
+++ b/tests/test_arrays.py
@@ -853,8 +853,8 @@ def test_unshift(case, expected):
     "case,expected",
     [
         (
-            [["moe", 30, True], ["larry", 40, False], ["curly", 35, True]],
-            [["moe", "larry", "curly"], [30, 40, 35], [True, False, True]],
+            [("moe", 30, True), ("larry", 40, False), ("curly", 35, True)],
+            [("moe", "larry", "curly"), (30, 40, 35), (True, False, True)],
         )
     ],
 )
@@ -866,7 +866,7 @@ def test_unzip(case, expected):
     "case,expected",
     [
         (([],), []),
-        (([[1, 10, 100], [2, 20, 200]],), [[1, 2], [10, 20], [100, 200]]),
+        (([[1, 10, 100], [2, 20, 200]],), [(1, 2), (10, 20), (100, 200)]),
         (([[2, 4, 6], [2, 2, 2]], _.power), [4, 16, 36]),
     ],
 )
@@ -902,7 +902,7 @@ def test_xor_with(case, expected):
     [
         (
             (["moe", "larry", "curly"], [30, 40, 35], [True, False, True]),
-            [["moe", 30, True], ["larry", 40, False], ["curly", 35, True]],
+            [("moe", 30, True), ("larry", 40, False), ("curly", 35, True)],
         )
     ],
 )
@@ -935,7 +935,7 @@ def test_zip_object_deep(case, expected):
 @parametrize(
     "case,expected",
     [
-        (([1, 2],), [[1], [2]]),
+        (([1, 2],), [(1,), (2,)]),
         (([1, 2], [3, 4], _.add), [4, 6]),
     ],
 )
diff --git a/tests/test_objects.py b/tests/test_objects.py
index d3328cf..d0f0ea4 100644
--- a/tests/test_objects.py
+++ b/tests/test_objects.py
@@ -847,8 +847,8 @@ def test_to_number(case, expected):
 @parametrize(
     "case,expected",
     [
-        ({"a": 1, "b": 2, "c": 3}, [["a", 1], ["b", 2], ["c", 3]]),
-        ([1, 2, 3], [[0, 1], [1, 2], [2, 3]]),
+        ({"a": 1, "b": 2, "c": 3}, [("a", 1), ("b", 2), ("c", 3)]),
+        ([1, 2, 3], [(0, 1), (1, 2), (2, 3)]),
     ],
 )
 def test_to_pairs(case, expected):
