diff --git a/pdbx/__init__.py b/pdbx/__init__.py
index 17ecc8a..1ad970d 100644
--- a/pdbx/__init__.py
+++ b/pdbx/__init__.py
@@ -8,3 +8,31 @@ http://mmcif.wwpdb.org/docs/sw-examples/python/html/.
 See http://mmcif.wwpdb.org/docs/sw-examples/python/html/ for more information
 about this package, including examples.
 """
+
+
+def load(fp) -> list:
+    """Parse a CIF file into a list of DataContainer objects"""
+    from .reader import PdbxReader
+    data = []
+    PdbxReader(fp).read(data)
+    return data
+
+
+def loads(s: str) -> list:
+    """Parse a CIF string into a list of DataContainer objects"""
+    import io
+    return load(io.StringIO(s))
+
+
+def dump(datacontainers: list, fp):
+    """Write a list of DataContainer objects to a CIF file"""
+    from .writer import PdbxWriter
+    PdbxWriter(fp).write(datacontainers)
+
+
+def dumps(datacontainers: list) -> str:
+    """Serialize a list of DataContainer objects to a CIF formatted string"""
+    import io
+    fp = io.StringIO()
+    dump(datacontainers, fp)
+    return fp.getvalue()
diff --git a/pdbx/containers.py b/pdbx/containers.py
index 8664573..e185162 100644
--- a/pdbx/containers.py
+++ b/pdbx/containers.py
@@ -628,7 +628,8 @@ class DataCategory(DataCategoryBase):
                 return ([str(inp)], 'DT_FLOAT')
             # null value handling
             if inp in (".", "?"):
-                return ([inp], 'DT_NULL_VALUE')
+                return (self.__double_quoted_list(inp),
+                        'DT_DOUBLE_QUOTED_STRING')
             if inp == "":
                 return (["."], 'DT_NULL_VALUE')
             # Contains white space or quotes ?
@@ -689,7 +690,7 @@ class DataCategory(DataCategoryBase):
             return 'DT_FLOAT'
         # null value handling
         if inp in (".", "?"):
-            return 'DT_NULL_VALUE'
+            return 'DT_DOUBLE_QUOTED_STRING'
         if inp == "":
             return 'DT_NULL_VALUE'
         # Contains white space or quotes ?
diff --git a/pdbx/reader.py b/pdbx/reader.py
index c5bd339..95394f5 100644
--- a/pdbx/reader.py
+++ b/pdbx/reader.py
@@ -160,7 +160,11 @@ class PdbxReader:
                     self.__syntax_error(
                         "Missing data for item _%s.%s" % (
                             current_category_name, current_attribute_name))
-                if current_word is not None:
+                if current_word == '?':
+                    current_row.append(None)
+                elif current_word == '.':
+                    current_row.append('')
+                elif current_word is not None:
                     # Validation check token for misplaced reserved words
                     reserved_word, state = self.__get_state(current_word)
                     if reserved_word is not None:
@@ -233,7 +237,11 @@ class PdbxReader:
                     current_row = []
                     current_category.append(current_row)
                     for _ in current_category.attribute_list:
-                        if current_word is not None:
+                        if current_word == '?':
+                            current_row.append(None)
+                        elif current_word == '.':
+                            current_row.append('')
+                        elif current_word is not None:
                             current_row.append(current_word)
                         elif current_quoted_string is not None:
                             current_row.append(current_quoted_string)
@@ -264,7 +272,7 @@ class PdbxReader:
                     current_category = None
             elif state == "ST_DATA_CONTAINER":
                 data_name = self.__get_container_name(current_word)
-                if data_name:
+                if not data_name:
                     data_name = "unidentified"
                 current_container = DataContainer(data_name)
                 container_list.append(current_container)

