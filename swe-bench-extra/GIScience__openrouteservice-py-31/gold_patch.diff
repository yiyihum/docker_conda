diff --git a/openrouteservice/__init__.py b/openrouteservice/__init__.py
index 6f697ff..d88a857 100644
--- a/openrouteservice/__init__.py
+++ b/openrouteservice/__init__.py
@@ -17,7 +17,7 @@
 # the License.
 #
 
-__version__ = "1.1.6"
+__version__ = "1.1.7"
 
 # Make sure QGIS plugin can import openrouteservice-py
 
diff --git a/openrouteservice/client.py b/openrouteservice/client.py
index 5026041..0a75583 100644
--- a/openrouteservice/client.py
+++ b/openrouteservice/client.py
@@ -47,7 +47,7 @@ class Client(object):
 
     def __init__(self, key=None,
                  base_url=_DEFAULT_BASE_URL, 
-                 timeout=None, 
+                 timeout=60,
                  retry_timeout=60, 
                  requests_kwargs=None,
                  queries_per_minute=40,
diff --git a/openrouteservice/geocode.py b/openrouteservice/geocode.py
index 6c008b4..ceca106 100644
--- a/openrouteservice/geocode.py
+++ b/openrouteservice/geocode.py
@@ -75,9 +75,9 @@ def pelias_search(client, text,
         for details.
     :type layers: list of strings
 
-    :param country: Constrain query by country. Accepts alpha-2 or alpha-3
-        digit ISO-3166 country codes.
-    :type country: list of strings
+    :param country: Constrain query by country. Accepts a alpha-2 or alpha-3
+        digit ISO-3166 country code.
+    :type country: str
 
     :param size: The amount of results returned. Default 10.
     :type size: integer
@@ -125,7 +125,7 @@ def pelias_search(client, text,
         params['layers'] = convert._comma_list(layers)
 
     if country:
-        params['country'] = country
+        params['boundary.country'] = country
 
     if size:
         params['size'] = size
@@ -170,9 +170,9 @@ def pelias_autocomplete(client, text,
     :param rect_max_y: Max latitude by which to constrain request geographically.
     :type rect_max_y: float
 
-    :param country: Constrain query by country. Accepts alpha-2 or alpha-3
+    :param country: Constrain query by country. Accepts a alpha-2 or alpha-3
         digit ISO-3166 country codes.
-    :type country: list of strings
+    :type country: str
 
     :param sources: The originating source of the data. One or more of
         ['osm', 'oa', 'wof', 'gn']. Currently only 'osm', 'wof' and 'gn' are
@@ -345,9 +345,9 @@ def pelias_reverse(client, point,
         for details.
     :type layers: list of strings
 
-    :param country: Constrain query by country. Accepts alpha-2 or alpha-3
+    :param country: Constrain query by country. Accepts a alpha-2 or alpha-3
         digit ISO-3166 country codes.
-    :type country: list of strings
+    :type country: str
 
     :param size: The amount of results returned. Default 10.
     :type size: integer
@@ -377,7 +377,7 @@ def pelias_reverse(client, point,
         params['layers'] = convert._comma_list(layers)
 
     if country:
-        params['country'] = country
+        params['boundary.country'] = country
 
     if size:
         params['size'] = size
diff --git a/openrouteservice/isochrones.py b/openrouteservice/isochrones.py
index 2ab933d..f83766a 100644
--- a/openrouteservice/isochrones.py
+++ b/openrouteservice/isochrones.py
@@ -22,9 +22,9 @@ from openrouteservice import convert, validator
 
 def isochrones(client, locations,
                profile='driving-car',
-               range_type=None,
-               intervals=[60],
-               segments=30,
+               range_type='time',
+               intervals=None,
+               segments=None,
                units=None,
                location_type=None,
                smoothing=None,
diff --git a/setup.py b/setup.py
index 9f4af14..3d12d4d 100644
--- a/setup.py
+++ b/setup.py
@@ -20,7 +20,7 @@ def readme():
         return f.read()
 
 setup(name='openrouteservice',
-      version='1.1.6',
+      version='1.1.7',
       description='Python client for requests to openrouteservice API services',
       long_description=readme(),
       classifiers=[
