diff --git a/tests/data.py b/tests/data.py
index c860371..97a1722 100644
--- a/tests/data.py
+++ b/tests/data.py
@@ -8,7 +8,7 @@ from typing import Any
 
 # dependencies
 import pandas as pd
-from pandas_dataclasses import Attr, Column, Data, Index
+from pandas_dataclasses import Attr, Column, Data, Index, Multiple
 from typing_extensions import Annotated as Ann
 
 
@@ -62,6 +62,9 @@ class Weather:
     lat_unit: str = "deg"
     """Units of the latitude."""
 
+    attrs: Multiple[Attr[Any]] = field(default_factory=dict)
+    """Other attributes."""
+
 
 weather = Weather(
     [2020, 2020, 2021, 2021, 2022],
diff --git a/tests/test_core_api.py b/tests/test_core_api.py
index f977da1..b0ef09e 100644
--- a/tests/test_core_api.py
+++ b/tests/test_core_api.py
@@ -6,7 +6,7 @@ from typing import cast
 import pandas as pd
 from pandas.testing import assert_frame_equal, assert_series_equal
 from data import Weather, weather, df_weather_true, ser_weather_true
-from pandas_dataclasses import Spec, asframe, asseries
+from pandas_dataclasses import Spec, Tag, asframe, asseries
 from pandas_dataclasses.core.api import get_attrs, get_columns, get_data, get_index
 
 
@@ -27,27 +27,27 @@ def test_get_attrs() -> None:
     attrs = get_attrs(spec)
 
     for i, (key, val) in enumerate(attrs.items()):
-        assert key == spec.fields.of_attr[i].name
-        assert val == spec.fields.of_attr[i].default
+        assert key == spec.fields.of(Tag.ATTR)[i].name
+        assert val == spec.fields.of(Tag.ATTR)[i].default
 
 
 def test_get_columns() -> None:
     columns = cast(pd.Index, get_columns(spec))
 
     for i in range(len(columns)):
-        assert columns[i] == spec.fields.of_data[i].name
+        assert columns[i] == spec.fields.of(Tag.DATA)[i].name
 
     for i in range(columns.nlevels):
-        assert columns.names[i] == spec.fields.of_column[i].name
+        assert columns.names[i] == spec.fields.of(Tag.COLUMN)[i].name
 
 
 def test_get_data() -> None:
     data = get_data(spec)
 
     for i, (key, val) in enumerate(data.items()):
-        assert key == spec.fields.of_data[i].name
-        assert val.dtype.name == spec.fields.of_data[i].dtype
-        assert (val == spec.fields.of_data[i].default).all()
+        assert key == spec.fields.of(Tag.DATA)[i].name
+        assert val.dtype.name == spec.fields.of(Tag.DATA)[i].dtype
+        assert (val == spec.fields.of(Tag.DATA)[i].default).all()
 
 
 def test_get_index() -> None:
@@ -55,6 +55,6 @@ def test_get_index() -> None:
 
     for i in range(index.nlevels):
         level = index.get_level_values(i)
-        assert level.name == spec.fields.of_index[i].name
-        assert level.dtype.name == spec.fields.of_index[i].dtype
-        assert (level == spec.fields.of_index[i].default).all()
+        assert level.name == spec.fields.of(Tag.INDEX)[i].name
+        assert level.dtype.name == spec.fields.of(Tag.INDEX)[i].dtype
+        assert (level == spec.fields.of(Tag.INDEX)[i].default).all()
diff --git a/tests/test_core_specs.py b/tests/test_core_specs.py
index c942d71..077dcd7 100644
--- a/tests/test_core_specs.py
+++ b/tests/test_core_specs.py
@@ -14,7 +14,7 @@ spec_updated = spec @ weather
 
 # test functions
 def test_year() -> None:
-    field = spec.fields.of_index[0]
+    field = spec.fields.of(Tag.INDEX)[0]
 
     assert field.id == "year"
     assert field.tags == [Tag.INDEX]
@@ -24,7 +24,7 @@ def test_year() -> None:
 
 
 def test_year_updated() -> None:
-    field = spec_updated.fields.of_index[0]
+    field = spec_updated.fields.of(Tag.INDEX)[0]
 
     assert field.id == "year"
     assert field.tags == [Tag.INDEX]
@@ -34,7 +34,7 @@ def test_year_updated() -> None:
 
 
 def test_month() -> None:
-    field = spec.fields.of_index[1]
+    field = spec.fields.of(Tag.INDEX)[1]
 
     assert field.id == "month"
     assert field.tags == [Tag.INDEX]
@@ -44,7 +44,7 @@ def test_month() -> None:
 
 
 def test_month_updated() -> None:
-    field = spec_updated.fields.of_index[1]
+    field = spec_updated.fields.of(Tag.INDEX)[1]
 
     assert field.id == "month"
     assert field.tags == [Tag.INDEX]
@@ -54,7 +54,7 @@ def test_month_updated() -> None:
 
 
 def test_meas() -> None:
-    field = spec.fields.of_column[0]
+    field = spec.fields.of(Tag.COLUMN)[0]
 
     assert field.id == "meas"
     assert field.tags == [Tag.COLUMN]
@@ -63,7 +63,7 @@ def test_meas() -> None:
 
 
 def test_meas_updated() -> None:
-    field = spec_updated.fields.of_column[0]
+    field = spec_updated.fields.of(Tag.COLUMN)[0]
 
     assert field.id == "meas"
     assert field.tags == [Tag.COLUMN]
@@ -72,7 +72,7 @@ def test_meas_updated() -> None:
 
 
 def test_stat() -> None:
-    field = spec.fields.of_column[1]
+    field = spec.fields.of(Tag.COLUMN)[1]
 
     assert field.id == "stat"
     assert field.tags == [Tag.COLUMN]
@@ -81,7 +81,7 @@ def test_stat() -> None:
 
 
 def test_stat_updated() -> None:
-    field = spec_updated.fields.of_column[1]
+    field = spec_updated.fields.of(Tag.COLUMN)[1]
 
     assert field.id == "stat"
     assert field.tags == [Tag.COLUMN]
@@ -90,7 +90,7 @@ def test_stat_updated() -> None:
 
 
 def test_temp_avg() -> None:
-    field = spec.fields.of_data[0]
+    field = spec.fields.of(Tag.DATA)[0]
 
     assert field.id == "temp_avg"
     assert field.tags == [Tag.DATA]
@@ -100,7 +100,7 @@ def test_temp_avg() -> None:
 
 
 def test_temp_avg_updated() -> None:
-    field = spec_updated.fields.of_data[0]
+    field = spec_updated.fields.of(Tag.DATA)[0]
 
     assert field.id == "temp_avg"
     assert field.tags == [Tag.DATA]
@@ -110,7 +110,7 @@ def test_temp_avg_updated() -> None:
 
 
 def test_temp_max() -> None:
-    field = spec.fields.of_data[1]
+    field = spec.fields.of(Tag.DATA)[1]
 
     assert field.id == "temp_max"
     assert field.tags == [Tag.DATA]
@@ -120,7 +120,7 @@ def test_temp_max() -> None:
 
 
 def test_temp_max_updated() -> None:
-    field = spec_updated.fields.of_data[1]
+    field = spec_updated.fields.of(Tag.DATA)[1]
 
     assert field.id == "temp_max"
     assert field.tags == [Tag.DATA]
@@ -130,7 +130,7 @@ def test_temp_max_updated() -> None:
 
 
 def test_wind_avg() -> None:
-    field = spec.fields.of_data[2]
+    field = spec.fields.of(Tag.DATA)[2]
 
     assert field.id == "wind_avg"
     assert field.tags == [Tag.DATA]
@@ -140,7 +140,7 @@ def test_wind_avg() -> None:
 
 
 def test_wind_avg_updated() -> None:
-    field = spec_updated.fields.of_data[2]
+    field = spec_updated.fields.of(Tag.DATA)[2]
 
     assert field.id == "wind_avg"
     assert field.tags == [Tag.DATA]
@@ -150,7 +150,7 @@ def test_wind_avg_updated() -> None:
 
 
 def test_wind_max() -> None:
-    field = spec.fields.of_data[3]
+    field = spec.fields.of(Tag.DATA)[3]
 
     assert field.id == "wind_max"
     assert field.tags == [Tag.DATA]
@@ -160,7 +160,7 @@ def test_wind_max() -> None:
 
 
 def test_wind_max_updated() -> None:
-    field = spec_updated.fields.of_data[3]
+    field = spec_updated.fields.of(Tag.DATA)[3]
 
     assert field.id == "wind_max"
     assert field.tags == [Tag.DATA]
@@ -170,7 +170,7 @@ def test_wind_max_updated() -> None:
 
 
 def test_loc() -> None:
-    field = spec.fields.of_attr[0]
+    field = spec.fields.of(Tag.ATTR)[0]
 
     assert field.id == "loc"
     assert field.tags == [Tag.ATTR]
@@ -179,7 +179,7 @@ def test_loc() -> None:
 
 
 def test_loc_updated() -> None:
-    field = spec_updated.fields.of_attr[0]
+    field = spec_updated.fields.of(Tag.ATTR)[0]
 
     assert field.id == "loc"
     assert field.tags == [Tag.ATTR]
@@ -188,7 +188,7 @@ def test_loc_updated() -> None:
 
 
 def test_lon() -> None:
-    field = spec.fields.of_attr[1]
+    field = spec.fields.of(Tag.ATTR)[1]
 
     assert field.id == "lon"
     assert field.tags == [Tag.ATTR]
@@ -197,7 +197,7 @@ def test_lon() -> None:
 
 
 def test_lon_updated() -> None:
-    field = spec_updated.fields.of_attr[1]
+    field = spec_updated.fields.of(Tag.ATTR)[1]
 
     assert field.id == "lon"
     assert field.tags == [Tag.ATTR]
@@ -206,7 +206,7 @@ def test_lon_updated() -> None:
 
 
 def test_lat() -> None:
-    field = spec.fields.of_attr[2]
+    field = spec.fields.of(Tag.ATTR)[2]
 
     assert field.id == "lat"
     assert field.tags == [Tag.ATTR]
@@ -215,7 +215,7 @@ def test_lat() -> None:
 
 
 def test_lat_updated() -> None:
-    field = spec_updated.fields.of_attr[2]
+    field = spec_updated.fields.of(Tag.ATTR)[2]
 
     assert field.id == "lat"
     assert field.tags == [Tag.ATTR]
@@ -223,6 +223,24 @@ def test_lat_updated() -> None:
     assert field.default == weather.lat
 
 
+def test_attrs() -> None:
+    field = spec.fields.of(Tag.ATTR)[3]
+
+    assert field.id == "attrs"
+    assert field.tags == [Tag.ATTR, Tag.MULTIPLE]
+    assert field.name == "attrs"
+    assert field.default is MISSING
+
+
+def test_attrs_updated() -> None:
+    field = spec_updated.fields.of(Tag.ATTR)[3]
+
+    assert field.id == "attrs"
+    assert field.tags == [Tag.ATTR, Tag.MULTIPLE]
+    assert field.name == "attrs"
+    assert field.default == weather.attrs
+
+
 def test_factory() -> None:
     assert spec.factory is None
 
