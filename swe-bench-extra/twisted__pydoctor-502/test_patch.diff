diff --git a/pydoctor/test/test_packages.py b/pydoctor/test/test_packages.py
index 9d2a3aa6..125fb396 100644
--- a/pydoctor/test/test_packages.py
+++ b/pydoctor/test/test_packages.py
@@ -89,4 +89,24 @@ def test_package_module_name_clash() -> None:
     """
     system = processPackage('package_module_name_clash')
     pack = system.allobjects['package_module_name_clash.pack']
-    assert 'package' == pack.contents.popitem()[0]
\ No newline at end of file
+    assert 'package' == pack.contents.popitem()[0]
+
+def test_reparented_module() -> None:
+    """
+    A module that is imported in a package as a different name and exported
+    in that package under the new name via C{__all__} is presented using the
+    new name.
+    """
+    system = processPackage('reparented_module')
+
+    mod = system.allobjects['reparented_module.module']
+    top = system.allobjects['reparented_module']
+
+    assert mod.fullName() == 'reparented_module.module'
+    assert top.resolveName('module') is top.contents['module']
+    assert top.resolveName('module.f') is mod.contents['f']
+
+    # The module old name is not in allobjects
+    assert 'reparented_module.mod' not in system.allobjects
+    # But can still be resolved with it's old name
+    assert top.resolveName('mod') is top.contents['module']
\ No newline at end of file
diff --git a/pydoctor/test/testpackages/reparented_module/__init__.py b/pydoctor/test/testpackages/reparented_module/__init__.py
new file mode 100644
index 00000000..a7c376d0
--- /dev/null
+++ b/pydoctor/test/testpackages/reparented_module/__init__.py
@@ -0,0 +1,6 @@
+"""
+Here the module C{mod} is made available under an alias name
+that is explicitly advertised under the alias name. 
+"""
+from . import mod as module
+__all__=('module',)
diff --git a/pydoctor/test/testpackages/reparented_module/mod.py b/pydoctor/test/testpackages/reparented_module/mod.py
new file mode 100644
index 00000000..ef076130
--- /dev/null
+++ b/pydoctor/test/testpackages/reparented_module/mod.py
@@ -0,0 +1,5 @@
+"""
+This is the "origin" module which for testing purpose is used from the C{reparented_module} package.
+"""
+def f():
+    pass
