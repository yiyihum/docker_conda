diff --git a/tests/test_typing.py b/tests/test_typing.py
index ad20503..dc5aedf 100644
--- a/tests/test_typing.py
+++ b/tests/test_typing.py
@@ -1,42 +1,36 @@
 # standard library
-from typing import Any, Optional, Union
+from typing import Any
 
 
 # dependencies
+import numpy as np
 from pytest import mark
-from typing_extensions import Annotated, Literal
+from typing_extensions import Literal
 
 
 # submodules
 from pandas_dataclasses.typing import (
-    Collection,
     Attr,
     Data,
     Index,
     Name,
+    Named,
     get_dtype,
     get_ftype,
     get_name,
-    get_rtype,
 )
 
 
-# type hints
-Int64 = Literal["int64"]
-Label = Literal["label"]
-NoneType = type(None)
-
-
 # test datasets
 testdata_dtype = [
-    (Any, None),
-    (NoneType, None),
-    (Int64, "int64"),
-    (int, "int"),
-    (Collection[Any, Any], None),
-    (Collection[Any, None], None),
-    (Collection[Any, Int64], "int64"),
-    (Collection[Any, int], "int"),
+    (Data[Any], None),
+    (Data[None], None),
+    (Data[int], np.dtype("int64")),
+    (Data[Literal["i8"]], np.dtype("int64")),
+    (Index[Any], None),
+    (Index[None], None),
+    (Index[int], np.dtype("int64")),
+    (Index[Literal["i8"]], np.dtype("int64")),
 ]
 
 testdata_ftype = [
@@ -47,20 +41,16 @@ testdata_ftype = [
 ]
 
 testdata_name = [
-    (NoneType, None),
-    (Label, "label"),
-    (Collection[None, Any], None),
-    (Collection[Label, Any], "label"),
-]
-
-testdata_rtype = [
-    (int, int),
-    (Annotated[int, "annotation"], int),
-    (Union[int, float], int),
-    (Optional[int], int),
+    (Attr[Any], None),
+    (Data[Any], None),
+    (Index[Any], None),
+    (Name[Any], None),
+    (Named[Attr[Any], "attr"], "attr"),
+    (Named[Data[Any], "data"], "data"),
+    (Named[Index[Any], "index"], "index"),
+    (Named[Name[Any], "name"], "name"),
 ]
 
-
 # test functions
 @mark.parametrize("type_, dtype", testdata_dtype)
 def test_get_dtype(type_: Any, dtype: Any) -> None:
@@ -68,15 +58,10 @@ def test_get_dtype(type_: Any, dtype: Any) -> None:
 
 
 @mark.parametrize("type_, ftype", testdata_ftype)
-def test_get_field_type(type_: Any, ftype: Any) -> None:
+def test_get_ftype(type_: Any, ftype: Any) -> None:
     assert get_ftype(type_).value == ftype
 
 
 @mark.parametrize("type_, name", testdata_name)
 def test_get_name(type_: Any, name: Any) -> None:
     assert get_name(type_) == name
-
-
-@mark.parametrize("type_, rtype", testdata_rtype)
-def test_get_rtype(type_: Any, rtype: Any) -> None:
-    assert get_rtype(type_) == rtype
