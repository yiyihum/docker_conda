diff --git a/sqlglot/expressions.py b/sqlglot/expressions.py
index b19dc852..c0c39030 100644
--- a/sqlglot/expressions.py
+++ b/sqlglot/expressions.py
@@ -1931,6 +1931,7 @@ class Insert(DDL, DML):
     arg_types = {
         "hint": False,
         "with": False,
+        "is_function": False,
         "this": True,
         "expression": False,
         "conflict": False,
diff --git a/sqlglot/generator.py b/sqlglot/generator.py
index a61b4b75..077e5ff0 100644
--- a/sqlglot/generator.py
+++ b/sqlglot/generator.py
@@ -1512,7 +1512,9 @@ class Generator(metaclass=_Generator):
         alternative = expression.args.get("alternative")
         alternative = f" OR {alternative}" if alternative else ""
         ignore = " IGNORE" if expression.args.get("ignore") else ""
-
+        is_function = expression.args.get("is_function")
+        if is_function:
+            this = f"{this} FUNCTION"
         this = f"{this} {self.sql(expression, 'this')}"
 
         exists = " IF EXISTS" if expression.args.get("exists") else ""
diff --git a/sqlglot/parser.py b/sqlglot/parser.py
index 60364141..d934b4c6 100644
--- a/sqlglot/parser.py
+++ b/sqlglot/parser.py
@@ -2185,7 +2185,9 @@ class Parser(metaclass=_Parser):
             self._match(TokenType.INTO)
             comments += ensure_list(self._prev_comments)
             self._match(TokenType.TABLE)
-            this = self._parse_table(schema=True)
+            is_function = self._match(TokenType.FUNCTION)
+
+            this = self._parse_table(schema=True) if not is_function else self._parse_function()
 
         returning = self._parse_returning()
 
@@ -2193,6 +2195,7 @@ class Parser(metaclass=_Parser):
             exp.Insert,
             comments=comments,
             hint=hint,
+            is_function=is_function,
             this=this,
             by_name=self._match_text_seq("BY", "NAME"),
             exists=self._parse_exists(),

