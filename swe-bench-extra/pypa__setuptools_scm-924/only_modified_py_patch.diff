diff --git a/src/setuptools_scm/_cli.py b/src/setuptools_scm/_cli.py
index 560650c..66099b1 100644
--- a/src/setuptools_scm/_cli.py
+++ b/src/setuptools_scm/_cli.py
@@ -31,7 +31,7 @@ def main(args: list[str] | None = None) -> None:
         )
         config = Configuration(inferred_root)
 
-    version = _get_version(config)
+    version = _get_version(config, force_write_version_files=False)
     if version is None:
         raise SystemExit("ERROR: no version found for", opts)
     if opts.strip_dev:
diff --git a/src/setuptools_scm/_get_version_impl.py b/src/setuptools_scm/_get_version_impl.py
index a5015c7..8be513a 100644
--- a/src/setuptools_scm/_get_version_impl.py
+++ b/src/setuptools_scm/_get_version_impl.py
@@ -84,12 +84,20 @@ def write_version_files(
 
 
 def _get_version(
-    config: Configuration, force_write_version_files: bool = False
+    config: Configuration, force_write_version_files: bool | None = None
 ) -> str | None:
     parsed_version = parse_version(config)
     if parsed_version is None:
         return None
     version_string = _format_version(parsed_version)
+    if force_write_version_files is None:
+        force_write_version_files = True
+        warnings.warn(
+            "force_write_version_files ought to be set,"
+            " presuming the legacy True value",
+            DeprecationWarning,
+        )
+
     if force_write_version_files:
         write_version_files(config, version=version_string, scm_version=parsed_version)
 
diff --git a/src/setuptools_scm/_version_cls.py b/src/setuptools_scm/_version_cls.py
index e62c9fa..55c00c6 100644
--- a/src/setuptools_scm/_version_cls.py
+++ b/src/setuptools_scm/_version_cls.py
@@ -5,8 +5,12 @@ from typing import cast
 from typing import Type
 from typing import Union
 
-from packaging.version import InvalidVersion
-from packaging.version import Version as Version
+try:
+    from packaging.version import InvalidVersion
+    from packaging.version import Version as Version
+except ImportError:
+    from setuptools.extern.packaging.version import InvalidVersion  # type: ignore
+    from setuptools.extern.packaging.version import Version as Version  # type: ignore
 
 
 class NonNormalizedVersion(Version):

