diff --git a/mockfirestore/__init__.py b/mockfirestore/__init__.py
index 5636753..a7f18de 100644
--- a/mockfirestore/__init__.py
+++ b/mockfirestore/__init__.py
@@ -12,3 +12,4 @@ from mockfirestore.document import DocumentSnapshot, DocumentReference
 from mockfirestore.collection import CollectionReference
 from mockfirestore.query import Query
 from mockfirestore._helpers import Timestamp
+from mockfirestore.transaction import Transaction
diff --git a/mockfirestore/client.py b/mockfirestore/client.py
index c66533a..50bbbb4 100644
--- a/mockfirestore/client.py
+++ b/mockfirestore/client.py
@@ -1,16 +1,7 @@
+from typing import Iterable
 from mockfirestore.collection import CollectionReference
-
-
-
-
-
-
-
-
-
-
-
-
+from mockfirestore.document import DocumentReference, DocumentSnapshot
+from mockfirestore.transaction import Transaction
 
 
 class MockFirestore:
@@ -26,5 +17,13 @@ class MockFirestore:
     def reset(self):
         self._data = {}
 
+    def get_all(self, references: Iterable[DocumentReference],
+                field_paths=None,
+                transaction=None) -> Iterable[DocumentSnapshot]:
+        for doc_ref in set(references):
+            yield doc_ref.get()
+
+    def transaction(self, **kwargs) -> Transaction:
+        return Transaction(self, **kwargs)
 
 
diff --git a/mockfirestore/document.py b/mockfirestore/document.py
index ccd3ba7..657143c 100644
--- a/mockfirestore/document.py
+++ b/mockfirestore/document.py
@@ -27,6 +27,15 @@ class DocumentSnapshot:
         timestamp = Timestamp.from_now()
         return timestamp
 
+    @property
+    def update_time(self) -> Timestamp:
+        return self.create_time
+
+    @property
+    def read_time(self) -> Timestamp:
+        timestamp = Timestamp.from_now()
+        return timestamp
+
     def get(self, field_path: str) -> Any:
         if not self.exists:
             return None
diff --git a/mockfirestore/query.py b/mockfirestore/query.py
index 2e94f07..7f32e25 100644
--- a/mockfirestore/query.py
+++ b/mockfirestore/query.py
@@ -24,7 +24,7 @@ class Query:
             for field_filter in field_filters:
                 self._add_field_filter(*field_filter)
 
-    def stream(self) -> Iterator[DocumentSnapshot]:
+    def stream(self, transaction=None) -> Iterator[DocumentSnapshot]:
         doc_snapshots = self.parent.stream()
 
         for field, compare, value in self._field_filters:
