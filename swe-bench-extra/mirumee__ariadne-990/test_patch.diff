diff --git a/tests/asgi/test_configuration.py b/tests/asgi/test_configuration.py
index 9f1ceba..f7c007d 100644
--- a/tests/asgi/test_configuration.py
+++ b/tests/asgi/test_configuration.py
@@ -111,6 +111,21 @@ def test_custom_root_value_function_is_called_by_query(schema):
     get_root_value.assert_called_once()
 
 
+def test_custom_deprecated_root_value_function_raises_warning_by_query(
+    schema,
+):
+    def get_root_value(_context, _document):
+        return True
+
+    app = GraphQL(
+        schema, context_value={"test": "TEST-CONTEXT"}, root_value=get_root_value
+    )
+    client = TestClient(app)
+
+    with pytest.deprecated_call():
+        client.post("/", json={"query": "{ status }"})
+
+
 def test_custom_root_value_function_is_called_by_subscription(schema):
     get_root_value = Mock(return_value=True)
     app = GraphQL(schema, root_value=get_root_value)
@@ -131,6 +146,29 @@ def test_custom_root_value_function_is_called_by_subscription(schema):
         get_root_value.assert_called_once()
 
 
+def test_custom_deprecated_root_value_function_raises_warning_by_subscription(schema):
+    def get_root_value(_context, _document):
+        return True
+
+    app = GraphQL(schema, root_value=get_root_value)
+    client = TestClient(app)
+
+    with pytest.deprecated_call():
+        with client.websocket_connect("/", ["graphql-ws"]) as ws:
+            ws.send_json({"type": GraphQLWSHandler.GQL_CONNECTION_INIT})
+            ws.send_json(
+                {
+                    "type": GraphQLWSHandler.GQL_START,
+                    "id": "test1",
+                    "payload": {"query": "subscription { ping }"},
+                }
+            )
+            response = ws.receive_json()
+            assert response["type"] == GraphQLWSHandler.GQL_CONNECTION_ACK
+            response = ws.receive_json()
+            assert response["type"] == GraphQLWSHandler.GQL_DATA
+
+
 def test_custom_root_value_function_is_called_by_subscription_graphql_transport_ws(
     schema,
 ):
@@ -156,6 +194,34 @@ def test_custom_root_value_function_is_called_by_subscription_graphql_transport_
         get_root_value.assert_called_once()
 
 
+def test_custom_deprecated_root_value_function_raises_warning_by_subscription_graphql_transport_ws(
+    schema,
+):
+    def get_root_value(_context, _document):
+        return True
+
+    websocket_handler = GraphQLTransportWSHandler()
+    app = GraphQL(
+        schema, root_value=get_root_value, websocket_handler=websocket_handler
+    )
+    client = TestClient(app)
+
+    with pytest.deprecated_call():
+        with client.websocket_connect("/", ["graphql-transport-ws"]) as ws:
+            ws.send_json({"type": GraphQLTransportWSHandler.GQL_CONNECTION_INIT})
+            ws.send_json(
+                {
+                    "type": GraphQLTransportWSHandler.GQL_SUBSCRIBE,
+                    "id": "test1",
+                    "payload": {"query": "subscription { ping }"},
+                }
+            )
+            response = ws.receive_json()
+            assert response["type"] == GraphQLTransportWSHandler.GQL_CONNECTION_ACK
+            response = ws.receive_json()
+            assert response["type"] == GraphQLTransportWSHandler.GQL_NEXT
+
+
 def test_custom_root_value_function_is_called_with_context_value(schema):
     get_root_value = Mock(return_value=True)
     app = GraphQL(
@@ -163,7 +229,7 @@ def test_custom_root_value_function_is_called_with_context_value(schema):
     )
     client = TestClient(app)
     client.post("/", json={"query": "{ status }"})
-    get_root_value.assert_called_once_with({"test": "TEST-CONTEXT"}, ANY)
+    get_root_value.assert_called_once_with({"test": "TEST-CONTEXT"}, None, None, ANY)
 
 
 def test_custom_query_parser_is_used_for_http_query(schema):
diff --git a/tests/wsgi/test_configuration.py b/tests/wsgi/test_configuration.py
index 47f8608..ed0a802 100644
--- a/tests/wsgi/test_configuration.py
+++ b/tests/wsgi/test_configuration.py
@@ -76,7 +76,21 @@ def test_custom_root_value_function_is_called_with_context_value(schema):
         schema, context_value={"test": "TEST-CONTEXT"}, root_value=get_root_value
     )
     app.execute_query({}, {"query": "{ status }"})
-    get_root_value.assert_called_once_with({"test": "TEST-CONTEXT"}, ANY)
+    get_root_value.assert_called_once_with({"test": "TEST-CONTEXT"}, None, None, ANY)
+
+
+def test_warning_is_raised_if_custom_root_value_function_has_deprecated_signature(
+    schema,
+):
+    def get_root_value(_context, _document):
+        return True
+
+    app = GraphQL(
+        schema, context_value={"test": "TEST-CONTEXT"}, root_value=get_root_value
+    )
+
+    with pytest.deprecated_call():
+        app.execute_query({}, {"query": "{ status }"})
 
 
 def test_custom_query_parser_is_used(schema):
