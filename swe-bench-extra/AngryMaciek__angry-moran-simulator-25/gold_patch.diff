diff --git a/.github/workflows/lint.yml b/.github/workflows/lint.yml
index db7d90e..b0d5816 100644
--- a/.github/workflows/lint.yml
+++ b/.github/workflows/lint.yml
@@ -40,6 +40,7 @@ jobs:
           black --check moranpycess/MoranProcess.py
           black --check moranpycess/MoranProcess2D.py
           black --check moranpycess/MoranProcess3D.py
+          black --check moranpycess/exceptions.py
           black --check tests/unit/context.py
           black --check tests/unit/Individual.py
           black --check tests/unit/MoranProcess.py
@@ -54,6 +55,7 @@ jobs:
           flake8 --max-line-length=101 --ignore F401,E231,W503,E741 moranpycess/MoranProcess.py
           flake8 --max-line-length=101 --ignore F401,E231,W503,E741 moranpycess/MoranProcess2D.py
           flake8 --max-line-length=101 --ignore F401,E231,W503,E741 moranpycess/MoranProcess3D.py
+          flake8 --max-line-length=88 moranpycess/exceptions.py
           flake8 --max-line-length=88 --ignore F401,E402 tests/unit/context.py
           flake8 --max-line-length=88 tests/unit/Individual.py
           flake8 --max-line-length=88 tests/unit/MoranProcess.py
diff --git a/moranpycess/MoranProcess.py b/moranpycess/MoranProcess.py
index 6e96db2..b966519 100644
--- a/moranpycess/MoranProcess.py
+++ b/moranpycess/MoranProcess.py
@@ -114,12 +114,16 @@ def __init__(
                     == TransitionMatrix.shape[1]
                     == len(label_list)
                 )
-                # check if the values are correct
-                for v in np.sum(TransitionMatrix, axis=1):
-                    assert v == 1.0
             except AssertionError as e:
                 e.args += ("Invalid Transition Matrix",)
                 raise
+            # check if the values are correct
+            for v in np.sum(TransitionMatrix, axis=1):
+                if v != 1.0:
+                    raise moranpycess.IncorrectValueError(
+                        parameter="Transition Matrix",
+                        message="Transition probabilities need to add up to 1.0.",
+                    )
         self.TransitionMatrix = copy.deepcopy(TransitionMatrix)
 
     @property
diff --git a/moranpycess/MoranProcess2D.py b/moranpycess/MoranProcess2D.py
index 6012f53..6f84655 100644
--- a/moranpycess/MoranProcess2D.py
+++ b/moranpycess/MoranProcess2D.py
@@ -126,12 +126,16 @@ def __init__(
                     == TransitionMatrix.shape[1]
                     == len(label_list)
                 )
-                # check if the values are correct
-                for v in np.sum(TransitionMatrix, axis=1):
-                    assert v == 1.0
             except AssertionError as e:
                 e.args += ("Invalid Transition Matrix",)
                 raise
+            # check if the values are correct
+            for v in np.sum(TransitionMatrix, axis=1):
+                if v != 1.0:
+                    raise moranpycess.IncorrectValueError(
+                        parameter="Transition Matrix",
+                        message="Transition probabilities need to add up to 1.0.",
+                    )
         self.TransitionMatrix = copy.deepcopy(TransitionMatrix)
 
     @property
diff --git a/moranpycess/MoranProcess3D.py b/moranpycess/MoranProcess3D.py
index 2036c52..8d7c898 100644
--- a/moranpycess/MoranProcess3D.py
+++ b/moranpycess/MoranProcess3D.py
@@ -128,12 +128,16 @@ def __init__(
                     == TransitionMatrix.shape[1]
                     == len(label_list)
                 )
-                # check if the values are correct
-                for v in np.sum(TransitionMatrix, axis=1):
-                    assert v == 1.0
             except AssertionError as e:
                 e.args += ("Invalid Transition Matrix",)
                 raise
+            # check if the values are correct
+            for v in np.sum(TransitionMatrix, axis=1):
+                if v != 1.0:
+                    raise moranpycess.IncorrectValueError(
+                        parameter="Transition Matrix",
+                        message="Transition probabilities need to add up to 1.0.",
+                    )
         self.TransitionMatrix = copy.deepcopy(TransitionMatrix)
 
     @property
diff --git a/moranpycess/__init__.py b/moranpycess/__init__.py
index a1dcf59..e399ea2 100644
--- a/moranpycess/__init__.py
+++ b/moranpycess/__init__.py
@@ -18,3 +18,4 @@
 from .MoranProcess import MoranProcess
 from .MoranProcess2D import MoranProcess2D
 from .MoranProcess3D import MoranProcess3D
+from .exceptions import IncorrectValueError
diff --git a/moranpycess/exceptions.py b/moranpycess/exceptions.py
new file mode 100644
index 0000000..e065e4c
--- /dev/null
+++ b/moranpycess/exceptions.py
@@ -0,0 +1,57 @@
+"""
+##############################################################################
+#
+#   Custom Exceptions
+#
+#   AUTHOR: Maciej_Bak
+#   AFFILIATION: University_of_Basel
+#   AFFILIATION: Swiss_Institute_of_Bioinformatics
+#   CONTACT: wsciekly.maciek@gmail.com
+#   CREATED: 01-04-2021
+#   LICENSE: MIT
+#
+##############################################################################
+"""
+
+
+class Error(Exception):
+    """Base class for other exceptions.
+
+    Args:
+        Exception (Exception): built-in Exception class
+    """
+
+    pass
+
+
+class IncorrectValueError(Error):
+    """Handling incorrect values of user's arguments.
+
+    Args:
+        Error (Error): Base class for other exceptions.
+    """
+
+    def __init__(
+        self,
+        parameter,
+        message="Please check the documentation for expected argument values.",
+    ):
+        """Class initializer.
+
+        Args:
+            parameter (str): parameter name
+            message (str, optional): error message.
+                Defaults to "Please check the documentation
+                for expected argument values.".
+        """
+        self.parameter = parameter
+        self.message = message
+        super().__init__(self.message)
+
+    def __str__(self):
+        """Display the error message.
+
+        Returns:
+            str: error message
+        """
+        return f"Incorrect value for {self.parameter}. {self.message}"
