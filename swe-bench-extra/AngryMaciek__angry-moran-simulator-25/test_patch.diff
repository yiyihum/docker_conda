diff --git a/tests/unit/MoranProcess.py b/tests/unit/MoranProcess.py
index 7c8acd1..a987f5a 100644
--- a/tests/unit/MoranProcess.py
+++ b/tests/unit/MoranProcess.py
@@ -213,7 +213,7 @@ def test_classMoranProcessWrongInit(self):
         label_list = ["A", "B", "C"]
         BirthPayoffMatrix = np.array([[10, 20], [30, 40]])
         DeathPayoffMatrix = np.array([[1, 2], [3, 4]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess(
                 size_list=size_list,
                 label_list=label_list,
@@ -225,7 +225,7 @@ def test_classMoranProcessWrongInit(self):
         label_list = ["A", "B"]
         BirthPayoffMatrix = np.array([[10, 20, 20], [30, 40, 40], [1, 1, 1]])
         DeathPayoffMatrix = np.array([[1, 2], [3, 4]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess(
                 size_list=size_list,
                 label_list=label_list,
@@ -237,7 +237,7 @@ def test_classMoranProcessWrongInit(self):
         label_list = ["A", "B"]
         BirthPayoffMatrix = np.array([[1, 2], [3, 4]])
         DeathPayoffMatrix = np.array([[10, 20, 20], [30, 40, 40], [1, 1, 1]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess(
                 size_list=size_list,
                 label_list=label_list,
@@ -250,7 +250,7 @@ def test_classMoranProcessWrongInit(self):
         BirthPayoffMatrix = np.array([[1, 2], [3, 4]])
         DeathPayoffMatrix = np.array([[10, 20], [30, 40]])
         TransitionMatrix = np.array([[0.0], [0.0]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess(
                 size_list=size_list,
                 label_list=label_list,
@@ -264,7 +264,10 @@ def test_classMoranProcessWrongInit(self):
         BirthPayoffMatrix = np.array([[1, 2], [3, 4]])
         DeathPayoffMatrix = np.array([[10, 20], [30, 40]])
         TransitionMatrix = np.array([[0.5, 0.4], [0.5, 0.5]])
-        with pytest.raises(Exception):
+        expected_error_msg = "Incorrect value for Transition Matrix."
+        expected_error_msg += " "
+        expected_error_msg += "Transition probabilities need to add up to 1.0."
+        with pytest.raises(moranpycess.IncorrectValueError, match=expected_error_msg):
             moranpycess.MoranProcess(
                 size_list=size_list,
                 label_list=label_list,
diff --git a/tests/unit/MoranProcess2D.py b/tests/unit/MoranProcess2D.py
index 8b7cfbf..938416d 100644
--- a/tests/unit/MoranProcess2D.py
+++ b/tests/unit/MoranProcess2D.py
@@ -64,7 +64,7 @@ def test_classMoranProcess2DWrongInit(self):
         grid = np.array([["A", "A"], ["A", "B"]])
         BirthPayoffMatrix = np.array([[10, 20], [30, 40]])
         DeathPayoffMatrix = np.array([[1, 2], [3, 4]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess2D(
                 size_list=size_list,
                 label_list=label_list,
@@ -78,7 +78,7 @@ def test_classMoranProcess2DWrongInit(self):
         grid = np.array([["A", "A"], ["A", "B"]])
         BirthPayoffMatrix = np.array([[10, 20, 20], [30, 40, 40], [1, 1, 1]])
         DeathPayoffMatrix = np.array([[1, 2], [3, 4]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess2D(
                 size_list=size_list,
                 label_list=label_list,
@@ -92,7 +92,7 @@ def test_classMoranProcess2DWrongInit(self):
         grid = np.array([["A", "A"], ["A", "B"]])
         BirthPayoffMatrix = np.array([[1, 2], [3, 4]])
         DeathPayoffMatrix = np.array([[10, 20, 20], [30, 40, 40], [1, 1, 1]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess2D(
                 size_list=size_list,
                 label_list=label_list,
@@ -106,7 +106,7 @@ def test_classMoranProcess2DWrongInit(self):
         grid = np.array([["A", "A"], ["C", "B"]])
         BirthPayoffMatrix = np.array([[10, 20], [30, 40]])
         DeathPayoffMatrix = np.array([[1, 2], [3, 4]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess2D(
                 size_list=size_list,
                 label_list=label_list,
@@ -120,7 +120,7 @@ def test_classMoranProcess2DWrongInit(self):
         grid = np.array([["A", "A"], ["A", "B"]])
         BirthPayoffMatrix = np.array([[10, 20], [30, 40]])
         DeathPayoffMatrix = np.array([[1, 2], [3, 4]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess2D(
                 size_list=size_list,
                 label_list=label_list,
@@ -135,7 +135,7 @@ def test_classMoranProcess2DWrongInit(self):
         BirthPayoffMatrix = np.array([[1, 2], [3, 4]])
         DeathPayoffMatrix = np.array([[10, 20], [30, 40]])
         TransitionMatrix = np.array([[0.0], [0.0]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess2D(
                 size_list=size_list,
                 label_list=label_list,
@@ -151,7 +151,10 @@ def test_classMoranProcess2DWrongInit(self):
         BirthPayoffMatrix = np.array([[1, 2], [3, 4]])
         DeathPayoffMatrix = np.array([[10, 20], [30, 40]])
         TransitionMatrix = np.array([[0.5, 0.4], [0.5, 0.5]])
-        with pytest.raises(Exception):
+        expected_error_msg = "Incorrect value for Transition Matrix."
+        expected_error_msg += " "
+        expected_error_msg += "Transition probabilities need to add up to 1.0."
+        with pytest.raises(moranpycess.IncorrectValueError, match=expected_error_msg):
             moranpycess.MoranProcess2D(
                 size_list=size_list,
                 label_list=label_list,
diff --git a/tests/unit/MoranProcess3D.py b/tests/unit/MoranProcess3D.py
index caa5705..8326ce4 100644
--- a/tests/unit/MoranProcess3D.py
+++ b/tests/unit/MoranProcess3D.py
@@ -64,7 +64,7 @@ def test_classMoranProcess3DWrongInit(self):
         grid = np.array([[["A", "A"], ["A", "B"]], [["A", "A"], ["A", "A"]]])
         BirthPayoffMatrix = np.array([[10, 20], [30, 40]])
         DeathPayoffMatrix = np.array([[1, 2], [3, 4]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess3D(
                 size_list=size_list,
                 label_list=label_list,
@@ -78,7 +78,7 @@ def test_classMoranProcess3DWrongInit(self):
         grid = np.array([[["A", "A"], ["A", "B"]], [["A", "A"], ["A", "A"]]])
         BirthPayoffMatrix = np.array([[10, 20, 20], [30, 40, 40], [1, 1, 1]])
         DeathPayoffMatrix = np.array([[1, 2], [3, 4]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess3D(
                 size_list=size_list,
                 label_list=label_list,
@@ -92,7 +92,7 @@ def test_classMoranProcess3DWrongInit(self):
         grid = np.array([[["A", "A"], ["A", "B"]], [["A", "A"], ["A", "A"]]])
         BirthPayoffMatrix = np.array([[1, 2], [3, 4]])
         DeathPayoffMatrix = np.array([[10, 20, 20], [30, 40, 40], [1, 1, 1]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess3D(
                 size_list=size_list,
                 label_list=label_list,
@@ -106,7 +106,7 @@ def test_classMoranProcess3DWrongInit(self):
         grid = np.array([[["A", "A"], ["C", "B"]], [["A", "A"], ["A", "A"]]])
         BirthPayoffMatrix = np.array([[10, 20], [30, 40]])
         DeathPayoffMatrix = np.array([[1, 2], [3, 4]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess3D(
                 size_list=size_list,
                 label_list=label_list,
@@ -120,7 +120,7 @@ def test_classMoranProcess3DWrongInit(self):
         grid = np.array([[["A", "A"], ["B", "B"]], [["A", "A"], ["A", "A"]]])
         BirthPayoffMatrix = np.array([[10, 20], [30, 40]])
         DeathPayoffMatrix = np.array([[1, 2], [3, 4]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess3D(
                 size_list=size_list,
                 label_list=label_list,
@@ -135,7 +135,7 @@ def test_classMoranProcess3DWrongInit(self):
         BirthPayoffMatrix = np.array([[1, 2], [3, 4]])
         DeathPayoffMatrix = np.array([[10, 20], [30, 40]])
         TransitionMatrix = np.array([[0.0], [0.0]])
-        with pytest.raises(Exception):
+        with pytest.raises(AssertionError):
             moranpycess.MoranProcess3D(
                 size_list=size_list,
                 label_list=label_list,
@@ -151,7 +151,10 @@ def test_classMoranProcess3DWrongInit(self):
         BirthPayoffMatrix = np.array([[1, 2], [3, 4]])
         DeathPayoffMatrix = np.array([[10, 20], [30, 40]])
         TransitionMatrix = np.array([[0.5, 0.4], [0.5, 0.5]])
-        with pytest.raises(Exception):
+        expected_error_msg = "Incorrect value for Transition Matrix."
+        expected_error_msg += " "
+        expected_error_msg += "Transition probabilities need to add up to 1.0."
+        with pytest.raises(moranpycess.IncorrectValueError, match=expected_error_msg):
             moranpycess.MoranProcess3D(
                 size_list=size_list,
                 label_list=label_list,
