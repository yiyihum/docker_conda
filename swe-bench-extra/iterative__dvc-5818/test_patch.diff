diff --git a/tests/func/experiments/test_experiments.py b/tests/func/experiments/test_experiments.py
--- a/tests/func/experiments/test_experiments.py
+++ b/tests/func/experiments/test_experiments.py
@@ -611,3 +611,16 @@ def test_checkout_targets_deps(tmp_dir, scm, dvc, exp_stage):
     assert (tmp_dir / "foo").exists()
     assert (tmp_dir / "foo").read_text() == "foo"
     assert not (tmp_dir / "bar").exists()
+
+
+@pytest.mark.parametrize("tail", ["", "~1", "^"])
+def test_fix_exp_head(tmp_dir, scm, tail):
+    from dvc.repo.experiments.base import EXEC_BASELINE
+    from dvc.repo.experiments.utils import fix_exp_head
+
+    head = "HEAD" + tail
+    assert head == fix_exp_head(scm, head)
+
+    scm.set_ref(EXEC_BASELINE, "refs/heads/master")
+    assert EXEC_BASELINE + tail == fix_exp_head(scm, head)
+    assert "foo" + tail == fix_exp_head(scm, "foo" + tail)
diff --git a/tests/unit/repo/plots/test_diff.py b/tests/unit/repo/plots/test_diff.py
--- a/tests/unit/repo/plots/test_diff.py
+++ b/tests/unit/repo/plots/test_diff.py
@@ -14,7 +14,9 @@
 )
 def test_revisions(mocker, arg_revisions, is_dirty, expected_revisions):
     mock_scm = mocker.Mock()
-    mock_scm.configure_mock(**{"is_dirty.return_value": is_dirty})
+    mock_scm.configure_mock(
+        **{"is_dirty.return_value": is_dirty, "get_ref.return_value": None}
+    )
     mock_repo = mocker.Mock(scm=mock_scm)
     assert _revisions(mock_repo, arg_revisions, False) == expected_revisions
 
@@ -32,7 +34,9 @@ def test_revisions_experiment(
     mocker, arg_revisions, baseline, expected_revisions
 ):
     mock_scm = mocker.Mock()
-    mock_scm.configure_mock(**{"is_dirty.return_value": False})
+    mock_scm.configure_mock(
+        **{"is_dirty.return_value": False, "get_ref.return_value": None}
+    )
     mock_experiments = mocker.Mock()
     mock_experiments.configure_mock(**{"get_baseline.return_value": baseline})
     mock_repo = mocker.Mock(scm=mock_scm, experiments=mock_experiments)
