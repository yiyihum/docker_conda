diff --git a/README.md b/README.md
index 2bb5252..9bbf26f 100644
--- a/README.md
+++ b/README.md
@@ -58,6 +58,19 @@ Expected output:
 >>> 49384063495
 >>> 20788274885880
 ```
+
+And you also can generate CPF or CǸPJ with punctuation marks. :)
+
+```python
+from pycpfcnpj import gen
+gen.cpf_with_punctuation()
+gen.cnpj_with_punctuation()
+
+Expected output:
+>>> 048.891.866-97
+>>> 63.212.638/0361-35
+```
+
 Have fun!
 
 In portuguese:
@@ -108,6 +121,19 @@ Expected output:
 >>> 20788274885880
 ```
 
+E você também pode gerar CPF ou CNPJ com pontuação :)
+
+```python
+from pycpfcnpj import gen
+gen.cpf_with_punctuation()
+gen.cnpj_with_punctuation()
+
+Expected output:
+>>> 048.891.866-97
+>>> 63.212.638/0361-35
+```
+
+
 Divirta-se!
 
 Changelog
@@ -118,3 +144,6 @@ Changelog
 
 1.2
 - Use `sys` rather than `six` to check python's version and keeps this project 100% free of dependencies.
+
+1.3
+- Generate CPF and CNPJ numbers with punctuation marks.
\ No newline at end of file
diff --git a/pycpfcnpj/gen.py b/pycpfcnpj/gen.py
index 4f86ffa..2b47d44 100644
--- a/pycpfcnpj/gen.py
+++ b/pycpfcnpj/gen.py
@@ -16,3 +16,13 @@ def cnpj():
     while not cnpj_module.validate(cnpj_ramdom):
         cnpj_ramdom = ''.join(random.choice(string.digits) for i in range(14))
     return cnpj_ramdom
+
+
+def cpf_with_punctuation():
+	cpf_ramdom = cpf()
+	return '{}.{}.{}-{}'.format(cpf_ramdom[:3], cpf_ramdom[3:6], cpf_ramdom[6:9], cpf_ramdom[9:])
+
+
+def cnpj_with_punctuation():
+	cnpj_ramdom = cnpj()
+	return '{}.{}.{}/{}-{}'.format(cnpj_ramdom[:2], cnpj_ramdom[2:5], cnpj_ramdom[5:8], cnpj_ramdom[8:12], cnpj_ramdom[12:])
\ No newline at end of file
