diff --git a/test/test_sysroot_compiler.py b/test/test_sysroot_compiler.py
index 2727e3f..ab1d9ea 100644
--- a/test/test_sysroot_compiler.py
+++ b/test/test_sysroot_compiler.py
@@ -32,27 +32,24 @@ import pytest
 THIS_SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))
 
 
-def _default_docker_kwargs() -> dict:
-    return {
-        'arch': 'aarch64',
-        'os': 'ubuntu',
-        'rosdistro': 'dashing',
-        'sysroot_base_image': '035662560449.dkr.ecr.us-east-2.amazonaws.com/cc-tool:'
-                              'aarch64-bionic-dashing-fastrtps-prebuilt',
-        'docker_network_mode': 'host',
-        'sysroot_nocache': False,
-    }
-
-
 @pytest.fixture
 def platform_config() -> Platform:
     return Platform(
         arch='aarch64',
-        os='ubuntu',
+        os_name='ubuntu',
         rosdistro='dashing',
         rmw='fastrtps')
 
 
+def _default_docker_kwargs() -> dict:
+    return {
+        'platform': Platform('aarch64', 'ubuntu', 'dashing', 'fastrtps'),
+        'override_base_image': 'arm64v8/gcc:9.2.0',
+        'docker_network_mode': 'host',
+        'sysroot_nocache': False,
+    }
+
+
 @pytest.fixture
 def docker_config() -> DockerConfig:
     return DockerConfig(**_default_docker_kwargs())
@@ -71,6 +68,24 @@ def setup_mock_sysroot(path: Path) -> Tuple[Path, Path]:
     return sysroot_dir, ros_workspace_dir
 
 
+def test_platform_argument_validation():
+    rmw = 'fastrtps'
+    p = Platform('armhf', 'ubuntu', 'dashing', rmw)
+    assert p
+
+    with pytest.raises(ValueError):
+        # invalid arch
+        p = Platform('mips', 'ubuntu', 'dashing', rmw)
+
+    with pytest.raises(ValueError):
+        # invalid distro
+        p = Platform('armhf', 'ubuntu', 'ardent', rmw)
+
+    with pytest.raises(ValueError):
+        # invalid OS
+        p = Platform('armhf', 'rhel', 'dashing', rmw)
+
+
 def test_get_workspace_image_tag(platform_config):
     """Make sure the image tag is created correctly."""
     image_tag = platform_config.get_workspace_image_tag()
@@ -87,7 +102,7 @@ def test_docker_config_args(docker_config):
         'Network Mode: {}\n'
         'Caching: {}'
     ).format(
-        args['sysroot_base_image'], args['docker_network_mode'], args['sysroot_nocache']
+        args['override_base_image'], args['docker_network_mode'], args['sysroot_nocache']
     )
     config_string = str(docker_config)
     assert isinstance(config_string, str)
@@ -179,11 +194,12 @@ def test_sysroot_compiler_tree_additions(platform_config, docker_config, tmpdir)
 
 def verify_base_docker_images(arch, os, rosdistro, image_name):
     """Assert correct base image is generated."""
-    sysroot_base_image = None
+    override_base_image = None
     docker_network_mode = 'host'
     sysroot_nocache = 'False'
+    platform = Platform(arch, os, rosdistro, 'fastrtps')
     assert DockerConfig(
-        arch, os, rosdistro, sysroot_base_image,
+        platform, override_base_image,
         docker_network_mode, sysroot_nocache).base_image == image_name
 
 
