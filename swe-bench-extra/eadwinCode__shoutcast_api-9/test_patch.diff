diff --git a/tests/test_base.py b/tests/test_base.py
new file mode 100644
index 0000000..0ac0ed9
--- /dev/null
+++ b/tests/test_base.py
@@ -0,0 +1,14 @@
+
+from unittest import TestCase
+
+
+class BaseTestCase(TestCase):
+    def setUp(self):
+        try:
+            import requests_cache
+            import datetime
+
+            expire_after = datetime.timedelta(days=3)
+            self.session = requests_cache.CachedSession(cache_name='cache', backend='sqlite', expire_after=expire_after)
+        except ImportError:
+            self.session = None
diff --git a/tests/test_genres.py b/tests/test_genres.py
index 267a8fa..c04d902 100755
--- a/tests/test_genres.py
+++ b/tests/test_genres.py
@@ -1,5 +1,5 @@
 import os
-from unittest import TestCase
+from .test_base import BaseTestCase
 from shoutcast_api.genres import (
  get_all_genres, get_primary_genres_json, get_genres_details_by_id,
  get_genres_by_sub_genres, GenreList, Genre, get_secondary_genres_json
@@ -8,31 +8,31 @@ from shoutcast_api.genres import (
 api_key = os.getenv('SHOUTCAST_API_KEY')
 
 
-class TestGenre(TestCase):
+class TestGenre(BaseTestCase):
     def test_get_all_genres(self):
-        response = get_all_genres(api_key)
+        response = get_all_genres(api_key, session=self.session)
         self.assertIsInstance(response, GenreList)
 
     def test_get_primary_genres_json(self):
-        response = get_primary_genres_json(api_key)
+        response = get_primary_genres_json(api_key, session=self.session)
         self.assertIsInstance(response, GenreList)
 
     def test_get_genres_details_by_id(self):
-        response = get_genres_details_by_id(api_key, genre_id=25)
+        response = get_genres_details_by_id(api_key, genre_id=25, session=self.session)
         self.assertIsInstance(response, Genre)
         self.assertEqual(response.id, 25)
 
     def test_get_genres_by_sub_genres_haschildren_false_return_genre_with_haschildren_false(self):
-        response = get_genres_by_sub_genres(api_key, haschildren=False)
+        response = get_genres_by_sub_genres(api_key, haschildren=False, session=self.session)
         self.assertIsInstance(response, GenreList)
         self.assertEqual(response.genres[0].haschildren, False)
 
     def test_get_genres_by_sub_genres_haschildren_true_return_genre_with_haschildren_true(self):
-        response = get_genres_by_sub_genres(api_key, haschildren=True)
+        response = get_genres_by_sub_genres(api_key, haschildren=True, session=self.session)
         self.assertIsInstance(response, GenreList)
         self.assertEqual(response.genres[0].haschildren, True)
 
     def test_get_secondary_genres_json(self):
-        response = get_secondary_genres_json(api_key, parentid=1)
+        response = get_secondary_genres_json(api_key, parentid=1, session=self.session)
         self.assertIsInstance(response, GenreList)
         self.assertEqual(response.genres[0].parentid, 1)
diff --git a/tests/test_stations.py b/tests/test_stations.py
index cac0ebf..28a9339 100755
--- a/tests/test_stations.py
+++ b/tests/test_stations.py
@@ -1,5 +1,5 @@
 import os
-from unittest import TestCase
+from .test_base import BaseTestCase
 from shoutcast_api.stations import (
     StationList, get_random_station, get_stations_keywords, get_stations_by_genre,
     get_stations_bitrate_or_genre_id, get_stations_by_now_playing, get_top_500
@@ -8,35 +8,34 @@ from shoutcast_api.stations import (
 api_key = os.getenv('SHOUTCAST_API_KEY')
 
 
-class TestStations(TestCase):
+class TestStations(BaseTestCase):
 
     def test_get_top_500(self):
-        response = get_top_500(api_key, limit=5, br=128)
+        response = get_top_500(api_key, limit=5, br=128, session=self.session)
         self.assertIsInstance(response, StationList)
         self.assertEqual(response.station[0].br, 128)
 
     def test_get_stations_by_now_playing(self):
-        response = get_stations_by_now_playing(api_key, ct='john legend', limit=2)
+        response = get_stations_by_now_playing(api_key, ct='john legend', limit=2, session=self.session)
         self.assertIsInstance(response, StationList)
         if len(response.station) > 0:
             self.assertTrue('john legend' in response.station[0].ct.lower())
 
     def test_get_stations_bitrate_or_genre_id(self):
-        response = get_stations_bitrate_or_genre_id(api_key, br=128, genre_id=25, limit=2)
+        response = get_stations_bitrate_or_genre_id(api_key, br=128, genre_id=25, limit=2, session=self.session)
         self.assertIsInstance(response, StationList)
         self.assertEqual(response.station[0].br, 128)
 
     def test_get_stations_by_genre(self):
-        response = get_stations_by_genre(api_key, genre='hip hop', limit=2)
+        response = get_stations_by_genre(api_key, genre='hip hop', limit=2, session=self.session)
         self.assertIsInstance(response, StationList)
         self.assertTrue('hip hop' in response.station[0].genre.lower())
 
     def test_get_stations_keywords(self):
-        response = get_stations_keywords(api_key, search='Hot', br=128, limit=2)
+        response = get_stations_keywords(api_key, search='Hot', br=128, limit=2, session=self.session)
         self.assertIsInstance(response, StationList)
         self.assertEqual(response.station[0].br, 128)
 
     def test_get_random_station(self):
-        response = get_random_station(api_key, limit=2)
+        response = get_random_station(api_key, limit=2, session=self.session)
         self.assertIsInstance(response, StationList)
-
diff --git a/tests/test_tunein.py b/tests/test_tunein.py
index b56952c..21b8654 100755
--- a/tests/test_tunein.py
+++ b/tests/test_tunein.py
@@ -1,18 +1,18 @@
-from unittest import TestCase
+from .test_base import BaseTestCase
 from shoutcast_api.tunein import (
     Track, TrackList, get_stations_stream_url, tunein_to_station
 )
 from shoutcast_api.shoutcast_request import tuneins
 
 
-class TestTunein(TestCase):
+class TestTunein(BaseTestCase):
     def test_get_stations_stream_url(self):
-        response = get_stations_stream_url(station_id=99311623)
+        response = get_stations_stream_url(station_id=99311623, session=self.session)
         self.assertIsInstance(response, TrackList)
         if len(response.tracks) > 0:
             track = response.tracks[0]
             self.assertIsInstance(track, Track)
 
     def test_tunein_to_station(self):
-        response = tunein_to_station(base=tuneins[0], station_id=99466001)
+        response = tunein_to_station(base=tuneins[0], station_id=99466001, session=self.session)
         self.assertIsInstance(response, str)
