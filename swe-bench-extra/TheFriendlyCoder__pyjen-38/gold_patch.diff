diff --git a/.gitignore b/.gitignore
index a5cda0c..a4dd3e7 100644
--- a/.gitignore
+++ b/.gitignore
@@ -100,4 +100,5 @@ logs/
 py?/
 
 .idea
-.vscode
\ No newline at end of file
+.vscode
+container_id.txt
\ No newline at end of file
diff --git a/src/pyjen/jenkins.py b/src/pyjen/jenkins.py
index 1be4364..435f20b 100644
--- a/src/pyjen/jenkins.py
+++ b/src/pyjen/jenkins.py
@@ -86,22 +86,19 @@ class Jenkins(JenkinsAPI):
         :rtype: :class:`bool`
         """
         try:
-            version = self.version
+            if self.jenkins_headers:
+                return True
+            return False
         except RequestException as err:
             self._log.error("Jenkins connection failed: %s.", err)
             return False
 
-        if version is None or version == "" or version == "Unknown":
-            self._log.error("Invalid Jenkins version detected: '%s'", version)
-            return False
-        return True
-
     @property
     def version(self):
         """Gets the version of Jenkins pointed to by this object
 
         :return: Version number of the currently running Jenkins instance
-        :rtype: :class:`str`
+        :rtype: :class:`tuple`
         """
         return self.jenkins_version
 
@@ -334,7 +331,7 @@ class Jenkins(JenkinsAPI):
             return None
 
     @property
-    def plugin_manager(self):  # pragma: no cover
+    def plugin_manager(self):
         """object which manages the plugins installed on this Jenkins
 
         :returns:
diff --git a/tox.ini b/tox.ini
index e920431..b2ec0c0 100644
--- a/tox.ini
+++ b/tox.ini
@@ -9,8 +9,9 @@ whitelist_externals =
     bash
 commands =
     rm -rf dist
+    rm -rf build
     python setup.py bdist_wheel
-    /bin/bash -c 'pip install dist/*.whl'
+    /bin/bash -c 'pip install -U dist/*.whl'
     pylint setup.py
     - bash -c "source toxenv.sh; pylint ./src/$PROJECT_NAME"
     bash -c "source toxenv.sh; pytest {posargs} ./tests -v --cov-report html --cov $PROJECT_NAME --no-cov-on-fail"
@@ -33,4 +34,26 @@ whitelist_externals =
     bash
 commands =
     bash -c "source toxenv.sh; sphinx-apidoc -f -e -o ./docs/ src/$PROJECT_NAME"
-    python setup.py build_sphinx
\ No newline at end of file
+    python setup.py build_sphinx
+
+[testenv:py3-tests]
+deps = -rtests/python3.reqs
+whitelist_externals =
+    rm
+    bash
+commands =
+    rm -rf dist
+    rm -rf build
+    python setup.py bdist_wheel
+    /bin/bash -c 'pip install -U dist/*.whl'
+    bash -c "source toxenv.sh; pytest {posargs} ./tests -v --cov-report html --cov $PROJECT_NAME --no-cov-on-fail"
+
+
+[testenv:py3-lint]
+deps = -rtests/python3.reqs
+whitelist_externals =
+    bash
+commands =
+    pylint setup.py
+    bash -c "source toxenv.sh; pylint ./src/$PROJECT_NAME"
+
