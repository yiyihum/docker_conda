diff --git a/CHANGELOG b/CHANGELOG
index 0929e08..b5b78f9 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -44,6 +44,7 @@ Fixes:
 * csvgrep can match multiline values.
 * csvgrep correctly operates on ragged rows.
 * csvsql correctly escapes `%` characters in SQL queries.
+* csvsql adds standard input only if explicitly requested.
 * csvstack supports stacking a single file.
 * csvstat always reports frequencies.
 * FilteringCSVReader's any_match argument works correctly.
diff --git a/csvkit/utilities/csvsql.py b/csvkit/utilities/csvsql.py
index 98c5e84..1da023e 100644
--- a/csvkit/utilities/csvsql.py
+++ b/csvkit/utilities/csvsql.py
@@ -11,7 +11,7 @@ from csvkit.cli import CSVKitUtility
 
 
 class CSVSQL(CSVKitUtility):
-    description = 'Generate SQL statements for one or more CSV files, create execute those statements directly on a database, and execute one or more SQL queries.'
+    description = 'Generate SQL statements for one or more CSV files, or execute those statements directly on a database, and execute one or more SQL queries.'
     override_flags = ['l', 'f']
 
     def add_arguments(self):
@@ -56,14 +56,6 @@ class CSVSQL(CSVKitUtility):
         else:
             table_names = []
 
-        # If one or more filenames are specified, we need to add stdin ourselves (if available)
-        if sys.stdin not in self.input_files:
-            try:
-                if not sys.stdin.isatty():
-                    self.input_files.insert(0, sys.stdin)
-            except:
-                pass
-
         # Create an SQLite database in memory if no connection string is specified
         if query and not connection_string:
             connection_string = "sqlite:///:memory:"
diff --git a/docs/scripts/csvsql.rst b/docs/scripts/csvsql.rst
index 3a9b4b0..f2dd003 100644
--- a/docs/scripts/csvsql.rst
+++ b/docs/scripts/csvsql.rst
@@ -16,7 +16,7 @@ Generate SQL statements for a CSV file or execute those statements directly on a
                   [--blanks] [--no-inference] [--db-schema DB_SCHEMA]
                   [FILE [FILE ...]]
 
-    Generate SQL statements for one or more CSV files, create execute those
+    Generate SQL statements for one or more CSV files, or execute those
     statements directly on a database, and execute one or more SQL queries.
 
     positional arguments:
