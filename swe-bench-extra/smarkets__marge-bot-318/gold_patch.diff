diff --git a/marge/bot.py b/marge/bot.py
index 0996962..465e960 100644
--- a/marge/bot.py
+++ b/marge/bot.py
@@ -139,7 +139,7 @@ class Bot:
             [mr.web_url for mr in source_filtered_mrs]
         )
         source_filtered_out = set(filtered_mrs) - set(source_filtered_mrs)
-        if filtered_out:
+        if source_filtered_out:
             log.debug(
                 'MRs that do not match source_branch_regexp: %s',
                 [mr.web_url for mr in source_filtered_out]
diff --git a/marge/job.py b/marge/job.py
index 696aefa..9b33aae 100644
--- a/marge/job.py
+++ b/marge/job.py
@@ -55,6 +55,9 @@ class MergeJob:
                 '(have: {0.approver_usernames} missing: {0.approvals_left})'.format(approvals)
             )
 
+        if not merge_request.blocking_discussions_resolved:
+            raise CannotMerge("Sorry, I can't merge requests which have unresolved discussions!")
+
         state = merge_request.state
         if state not in ('opened', 'reopened', 'locked'):
             if state in ('merged', 'closed'):
diff --git a/marge/merge_request.py b/marge/merge_request.py
index 98a14eb..030b79b 100644
--- a/marge/merge_request.py
+++ b/marge/merge_request.py
@@ -151,6 +151,10 @@ class MergeRequest(gitlab.Resource):
     def web_url(self):
         return self.info['web_url']
 
+    @property
+    def blocking_discussions_resolved(self):
+        return self.info['blocking_discussions_resolved']
+
     @property
     def force_remove_source_branch(self):
         return self.info['force_remove_source_branch']
