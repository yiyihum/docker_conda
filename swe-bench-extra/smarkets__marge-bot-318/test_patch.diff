diff --git a/tests/gitlab_api_mock.py b/tests/gitlab_api_mock.py
index a682d52..012fb64 100644
--- a/tests/gitlab_api_mock.py
+++ b/tests/gitlab_api_mock.py
@@ -58,6 +58,7 @@ class MockLab:  # pylint: disable=too-few-public-methods
             'force_remove_source_branch': True,
             'target_branch': 'master',
             'work_in_progress': False,
+            'blocking_discussions_resolved': True,
             'web_url': 'http://git.example.com/group/project/merge_request/666',
         }
         if merge_request_options is not None:
diff --git a/tests/test_job.py b/tests/test_job.py
index 77f5961..4818b29 100644
--- a/tests/test_job.py
+++ b/tests/test_job.py
@@ -130,6 +130,20 @@ class TestJob:
 
         assert exc_info.value.reason == "Sorry, I can't merge requests marked as Work-In-Progress!"
 
+    def test_ensure_mergeable_mr_unresolved_discussion(self):
+        merge_job = self.get_merge_job()
+        merge_request = self._mock_merge_request(
+            assignee_ids=[merge_job._user.id],
+            state='opened',
+            work_in_progress=False,
+            blocking_discussions_resolved=False,
+        )
+        merge_request.fetch_approvals.return_value.sufficient = True
+        with pytest.raises(CannotMerge) as exc_info:
+            merge_job.ensure_mergeable_mr(merge_request)
+
+        assert exc_info.value.reason == "Sorry, I can't merge requests which have unresolved discussions!"
+
     def test_ensure_mergeable_mr_squash_and_trailers(self):
         merge_job = self.get_merge_job(options=MergeJobOptions.default(add_reviewers=True))
         merge_request = self._mock_merge_request(
