diff --git a/docs/json_schema.md b/docs/json_schema.md
index a66f287..7605a76 100644
--- a/docs/json_schema.md
+++ b/docs/json_schema.md
@@ -7,7 +7,7 @@ TypeSystem can convert Schema or Field instances to/from JSON Schema.
     All references should be of the style `{"$ref": "#/components/schemas/..."}`.
 
     Using hyperlinked references, relative references, or references to parts
-    of the document other than "definitions" is not supported.
+    of the document other than "components/schemas" is not supported.
 
 Let's define a schema, and dump it out into a JSON schema document:
 
diff --git a/docs/references.md b/docs/references.md
index 4f204de..d4d46db 100644
--- a/docs/references.md
+++ b/docs/references.md
@@ -53,42 +53,44 @@ definitions["Album"] = album_schema
 document = typesystem.to_json_schema(definitions)
 print(json.dumps(document, indent=4))
 # {
-#     "definitions": {
-#         "Artist": {
-#             "type": "object",
-#             "properties": {
-#                 "name": {
-#                     "type": "string",
-#                     "minLength": 1,
-#                     "maxLength": 100
-#                 }
-#             },
-#             "required": [
-#                 "name"
-#             ]
-#         },
-#         "Album": {
-#             "type": "object",
-#             "properties": {
-#                 "title": {
-#                     "type": "string",
-#                     "minLength": 1,
-#                     "maxLength": 100
-#                 },
-#                 "release_date": {
-#                     "type": "string",
-#                     "minLength": 1,
-#                     "format": "date"
+#     "components":{
+#         "schemas":{
+#             "Artist":{
+#                 "type":"object",
+#                 "properties":{
+#                     "name":{
+#                         "type":"string",
+#                         "minLength":1,
+#                         "maxLength":100
+#                     }
 #                 },
-#                 "artist": {
-#                     "$ref": "#/definitions/Artist"
-#                 }
+#                 "required":[
+#                     "name"
+#                 ]
 #             },
-#             "required": [
-#                 "title",
-#                 "release_date",
-#                 "artist"
-#             ]
+#             "Album":{
+#                 "type":"object",
+#                 "properties":{
+#                     "title":{
+#                         "type":"string",
+#                         "minLength":1,
+#                         "maxLength":100
+#                     },
+#                     "release_date":{
+#                         "type":"string",
+#                         "minLength":1,
+#                         "format":"date"
+#                     },
+#                     "artist":{
+#                         "$ref":"#/components/schemas/Artist"
+#                     }
+#                 },
+#                 "required":[
+#                     "title",
+#                     "release_date",
+#                     "artist"
+#                 ]
+#             }
 #         }
 #     }
 # }
diff --git a/typesystem/json_schema.py b/typesystem/json_schema.py
index bae941e..b03135e 100644
--- a/typesystem/json_schema.py
+++ b/typesystem/json_schema.py
@@ -115,7 +115,7 @@ def from_json_schema(
 
     if definitions is None:
         definitions = Definitions()
-        for key, value in data.get("definitions", {}).items():
+        for key, value in data.get("components", {}).get("schemas", {}).items():
             ref = f"#/components/schemas/{key}"
             definitions[ref] = from_json_schema(value, definitions=definitions)
 
@@ -571,7 +571,8 @@ def to_json_schema(
         raise ValueError(f"Cannot convert field type {name!r} to JSON Schema")
 
     if is_root and definitions:
-        data["definitions"] = definitions
+        data["components"] = {}
+        data["components"]["schemas"] = definitions
     return data
 
 
