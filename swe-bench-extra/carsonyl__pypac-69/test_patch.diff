diff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml
index 33a715d..adcdb6a 100644
--- a/.github/workflows/tests.yml
+++ b/.github/workflows/tests.yml
@@ -12,7 +12,7 @@ jobs:
     strategy:
       matrix:
         os: [ubuntu-latest, macos-latest, windows-latest]
-        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.9, '3.10', 3.11]
+        python-version: [2.7, 3.7, 3.8, 3.9, '3.10', 3.11]
 
     steps:
     - uses: actions/checkout@v3
@@ -20,6 +20,10 @@ jobs:
       uses: actions/setup-python@v4
       with:
         python-version: ${{ matrix.python-version }}
+    - name: Install dukpy for Windows Python 2.7
+      if: matrix.os == 'windows-latest' && matrix.python-version == '2.7'
+      # Pin to final release that still published Python 2.7 binary wheels
+      run: pip install dukpy==0.2.3
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip setuptools
diff --git a/tests/test_parser_functions.py b/tests/test_parser_functions.py
index a5b0388..d476958 100644
--- a/tests/test_parser_functions.py
+++ b/tests/test_parser_functions.py
@@ -1,25 +1,26 @@
-import pytest
 from datetime import datetime
 
+import pytest
+
 try:
     from unittest.mock import patch
 except ImportError:
-    from mock import patch
+    from mock import patch  # noqa
 
 from pypac.parser_functions import (
+    alert,
+    dateRange,
     dnsDomainIs,
-    isResolvable,
-    isInNet,
-    dnsResolve,
     dnsDomainLevels,
-    weekdayRange,
-    myIpAddress,
+    dnsResolve,
+    isInNet,
     isPlainHostName,
+    isResolvable,
+    localHostOrDomainIs,
+    myIpAddress,
     shExpMatch,
     timeRange,
-    localHostOrDomainIs,
-    dateRange,
-    alert,
+    weekdayRange,
 )
 
 
@@ -55,6 +56,7 @@ def test_isResolvable(host, expected_value):
         ("192.168.1.100", "192.168.2.0", "255.255.255.0", False),
         ("google.com", "0.0.0.0", "0.0.0.0", True),
         ("google.com", "google.com", "foo", False),
+        (False, False, False, False),
     ],
 )
 def test_isInNet(host, pattern, mask, expected_value):
