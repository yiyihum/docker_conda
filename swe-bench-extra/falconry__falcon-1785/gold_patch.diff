diff --git a/docs/_newsfragments/1717.newandimproved.rst b/docs/_newsfragments/1717.newandimproved.rst
new file mode 100644
index 0000000..eec51fa
--- /dev/null
+++ b/docs/_newsfragments/1717.newandimproved.rst
@@ -0,0 +1,5 @@
+:class:`Default media handlers <falcon.media.Handlers>` were simplified by
+removing a separate handler for the now-obsolete
+``application/json; charset=UTF-8``.
+As a result, providing a custom JSON media handler will now unambiguously cover
+both ``application/json`` and the former ``Content-type``.
diff --git a/falcon/media/handlers.py b/falcon/media/handlers.py
index 1ce1c25..ba15989 100644
--- a/falcon/media/handlers.py
+++ b/falcon/media/handlers.py
@@ -1,7 +1,7 @@
 from collections import UserDict
 
 from falcon import errors
-from falcon.constants import MEDIA_MULTIPART, MEDIA_URLENCODED
+from falcon.constants import MEDIA_JSON, MEDIA_MULTIPART, MEDIA_URLENCODED
 from falcon.media.json import JSONHandler
 from falcon.media.multipart import MultipartFormHandler, MultipartParseOptions
 from falcon.media.urlencoded import URLEncodedFormHandler
@@ -12,8 +12,7 @@ class Handlers(UserDict):
     """A :class:`dict`-like object that manages Internet media type handlers."""
     def __init__(self, initial=None):
         handlers = initial or {
-            'application/json': JSONHandler(),
-            'application/json; charset=UTF-8': JSONHandler(),
+            MEDIA_JSON: JSONHandler(),
             MEDIA_MULTIPART: MultipartFormHandler(),
             MEDIA_URLENCODED: URLEncodedFormHandler(),
         }
@@ -60,7 +59,6 @@ class Handlers(UserDict):
 
 # NOTE(vytas): An ugly way to work around circular imports.
 MultipartParseOptions._DEFAULT_HANDLERS = Handlers({
-    'application/json': JSONHandler(),
-    'application/json; charset=UTF-8': JSONHandler(),
+    MEDIA_JSON: JSONHandler(),
     MEDIA_URLENCODED: URLEncodedFormHandler(),
 })  # type: ignore
