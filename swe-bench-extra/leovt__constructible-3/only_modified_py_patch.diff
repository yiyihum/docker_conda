diff --git a/constructible.py b/constructible.py
index 31b4188..1269854 100644
--- a/constructible.py
+++ b/constructible.py
@@ -178,6 +178,9 @@ class Constructible(object):
                                  self.a * other.b + self.b * other.a,
                                  self.field)
 
+        a, b = self.join(other)
+        return a * b
+
     def __truediv__(self, other):
         if not isinstance(other, Constructible):
             if isinstance(other, Rational):
@@ -239,18 +242,26 @@ class Constructible(object):
         if isinstance(other, Constructible) or isinstance(other, Rational):
             return (self -other)._sign() < 0
 
+        return NotImplemented
+
     def __gt__(self, other):
         if isinstance(other, Constructible) or isinstance(other, Rational):
             return (self -other)._sign() > 0
 
+        return NotImplemented
+
     def __le__(self, other):
         if isinstance(other, Constructible) or isinstance(other, Rational):
             return (self -other)._sign() <= 0
 
+        return NotImplemented
+
     def __ge__(self, other):
         if isinstance(other, Constructible) or isinstance(other, Rational):
             return (self -other)._sign() >= 0
 
+        return NotImplemented
+
     def join(self, other):
         '''return a tuple (new_self, new_other) such that
         new_self == self, new_other == other, and new_self.field == new_other.field '''

