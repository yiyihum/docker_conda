diff --git a/altair/utils/tests/test_core.py b/altair/utils/tests/test_core.py
index 904f39be..b2b597f1 100644
--- a/altair/utils/tests/test_core.py
+++ b/altair/utils/tests/test_core.py
@@ -5,7 +5,7 @@ import json
 import numpy as np
 import pandas as pd
 
-from .. import parse_shorthand, parse_shorthand_plus_data
+from .. import parse_shorthand, parse_shorthand_plus_data, update_nested
 
 
 def test_parse_shorthand():
@@ -57,3 +57,16 @@ def test_parse_shorthand_plus_data():
     check('z', data, field='z', type='temporal')
     check('count(x)', data, field='x', aggregate='count', type='quantitative')
     check('mean(*)', data, field='*', aggregate='mean')
+
+
+def test_update_nested():
+    original = {'x': {'b': {'foo': 2}, 'c': 4}}
+    update = {'x': {'b': {'foo': 5}, 'd': 6}, 'y': 40}
+
+    output = update_nested(original, update, copy=True)
+    assert output is not original
+    assert output == {'x': {'b': {'foo': 5}, 'c': 4, 'd': 6}, 'y': 40}
+
+    output2 = update_nested(original, update)
+    assert output2 is original
+    assert output == output2
diff --git a/altair/vegalite/tests/test_common.py b/altair/vegalite/tests/test_common.py
index 4034c62d..9ecc237b 100644
--- a/altair/vegalite/tests/test_common.py
+++ b/altair/vegalite/tests/test_common.py
@@ -4,23 +4,35 @@ import pytest
 
 from .. import v1, v2
 
-
-@pytest.fixture
-def basic_spec():
-    return {
-        'data': {'url': 'data.csv'},
-        'mark': 'line',
-        'encoding': {
-            'color': {'type': 'nominal', 'field': 'color'},
-            'x': {'type': 'quantitative', 'field': 'xval'},
-            'y': {'type': 'ordinal', 'field': 'yval'}
-        },
-        'height': 300,
-        'width': 400
+v1_defaults = {
+    'width': 400,
+    'height': 300
+}
+
+v2_defaults = {
+    'config': {
+        'view':{
+            'height':300,
+            'width':400
+        }
     }
+}
+
+basic_spec = {
+    'data': {'url': 'data.csv'},
+    'mark': 'line',
+    'encoding': {
+        'color': {'type': 'nominal', 'field': 'color'},
+        'x': {'type': 'quantitative', 'field': 'xval'},
+        'y': {'type': 'ordinal', 'field': 'yval'}
+    },
+}
+
+spec_v1 = dict(v1_defaults, **basic_spec)
+spec_v2 = dict(v2_defaults, **basic_spec)
 
 
-@pytest.mark.parametrize('alt', [v1, v2])
+@pytest.mark.parametrize('alt,basic_spec', [(v1, spec_v1), (v2, spec_v2)])
 def test_basic_chart_to_dict(alt, basic_spec):
     chart = alt.Chart('data.csv').mark_line().encode(
         alt.X('xval:Q'),
@@ -36,7 +48,7 @@ def test_basic_chart_to_dict(alt, basic_spec):
     assert dct == basic_spec
 
 
-@pytest.mark.parametrize('alt', [v1, v2])
+@pytest.mark.parametrize('alt,basic_spec', [(v1, spec_v1), (v2, spec_v2)])
 def test_basic_chart_from_dict(alt, basic_spec):
     chart = alt.Chart.from_dict(basic_spec)
     dct = chart.to_dict()
