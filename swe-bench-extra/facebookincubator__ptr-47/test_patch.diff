diff --git a/ptr_tests.py b/ptr_tests.py
index 884dfcd..39afaeb 100644
--- a/ptr_tests.py
+++ b/ptr_tests.py
@@ -130,7 +130,7 @@ class TestPtr(unittest.TestCase):
     @patch("ptr.run_tests", async_none)
     @patch("ptr._get_test_modules")
     def test_async_main(self, mock_gtm: Mock) -> None:
-        args = [1, Path("/"), "mirror", 1, "venv", True, True, False, "stats", 30]
+        args = [1, Path("/"), "mirror", 1, "venv", True, True, True, False, "stats", 30]
         mock_gtm.return_value = False
         self.assertEqual(
             self.loop.run_until_complete(ptr.async_main(*args)), 1  # pyre-ignore
@@ -283,7 +283,7 @@ class TestPtr(unittest.TestCase):
     def test_get_test_modules(self) -> None:
         base_path = Path(__file__).parent
         stats = defaultdict(int)  # type: Dict[str, int]
-        test_modules = ptr._get_test_modules(base_path, stats)
+        test_modules = ptr._get_test_modules(base_path, stats, True)
         self.assertEqual(
             test_modules[base_path / "setup.py"],
             ptr_tests_fixtures.EXPECTED_TEST_PARAMS,
diff --git a/ptr_tests_fixtures.py b/ptr_tests_fixtures.py
index 884d438..d278888 100644
--- a/ptr_tests_fixtures.py
+++ b/ptr_tests_fixtures.py
@@ -23,7 +23,9 @@ class FakeEventLoop:
         return 0
 
 
+# Disabled is set as we --run-disabled the run in CI
 EXPECTED_TEST_PARAMS = {
+    "disabled": True,
     "entry_point_module": "ptr",
     "test_suite": "ptr_tests",
     "test_suite_timeout": 120,
@@ -187,8 +189,10 @@ setup(
 )
 """
 
+# Disabled is set as we --run-disabled the run in CI
 SAMPLE_SETUP_CFG = """\
 [ptr]
+disabled = true
 entry_point_module = ptr
 test_suite = ptr_tests
 test_suite_timeout = 120
