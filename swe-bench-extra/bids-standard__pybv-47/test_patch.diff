diff --git a/.github/workflows/python_tests.yml b/.github/workflows/python_tests.yml
index b81e8d7..bb8ef4a 100644
--- a/.github/workflows/python_tests.yml
+++ b/.github/workflows/python_tests.yml
@@ -5,6 +5,12 @@ on:
     branches: [ master ]
   pull_request:
     branches: [ master ]
+  create:
+    branches: [master]
+    tags: ['**']
+  schedule:
+    - cron: "0 4 1 * *"
+
 
 jobs:
   build:
@@ -14,6 +20,10 @@ jobs:
         platform: [ubuntu-18.04, ubuntu-latest, macos-latest, windows-latest]
         python-version: [3.8]
 
+    env:
+      TZ: Europe/Berlin
+      FORCE_COLOR: true
+
     runs-on: ${{ matrix.platform }}
 
     steps:
@@ -36,6 +46,14 @@ jobs:
       run: |
         pip install -U https://api.github.com/repos/mne-tools/mne-python/zipball/master
 
+    - name: Display versions and environment information
+      run: |
+        echo $TZ
+        date
+        python --version
+        which python
+        mne sys_info
+
     - name: Check formatting
       if: "matrix.platform == 'ubuntu-18.04'"
       run: |
diff --git a/pybv/tests/test_bv_writer.py b/pybv/tests/test_bv_writer.py
index c055396..846029d 100644
--- a/pybv/tests/test_bv_writer.py
+++ b/pybv/tests/test_bv_writer.py
@@ -123,10 +123,19 @@ def test_write_read_cycle(meas_date):
     # check that we create a folder that does not yet exist
     tmpdir = op.join(tmpdir, 'newfolder')
 
+    # First fail writing due to wrong unit
+    unsupported_unit = "rV"
+    with pytest.raises(ValueError, match='Encountered unsupported unit'):
+        write_brainvision(data, sfreq, ch_names, fname, tmpdir,
+                          unit=unsupported_unit)
+
     # write and read data to BV format
-    write_brainvision(data, sfreq, ch_names, fname, tmpdir, events=events,
-                      resolution=np.power(10., -np.arange(10)),
-                      meas_date=meas_date)
+    # ensure that greek small letter mu gets converted to micro sign
+    with pytest.warns(UserWarning, match="Encountered small greek letter mu"):
+        write_brainvision(data, sfreq, ch_names, fname, tmpdir, events=events,
+                          resolution=np.power(10., -np.arange(10)),
+                          unit='Î¼V',
+                          meas_date=meas_date)
     vhdr_fname = op.join(tmpdir, fname + '.vhdr')
     raw_written = mne.io.read_raw_brainvision(vhdr_fname, preload=True)
     # delete the first annotation because it's just marking a new segment
