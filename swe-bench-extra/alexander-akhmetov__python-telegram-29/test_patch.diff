diff --git a/tests/test_tdjson.py b/tests/test_tdjson.py
index bb20ee8..fbc4c17 100644
--- a/tests/test_tdjson.py
+++ b/tests/test_tdjson.py
@@ -7,13 +7,13 @@ class Test_get_tdjson_lib_path(object):
         mocked_resource = mocker.Mock()
 
         with mocker.mock_module.patch('telegram.tdjson.platform.system', mocked_system):
-            with mocker.mock_module.patch('telegram.tdjson.pkg_resources.resource_filename',
-                                          mocked_resource):
+            with mocker.mock_module.patch(
+                'telegram.tdjson.pkg_resources.resource_filename', mocked_resource
+            ):
                 _get_tdjson_lib_path()
 
         mocked_resource.assert_called_once_with(
-            'telegram',
-            'lib/darwin/libtdjson.dylib',
+            'telegram', 'lib/darwin/libtdjson.dylib'
         )
 
     def test_for_linux(self, mocker):
@@ -21,39 +21,33 @@ class Test_get_tdjson_lib_path(object):
         mocked_resource = mocker.Mock(return_value='/tmp/')
 
         with mocker.mock_module.patch('telegram.tdjson.platform.system', mocked_system):
-            with mocker.mock_module.patch('telegram.tdjson.pkg_resources.resource_filename',
-                                          mocked_resource):
+            with mocker.mock_module.patch(
+                'telegram.tdjson.pkg_resources.resource_filename', mocked_resource
+            ):
                 _get_tdjson_lib_path()
 
-        mocked_resource.assert_called_once_with(
-            'telegram',
-            'lib/linux/libtdjson.so',
-        )
+        mocked_resource.assert_called_once_with('telegram', 'lib/linux/libtdjson.so')
 
     def test_for_windows(self, mocker):
         mocked_system = mocker.Mock(return_value='Windows')
         mocked_resource = mocker.Mock(return_value='/tmp/')
 
         with mocker.mock_module.patch('telegram.tdjson.platform.system', mocked_system):
-            with mocker.mock_module.patch('telegram.tdjson.pkg_resources.resource_filename',
-                                          mocked_resource):
+            with mocker.mock_module.patch(
+                'telegram.tdjson.pkg_resources.resource_filename', mocked_resource
+            ):
                 _get_tdjson_lib_path()
 
-        mocked_resource.assert_called_once_with(
-            'telegram',
-            'lib/linux/libtdjson.so',
-        )
+        mocked_resource.assert_called_once_with('telegram', 'lib/linux/libtdjson.so')
 
     def test_unknown(self, mocker):
         mocked_system = mocker.Mock(return_value='Unknown')
         mocked_resource = mocker.Mock(return_value='/tmp/')
 
         with mocker.mock_module.patch('telegram.tdjson.platform.system', mocked_system):
-            with mocker.mock_module.patch('telegram.tdjson.pkg_resources.resource_filename',
-                                          mocked_resource):
+            with mocker.mock_module.patch(
+                'telegram.tdjson.pkg_resources.resource_filename', mocked_resource
+            ):
                 _get_tdjson_lib_path()
 
-        mocked_resource.assert_called_once_with(
-            'telegram',
-            'lib/linux/libtdjson.so',
-        )
+        mocked_resource.assert_called_once_with('telegram', 'lib/linux/libtdjson.so')
diff --git a/tests/test_telegram_methods.py b/tests/test_telegram_methods.py
index bbd8d1b..ada7e9e 100644
--- a/tests/test_telegram_methods.py
+++ b/tests/test_telegram_methods.py
@@ -236,6 +236,7 @@ class TestTelegram:
 
     def test_set_initial_params(self, telegram):
         async_result = telegram._set_initial_params()
+        phone_md5 = '69560384b84c896952ef20352fbce705'
 
         exp_data = {
             '@type': 'setTdlibParameters',
@@ -247,9 +248,9 @@ class TestTelegram:
                 'system_version': 'unknown',
                 'application_version': VERSION,
                 'system_language_code': 'en',
-                'database_directory': f'/tmp/.tdlib_files/{PHONE}/database',
+                'database_directory': f'/tmp/.tdlib_files/{phone_md5}/database',
                 'use_message_database': True,
-                'files_directory': f'/tmp/.tdlib_files/{PHONE}/files',
+                'files_directory': f'/tmp/.tdlib_files/{phone_md5}/files',
             },
             '@extra': {'request_id': 'updateAuthorizationState'},
         }
@@ -296,29 +297,35 @@ class TestTelegram__login:
     def test_login_process_with_phone(self, telegram):
         telegram._authorized = False
 
-        def _get_ar(data):
-            ar = AsyncResult(client=telegram)
+        def _get_async_result(data, request_id=None):
+            result = AsyncResult(client=telegram)
 
-            ar.update = data
+            result.update = data
+            result.id = request_id
 
-            return ar
+            return result
 
         # login process chain
-        telegram._set_initial_params = lambda: _get_ar(
+        telegram.get_authorization_state = lambda: _get_async_result(
+            data={'@type': 'authorizationStateWaitEncryptionKey'},
+            request_id='getAuthorizationState',
+        )
+
+        telegram._set_initial_params = lambda: _get_async_result(
             data={
                 'authorization_state': {'@type': 'authorizationStateWaitEncryptionKey'}
             }
         )
-        telegram._send_encryption_key = lambda: _get_ar(
+        telegram._send_encryption_key = lambda: _get_async_result(
             data={'authorization_state': {'@type': 'authorizationStateWaitPhoneNumber'}}
         )
-        telegram._send_phone_number_or_bot_token = lambda: _get_ar(
+        telegram._send_phone_number_or_bot_token = lambda: _get_async_result(
             data={'authorization_state': {'@type': 'authorizationStateWaitCode'}}
         )
-        telegram._send_telegram_code = lambda: _get_ar(
+        telegram._send_telegram_code = lambda: _get_async_result(
             data={'authorization_state': {'@type': 'authorizationStateWaitPassword'}}
         )
-        telegram._send_password = lambda: _get_ar(
+        telegram._send_password = lambda: _get_async_result(
             data={'authorization_state': {'@type': 'authorizationStateReady'}}
         )
 
diff --git a/tests/test_utils.py b/tests/test_utils.py
index 8ef8e2c..51ea333 100644
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -21,10 +21,7 @@ class TestAsyncResult(object):
 
     def test_parse_update_with_error(self):
         ar = AsyncResult(client=None)
-        update = {
-            '@type': 'error',
-            'some': 'data',
-        }
+        update = {'@type': 'error', 'some': 'data'}
 
         assert ar.error is False
         assert ar.error_info is None
@@ -38,10 +35,7 @@ class TestAsyncResult(object):
 
     def test_parse_update_ok(self):
         ar = AsyncResult(client=None)
-        update = {
-            '@type': 'ok',
-            'some': 'data',
-        }
+        update = {'@type': 'ok', 'some': 'data'}
 
         ar.parse_update(update)
 
@@ -52,10 +46,7 @@ class TestAsyncResult(object):
 
     def test_parse_update(self):
         ar = AsyncResult(client=None)
-        update = {
-            '@type': 'some_type',
-            'some': 'data',
-        }
+        update = {'@type': 'some_type', 'some': 'data'}
 
         ar.parse_update(update)
 
