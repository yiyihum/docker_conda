diff --git a/test/countries/__init__.py b/test/countries/__init__.py
index d0d28686..321e65f1 100644
--- a/test/countries/__init__.py
+++ b/test/countries/__init__.py
@@ -82,4 +82,5 @@ from .test_ukraine import *
 from .test_united_arab_emirates import *
 from .test_united_kingdom import *
 from .test_united_states import *
+from .test_venezuela import *
 from .test_vietnam import *
diff --git a/test/countries/test_spain.py b/test/countries/test_spain.py
index 7e8baaa5..6108ad57 100644
--- a/test/countries/test_spain.py
+++ b/test/countries/test_spain.py
@@ -19,7 +19,7 @@ from datetime import date
 import holidays
 
 
-class TestES(unittest.TestCase):
+class TestSpain(unittest.TestCase):
     def setUp(self):
         self.holidays = holidays.ES(observed=False)
         self.holidays_observed = holidays.ES()
@@ -63,9 +63,7 @@ class TestES(unittest.TestCase):
             self.assertEqual(
                 date(2016, 3, 24) in prov_holidays, prov not in ["CT", "VC"]
             )
-            self.assertEqual(
-                date(2016, 3, 25) in prov_holidays, prov not in ["CT", "VC"]
-            )
+            assert date(2016, 3, 25) in prov_holidays
             self.assertEqual(
                 date(2016, 3, 28) in prov_holidays,
                 prov in ["CT", "PV", "NC", "VC", "IB", "CM"],
diff --git a/test/countries/test_united_states.py b/test/countries/test_united_states.py
index 4fb4fbf2..1e1a344f 100644
--- a/test/countries/test_united_states.py
+++ b/test/countries/test_united_states.py
@@ -667,9 +667,15 @@ class TestUS(unittest.TestCase):
     def test_emancipation_day_in_texas(self):
         tx_holidays = holidays.US(state="TX")
         self.assertNotIn(date(1979, 6, 19), tx_holidays)
-        for year in (1980, 2050):
+        for year in (1980, 2020):
             self.assertNotIn(date(year, 6, 19), self.holidays)
             self.assertIn(date(year, 6, 19), tx_holidays)
+        for year in (2021, 2050):
+            self.assertIn(date(year, 6, 19), tx_holidays)
+
+    def test_juneteenth(self):
+        self.assertNotIn(date(2020, 6, 19), self.holidays)
+        self.assertIn(date(2021, 6, 19), self.holidays)
 
     def test_west_virginia_day(self):
         wv_holidays = holidays.US(state="WV")
diff --git a/test/countries/test_venezuela.py b/test/countries/test_venezuela.py
new file mode 100644
index 00000000..c7ab4631
--- /dev/null
+++ b/test/countries/test_venezuela.py
@@ -0,0 +1,68 @@
+# -*- coding: utf-8 -*-
+#  python-holidays
+#  ---------------
+#  A fast, efficient Python library for generating country, province and state
+#  specific sets of holidays on the fly. It aims to make determining whether a
+#  specific date is a holiday as fast and flexible as possible.
+#
+#  Author:  ryanss <ryanssdev@icloud.com> (c) 2014-2017
+#           dr-prodigy <maurizio.montel@gmail.com> (c) 2017-2021
+#  Website: https://github.com/dr-prodigy/python-holidays
+#  License: MIT (see LICENSE file)
+
+import unittest
+
+from datetime import date
+
+import holidays
+
+
+class TestVenezuela(unittest.TestCase):
+    def test_YV_holidays(self):
+        self.holidays = holidays.YV(years=2019)
+        self.assertIn("2019-01-01", self.holidays)
+        self.assertEqual(
+            self.holidays[date(2019, 1, 1)], "Año Nuevo [New Year's Day]"
+        )
+        self.assertIn("2019-03-04", self.holidays)
+        self.assertEqual(
+            self.holidays[date(2019, 3, 4)],
+            "Lunes de Carnaval",
+        )
+        self.assertIn("2019-03-05", self.holidays)
+        self.assertEqual(self.holidays[date(2019, 3, 5)], "Martes de Carnaval")
+        self.assertIn("2019-04-18", self.holidays)
+        self.assertEqual(self.holidays[date(2019, 4, 18)], "Jueves Santo")
+        self.assertIn("2019-04-19", self.holidays)
+        self.assertEqual(
+            self.holidays[date(2019, 4, 19)],
+            "Viernes Santo y Declaración de la Independencia",
+        )
+        self.assertIn("2019-05-01", self.holidays)
+        self.assertEqual(
+            self.holidays[date(2019, 5, 1)], "Dia Mundial del Trabajador"
+        )
+        self.assertIn("2019-06-24", self.holidays)
+        self.assertEqual(
+            self.holidays[date(2019, 6, 24)], "Batalla de Carabobo"
+        )
+        self.assertIn("2019-05-01", self.holidays)
+        self.assertEqual(
+            self.holidays[date(2019, 7, 5)], "Dia de la Independencia"
+        )
+        self.assertIn("2019-07-24", self.holidays)
+        self.assertEqual(
+            self.holidays[date(2019, 7, 24)], "Natalicio de Simón Bolívar"
+        )
+        self.assertIn("2019-10-12", self.holidays)
+        self.assertEqual(
+            self.holidays[date(2019, 10, 12)], "Día de la Resistencia Indígena"
+        )
+        self.assertIn("2019-12-24", self.holidays)
+        self.assertEqual(self.holidays[date(2019, 12, 24)], "Nochebuena")
+        self.assertIn("2019-12-25", self.holidays)
+        self.assertEqual(self.holidays[date(2019, 12, 25)], "Día de Navidad")
+        self.assertIn("2019-12-31", self.holidays)
+        self.assertEqual(
+            self.holidays[date(2019, 12, 31)], "Fiesta de Fin de Año"
+        )
