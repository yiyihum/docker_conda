diff --git a/logzio/handler.py b/logzio/handler.py
index 9fca847..e0a4b45 100644
--- a/logzio/handler.py
+++ b/logzio/handler.py
@@ -98,13 +98,15 @@ class LogzioHandler(logging.Handler):
         if message.exc_info:
             return_json['exception'] = self.format_exception(message.exc_info)
 
-            # # We want to ignore default logging formatting on exceptions
-            # # As we handle those differently directly into exception field
+        # # We want to ignore default logging formatting on exceptions
+        # # As we handle those differently directly into exception field
 
         formatted_message = self.format(message)
+        # Exception with multiple fields, apply them to log json.
         if isinstance(formatted_message, dict):
             return_json.update(formatted_message)
-        else:
+        # No exception, apply default formatted message
+        elif not message.exc_info:
             return_json['message'] = formatted_message
 
         return_json.update(self.extra_fields(message))
diff --git a/logzio/logger.py b/logzio/logger.py
index f120485..529efaa 100644
--- a/logzio/logger.py
+++ b/logzio/logger.py
@@ -7,7 +7,9 @@ def get_logger(debug):
 
 
 def get_stdout_logger(debug):
-    return __get_logger(debug, __name__ + '_stdout', logging.StreamHandler(sys.stdout))
+    stdout_logger = __get_logger(debug, __name__ + '_stdout', logging.StreamHandler(sys.stdout))
+    stdout_logger.propagate = False
+    return stdout_logger
 
 
 def __get_logger(debug, name, handler=None):
diff --git a/logzio/sender.py b/logzio/sender.py
index ca73b73..5a7d16c 100644
--- a/logzio/sender.py
+++ b/logzio/sender.py
@@ -40,7 +40,6 @@ class LogzioSender:
         self.token = token
         self.url = '{}/?token={}'.format(url, token)
         self.logs_drain_timeout = logs_drain_timeout
-        self.logger = get_logger(debug)
         self.stdout_logger = get_stdout_logger(debug)
         self.backup_logs = backup_logs
         self.network_timeout = network_timeout
@@ -57,7 +56,6 @@ class LogzioSender:
         self._initialize_sending_thread()
 
     def __del__(self):
-        del self.logger
         del self.stdout_logger
         del self.backup_logs
         del self.queue
@@ -93,7 +91,7 @@ class LogzioSender:
             try:
                 self._flush_queue()
             except Exception as e:
-                self.logger.debug(
+                self.stdout_logger.debug(
                     'Unexpected exception while draining queue to Logz.io, '
                     'swallowing. Exception: %s', e)
 
@@ -165,7 +163,7 @@ class LogzioSender:
                 self.stdout_logger.error(
                     'Could not send logs to Logz.io after %s tries, '
                     'backing up to local file system', self.number_of_retries)
-                backup_logs(logs_list, self.logger)
+                backup_logs(logs_list, self.stdout_logger)
 
             del logs_list
 
diff --git a/setup.py b/setup.py
index fe0e999..0b6d2e1 100644
--- a/setup.py
+++ b/setup.py
@@ -3,7 +3,7 @@
 from setuptools import setup, find_packages
 setup(
     name="logzio-python-handler",
-    version='3.1.0',
+    version='3.1.1',
     description="Logging handler to send logs to your Logz.io account with bulk SSL",
     keywords="logging handler logz.io bulk https",
     author="roiravhon",
