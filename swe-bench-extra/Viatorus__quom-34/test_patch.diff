diff --git a/tests/test_quom/test_normal.py b/tests/test_quom/test_normal.py
index f0928dd..38d53f0 100644
--- a/tests/test_quom/test_normal.py
+++ b/tests/test_quom/test_normal.py
@@ -4,6 +4,7 @@ from pathlib import Path
 import pytest
 
 from quom import Quom, QuomError
+from quom.__main__ import main
 
 FILE_MAIN_HPP = """\
 #pragma once
@@ -247,3 +248,13 @@ def test_with_missing_source_file(fs):
     Quom(Path('main.hpp'), dst)
 
     assert dst.getvalue() == RESULT_NORMAL_WITHOUT_SOURCES
+
+
+def test_main(fs):
+    init()
+
+    main(['main.hpp', 'result.hpp'])
+    assert Path('result.hpp').read_text() == RESULT_NORMAL
+
+    main(['main.hpp', 'result.hpp', '-S', '.'])
+    assert Path('result.hpp').read_text() == RESULT_NORMAL
diff --git a/tests/test_quom/test_source_directory.py b/tests/test_quom/test_source_directory.py
new file mode 100644
index 0000000..790d417
--- /dev/null
+++ b/tests/test_quom/test_source_directory.py
@@ -0,0 +1,62 @@
+import os
+from io import StringIO
+from pathlib import Path
+
+from quom import Quom
+from quom.__main__ import main
+
+FILE_MAIN_HPP = """
+int foo = 3;
+
+int foo();
+"""
+
+FILE_MAIN_CPP = """
+int foo() { return 42; }
+"""
+
+RESULT = """
+int foo = 3;
+
+int foo();
+
+int foo() { return 42; }
+"""
+
+
+def test_source_directory(fs):
+    os.makedirs('project/')
+    os.chdir('project/')
+    os.makedirs('include/')
+    os.makedirs('src/')
+
+    with open('include/main.hpp', 'w+') as file:
+        file.write(FILE_MAIN_HPP)
+
+    with open('src/main.cpp', 'w+') as file:
+        file.write(FILE_MAIN_CPP)
+
+    dst = StringIO()
+    Quom(Path('include/main.hpp'), dst)
+    assert dst.getvalue() != RESULT
+
+    dst = StringIO()
+    Quom(Path('include/main.hpp'), dst, relative_source_directories=[Path('../src')])
+    assert dst.getvalue() == RESULT
+
+    dst = StringIO()
+    Quom(Path('include/main.hpp'), dst, source_directories=[Path('src').resolve()])
+    assert dst.getvalue() == RESULT
+
+    dst = StringIO()
+    Quom(Path('include/main.hpp'), dst, source_directories=[Path('/project/src')])
+    assert dst.getvalue() == RESULT
+
+    main(['include/main.hpp', 'result.hpp', '-S', './../src'])
+    assert Path('result.hpp').read_text() == RESULT
+
+    main(['include/main.hpp', 'result.hpp', '-S', 'src'])
+    assert Path('result.hpp').read_text() == RESULT
+
+    main(['include/main.hpp', 'result.hpp', '-S', '/project/src'])
+    assert Path('result.hpp').read_text() == RESULT
