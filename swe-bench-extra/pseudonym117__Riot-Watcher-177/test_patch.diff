diff --git a/tests/integration/league_of_legends/test_MatchApiV4.py b/tests/integration/league_of_legends/test_MatchApiV4.py
index e9cdcd5..4a2b02e 100644
--- a/tests/integration/league_of_legends/test_MatchApiV4.py
+++ b/tests/integration/league_of_legends/test_MatchApiV4.py
@@ -24,7 +24,7 @@ import pytest
 class TestMatchApiV4:
     @pytest.mark.parametrize("match_id", [12345, 54321, 2, 222222222222222222222])
     def test_by_id(self, lol_context, region, match_id):
-        actual_response = lol_context.watcher.match.by_id(region, match_id)
+        actual_response = lol_context.watcher.match_v4.by_id(region, match_id)
 
         lol_context.verify_api_call(
             region, f"/lol/match/v4/matches/{match_id}", {}, actual_response,
@@ -56,7 +56,7 @@ class TestMatchApiV4:
         begin_time, end_time = begin_end_time
         begin_index, end_index = begin_end_index
 
-        actual_response = lol_context.watcher.match.matchlist_by_account(
+        actual_response = lol_context.watcher.match_v4.matchlist_by_account(
             region,
             encrypted_account_id,
             queue=queue,
@@ -93,7 +93,9 @@ class TestMatchApiV4:
 
     @pytest.mark.parametrize("match_id", [0, 54321, 3232323232323223])
     def test_timeline_by_match(self, lol_context, region, match_id):
-        actual_response = lol_context.watcher.match.timeline_by_match(region, match_id)
+        actual_response = lol_context.watcher.match_v4.timeline_by_match(
+            region, match_id
+        )
 
         lol_context.verify_api_call(
             region, f"/lol/match/v4/timelines/by-match/{match_id}", {}, actual_response,
diff --git a/tests/integration/league_of_legends/test_MatchApiV5.py b/tests/integration/league_of_legends/test_MatchApiV5.py
index 952b614..4f6114c 100644
--- a/tests/integration/league_of_legends/test_MatchApiV5.py
+++ b/tests/integration/league_of_legends/test_MatchApiV5.py
@@ -4,17 +4,14 @@ import pytest
 @pytest.mark.lol
 @pytest.mark.integration
 @pytest.mark.parametrize(
-    "region",
-    [
-        "EUROPE",
-        "AMERICAS",
-        "ASIA",       
-    ],
+    "region", ["EUROPE", "AMERICAS", "ASIA",],
 )
 class TestMatchApiV5:
-    @pytest.mark.parametrize("match_id", ["EUW1_12345", "EUW1_54321", "EUW1_1", "EUW_1222222222222222222222"])
+    @pytest.mark.parametrize(
+        "match_id", ["EUW1_12345", "EUW1_54321", "EUW1_1", "EUW_1222222222222222222222"]
+    )
     def test_by_id(self, lol_context, region, match_id):
-        actual_response = lol_context.watcher.matchv5.by_id(region, match_id)
+        actual_response = lol_context.watcher.match_v5.by_id(region, match_id)
 
         lol_context.verify_api_call(
             region, f"/lol/match/v5/matches/{match_id}", {}, actual_response,
@@ -22,28 +19,20 @@ class TestMatchApiV5:
 
     @pytest.mark.parametrize("puuid", ["12345", "3333333333333333333"])
     @pytest.mark.parametrize("count", [None, 20])
-    @pytest.mark.parametrize("start", [None, 0])    
+    @pytest.mark.parametrize("start", [None, 0])
     def test_matchlist_by_account(
-        self,
-        lol_context,
-        region,
-        puuid,
-        start,
-        count,       
-    ):        
-
-        actual_response = lol_context.watcher.matchv5.matchlist_by_puuid(
-            region,
-            puuid,
-            start=start,
-            count=count,            
+        self, lol_context, region, puuid, start, count,
+    ):
+
+        actual_response = lol_context.watcher.match_v5.matchlist_by_puuid(
+            region, puuid, start=start, count=count,
         )
 
         expected_params = {}
         if count is not None:
             expected_params["count"] = count
         if start is not None:
-            expected_params["start"] = start        
+            expected_params["start"] = start
 
         lol_context.verify_api_call(
             region,
@@ -52,9 +41,13 @@ class TestMatchApiV5:
             actual_response,
         )
 
-    @pytest.mark.parametrize("match_id", ["EUW1_12345", "EUW1_54321", "EUW1_1", "EUW_1222222222222222222222"])
+    @pytest.mark.parametrize(
+        "match_id", ["EUW1_12345", "EUW1_54321", "EUW1_1", "EUW_1222222222222222222222"]
+    )
     def test_timeline_by_match(self, lol_context, region, match_id):
-        actual_response = lol_context.watcher.matchv5.timeline_by_match(region, match_id)
+        actual_response = lol_context.watcher.match_v5.timeline_by_match(
+            region, match_id
+        )
 
         lol_context.verify_api_call(
             region, f"/lol/match/v5/matches/{match_id}/timeline", {}, actual_response,
diff --git a/tests/test_LolWatcher.py b/tests/test_LolWatcher.py
index fa30ab5..2c011c4 100644
--- a/tests/test_LolWatcher.py
+++ b/tests/test_LolWatcher.py
@@ -1,6 +1,7 @@
 import pytest
 
 from riotwatcher import LolWatcher
+from riotwatcher._apis.league_of_legends import MatchApiV4, MatchApiV5
 
 
 @pytest.mark.lol
@@ -18,3 +19,15 @@ class TestLolWatcher:
 
     def test_allows_kernel_url(self):
         LolWatcher(kernel_url="https://fake-kernel-server")
+
+    def test_defaults_match_v4(self):
+        watcher = LolWatcher(api_key="RGAPI-this-is-a-fake")
+        assert isinstance(watcher.match, MatchApiV4)
+
+    def test_uses_match_v4_when_false(self):
+        watcher = LolWatcher(api_key="RGAPI-this-is-a-fake", default_match_v5=False)
+        assert isinstance(watcher.match, MatchApiV4)
+
+    def test_uses_match_v5_when_true(self):
+        watcher = LolWatcher(api_key="RGAPI-this-is-a-fake", default_match_v5=True)
+        assert isinstance(watcher.match, MatchApiV5)
