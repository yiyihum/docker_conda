diff --git a/tests/test_basic_ops_dict.py b/tests/test_basic_ops_dict.py
index f8c7220..aa46b86 100644
--- a/tests/test_basic_ops_dict.py
+++ b/tests/test_basic_ops_dict.py
@@ -52,7 +52,7 @@ def test_getattr_dict() -> None:
 
 
 def test_mandatory_value() -> None:
-    c = OmegaConf.create(dict(a="???"))
+    c = OmegaConf.create({"a": "???"})
     with pytest.raises(MissingMandatoryValue, match="a"):
         c.a
 
@@ -270,8 +270,7 @@ def test_dict_pop(
 )
 def test_in_dict(conf: Any, key: str, expected: Any) -> None:
     conf = OmegaConf.create(conf)
-    ret = key in conf
-    assert ret == expected
+    assert (key in conf) == expected
 
 
 def test_get_root() -> None:
@@ -387,10 +386,11 @@ def test_hash() -> None:
     assert hash(c1) != hash(c2)
 
 
-def test_get_with_default_from_struct_not_throwing() -> None:
-    c = OmegaConf.create(dict(a=10, b=20))
+@pytest.mark.parametrize("default", ["default", 0, None])  # type: ignore
+def test_get_with_default_from_struct_not_throwing(default: Any) -> None:
+    c = OmegaConf.create({"a": 10, "b": 20})
     OmegaConf.set_struct(c, True)
-    assert c.get("z", "default") == "default"
+    assert c.get("z", default) == default
 
 
 def test_members() -> None:
diff --git a/tests/test_struct.py b/tests/test_struct.py
index f8ec370..c6016d8 100644
--- a/tests/test_struct.py
+++ b/tests/test_struct.py
@@ -13,7 +13,7 @@ def test_struct_default() -> None:
 
 
 def test_struct_set_on_dict() -> None:
-    c = OmegaConf.create(dict(a=dict()))
+    c = OmegaConf.create({"a": {}})
     OmegaConf.set_struct(c, True)
     # Throwing when it hits foo, so exception key is a.foo and not a.foo.bar
     with pytest.raises(AttributeError, match=re.escape("a.foo")):
