diff --git a/pycytominer/cyto_utils/features.py b/pycytominer/cyto_utils/features.py
index a55d012..11cb946 100644
--- a/pycytominer/cyto_utils/features.py
+++ b/pycytominer/cyto_utils/features.py
@@ -90,3 +90,41 @@ def infer_cp_features(population_df, metadata=False):
     ), "No CP features found. Are you sure this dataframe is from CellProfiler?"
 
     return features
+
+
+def drop_outlier_features(
+    population_df, features="infer", samples="none", outlier_cutoff=15
+):
+    """
+    Exclude a feature if its min or max absolute value is greater than the threshold
+
+    Arguments:
+    population_df - pandas DataFrame that includes metadata and observation features
+    features - a list of features present in the population dataframe [default: "infer"]
+               if "infer", then assume cell painting features are those that start with
+               "Cells_", "Nuclei_", or "Cytoplasm_"
+    samples - list samples to perform operation on
+              [default: "none"] - if "none", use all samples to calculate
+    outlier_cutoff - threshold to remove feature if absolute value is greater
+
+    Return:
+    list of features to exclude from the population_df
+    """
+    # Subset dataframe
+    if samples != "none":
+        population_df = population_df.loc[samples, :]
+
+    if features == "infer":
+        features = infer_cp_features(population_df)
+        population_df = population_df.loc[:, features]
+    else:
+        population_df = population_df.loc[:, features]
+
+    max_feature_values = population_df.max().abs()
+    min_feature_values = population_df.min().abs()
+
+    outlier_features = max_feature_values[
+        (max_feature_values > outlier_cutoff) | (min_feature_values > outlier_cutoff)
+    ].index.tolist()
+
+    return outlier_features
diff --git a/pycytominer/feature_select.py b/pycytominer/feature_select.py
index fe64e3a..a31faf9 100644
--- a/pycytominer/feature_select.py
+++ b/pycytominer/feature_select.py
@@ -9,7 +9,11 @@ from pycytominer.correlation_threshold import correlation_threshold
 from pycytominer.variance_threshold import variance_threshold
 from pycytominer.get_na_columns import get_na_columns
 from pycytominer.cyto_utils.output import output
-from pycytominer.cyto_utils.features import get_blacklist_features, infer_cp_features
+from pycytominer.cyto_utils.features import (
+    get_blacklist_features,
+    infer_cp_features,
+    drop_outlier_features,
+)
 
 
 def feature_select(
@@ -26,6 +30,7 @@ def feature_select(
     compression=None,
     float_format=None,
     blacklist_file=None,
+    outlier_cutoff=15,
 ):
     """
     Performs feature selection based on the given operation
@@ -52,12 +57,17 @@ def feature_select(
     blacklist_file - file location of dataframe with features to exclude [default: None]
                      Note that if "blacklist" in operation then will remove standard
                      blacklist
+    outlier_cutoff - the threshold at which the maximum or minimum value of a feature
+                     across a full experiment is excluded [default: 15]. Note that this
+                     procedure is typically applied (and therefore the default is
+                     suitable) for after normalization.
     """
     all_ops = [
         "variance_threshold",
         "correlation_threshold",
         "drop_na_columns",
         "blacklist",
+        "drop_outliers",
     ]
 
     # Make sure the user provides a supported operation
@@ -114,6 +124,13 @@ def feature_select(
                 )
             else:
                 exclude = get_blacklist_features(population_df=profiles)
+        elif op == "drop_outliers":
+            exclude = drop_outlier_features(
+                population_df=profiles,
+                features=features,
+                samples=samples,
+                outlier_cutoff=outlier_cutoff,
+            )
 
         excluded_features += exclude
 
