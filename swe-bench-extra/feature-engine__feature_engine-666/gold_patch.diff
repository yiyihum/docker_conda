diff --git a/docs/index.rst b/docs/index.rst
index e121856..c2e3088 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -267,4 +267,5 @@ Table of Contents
    contribute/index
    about/index
    whats_new/index
+   versions/index
    donate
diff --git a/docs/versions/index.rst b/docs/versions/index.rst
new file mode 100644
index 0000000..be193f0
--- /dev/null
+++ b/docs/versions/index.rst
@@ -0,0 +1,12 @@
+Other versions
+==============
+
+Web-based documentation is available for versions listed below:
+
+- `Feature-engine 1.6 <https://feature-engine.trainindata.com/en/1.6.x/index.html>`_
+- `Feature-engine 1.5 <https://feature-engine.trainindata.com/en/1.5.x/index.html>`_
+- `Feature-engine 1.4 <https://feature-engine.trainindata.com/en/1.4.x/index.html>`_
+- `Feature-engine 1.3 <https://feature-engine.trainindata.com/en/1.3.x/index.html>`_
+- `Feature-engine 1.2 <https://feature-engine.trainindata.com/en/1.2.x/index.html>`_
+- `Feature-engine 1.1 <https://feature-engine.trainindata.com/en/1.1.x/index.html>`_
+- `Feature-engine 0.6 <https://feature-engine.trainindata.com/en/0.6.x_a/>`_
diff --git a/feature_engine/encoding/rare_label.py b/feature_engine/encoding/rare_label.py
index 4859b2c..c7afb18 100644
--- a/feature_engine/encoding/rare_label.py
+++ b/feature_engine/encoding/rare_label.py
@@ -218,7 +218,7 @@ class RareLabelEncoder(CategoricalInitMixinNA, CategoricalMethodsMixin):
                     "indicated in n_categories. Thus, all categories will be "
                     "considered frequent".format(var)
                 )
-                self.encoder_dict_[var] = X[var].unique()
+                self.encoder_dict_[var] = list(X[var].unique())
 
         self.variables_ = variables_
         self._get_feature_names_in(X)
@@ -247,19 +247,19 @@ class RareLabelEncoder(CategoricalInitMixinNA, CategoricalMethodsMixin):
             _check_optional_contains_na(X, self.variables_)
 
             for feature in self.variables_:
-                X[feature] = np.where(
-                    X[feature].isin(self.encoder_dict_[feature]),
-                    X[feature],
-                    self.replace_with,
-                )
+                if X[feature].dtype == "category":
+                    X[feature] = X[feature].cat.add_categories(self.replace_with)
+                X.loc[
+                    ~X[feature].isin(self.encoder_dict_[feature]), feature
+                ] = self.replace_with
 
         else:
             for feature in self.variables_:
-                X[feature] = np.where(
-                    X[feature].isin(self.encoder_dict_[feature] + [np.nan]),
-                    X[feature],
-                    self.replace_with,
-                )
+                if X[feature].dtype == "category":
+                    X[feature] = X[feature].cat.add_categories(self.replace_with)
+                X.loc[
+                    ~X[feature].isin(self.encoder_dict_[feature] + [np.nan]), feature
+                ] = self.replace_with
 
         return X
 
