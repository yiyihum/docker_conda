diff --git a/tests/test_ufonormalizer.py b/tests/test_ufonormalizer.py
index 910d5ae..cde30e0 100644
--- a/tests/test_ufonormalizer.py
+++ b/tests/test_ufonormalizer.py
@@ -836,6 +836,53 @@ class UFONormalizerTest(unittest.TestCase):
             writer.getText(),
             "<note>\n\tLine1\n\t\n\t    Line3\n</note>")
 
+        # Normalizer should not indent Line2 and Line3 more than already indented
+        element = ET.fromstring(
+            "<note>\n\tLine1\n\tLine2\n\tLine3\n</note>")
+        writer = XMLWriter(declaration=None)
+        _normalizeGlifNote(element, writer)
+        self.assertEqual(
+            writer.getText(),
+            "<note>\n\tLine1\n\tLine2\n\tLine3\n</note>")
+
+        # Normalizer should keep the extra tab in line 2
+        element = ET.fromstring(
+            "<note>\n\tLine1\n\t\tLine2\n\tLine3\n</note>")
+        writer = XMLWriter(declaration=None)
+        _normalizeGlifNote(element, writer)
+        self.assertEqual(
+            writer.getText(),
+            "<note>\n\tLine1\n\t\tLine2\n\tLine3\n</note>")
+
+        # Normalizer should keep the extra spaces on line 2
+        element = ET.fromstring(
+            "<note>\n\tLine1\n\t    Line2\n\tLine3\n</note>")
+        writer = XMLWriter(declaration=None)
+        _normalizeGlifNote(element, writer)
+        self.assertEqual(
+            writer.getText(),
+            "<note>\n\tLine1\n\t    Line2\n\tLine3\n</note>")
+
+        # Normalizer should remove the extra tab all lines have in common,
+        # but leave the additional tab on line 2
+        element = ET.fromstring(
+            "<note>\n\t\tLine1\n\t\t\tLine2\n\t\tLine3\n</note>")
+        writer = XMLWriter(declaration=None)
+        _normalizeGlifNote(element, writer)
+        self.assertEqual(
+            writer.getText(),
+            "<note>\n\tLine1\n\t\tLine2\n\tLine3\n</note>")
+
+        # Normalizer should remove the extra 4-space all lines have in common,
+        # but leave the additional 4-space on line 2
+        element = ET.fromstring(
+            "<note>\n        Line1\n            Line2\n        Line3\n</note>")
+        writer = XMLWriter(declaration=None)
+        _normalizeGlifNote(element, writer)
+        self.assertEqual(
+            writer.getText(),
+            "<note>\n\tLine1\n\t    Line2\n\tLine3\n</note>")
+
     def test_normalizeGLIF_note_undefined(self):
         element = ET.fromstring("<note></note>")
         writer = XMLWriter(declaration=None)
