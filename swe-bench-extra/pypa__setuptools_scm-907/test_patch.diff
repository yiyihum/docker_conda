diff --git a/testing/test_basic_api.py b/testing/test_basic_api.py
index fa35e2c..6fa02fe 100644
--- a/testing/test_basic_api.py
+++ b/testing/test_basic_api.py
@@ -179,10 +179,10 @@ def test_dump_version(tmp_path: Path) -> None:
     scm_version = meta("1.0", distance=42, config=c)
     dump_version(tmp_path, version, "first.py", scm_version=scm_version)
     lines = read("first.py").splitlines()
-    assert lines[3:] == [
-        "__version__ : str = version : str = '1.0.dev42'",
-        "__version_tuple__ : 'tuple[int | str, ...]' = \\",
-        "  version_tuple : 'tuple[int | str, ...]' = (1, 0, 'dev42')",
+    assert lines[-2:] == [
+        "__version__ = version = '1.0.dev42'  # type: str",
+        "__version_tuple__ = version_tuple = (1, 0, 'dev42')"
+        "  # type: tuple[int | str, ...]",
     ]
 
     version = "1.0.1+g4ac9d2c"
diff --git a/testing/test_functions.py b/testing/test_functions.py
index baf84d3..dfc22b6 100644
--- a/testing/test_functions.py
+++ b/testing/test_functions.py
@@ -1,5 +1,7 @@
 from __future__ import annotations
 
+import shutil
+import subprocess
 from pathlib import Path
 
 import pytest
@@ -108,6 +110,24 @@ def test_dump_version_modern(monkeypatch: pytest.MonkeyPatch, tmp_path: Path) ->
     assert target.read_text() == version
 
 
+def test_dump_version_on_old_python(tmp_path: Path) -> None:
+    python37 = shutil.which("python3.7")
+    if python37 is None:
+        pytest.skip("python3.7 not found")
+    from setuptools_scm._integration.dump_version import write_version_to_path
+
+    version = "1.2.3"
+    scm_version = meta(version, config=c)
+    write_version_to_path(
+        tmp_path / "VERSION.py", template=None, version=version, scm_version=scm_version
+    )
+    subprocess.run(
+        [python37, "-c", "import VERSION;print(VERSION.version)"],
+        cwd=tmp_path,
+        check=True,
+    )
+
+
 def test_has_command() -> None:
     with pytest.warns(RuntimeWarning, match="yadayada"):
         assert not has_command("yadayada_setuptools_aint_ne")
