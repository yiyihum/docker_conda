diff --git a/tests/test_watcher.py b/tests/test_watcher.py
index 40529cd..07ee21c 100644
--- a/tests/test_watcher.py
+++ b/tests/test_watcher.py
@@ -32,19 +32,27 @@ class TestWatcher(unittest.TestCase):
         assert watcher.is_changed(tmpdir) is False
 
         # sleep 1 second so that mtime will be different
+        # TODO: This doesn't seem necessary; test passes without it
         time.sleep(1)
 
-        with open(os.path.join(tmpdir, 'foo'), 'w') as f:
+        filepath = os.path.join(tmpdir, 'foo')
+
+        with open(filepath, 'w') as f:
             f.write('')
 
         assert watcher.is_changed(tmpdir)
         assert watcher.is_changed(tmpdir) is False
 
+        os.remove(filepath)
+        assert watcher.is_changed(tmpdir)
+        assert watcher.is_changed(tmpdir) is False
+
     def test_watch_file(self):
         watcher = Watcher()
         watcher.count = 0
 
         # sleep 1 second so that mtime will be different
+        # TODO: This doesn't seem necessary; test passes without it
         time.sleep(1)
 
         filepath = os.path.join(tmpdir, 'foo')
@@ -56,17 +64,25 @@ class TestWatcher(unittest.TestCase):
 
         watcher.watch(filepath, add_count)
         assert watcher.is_changed(filepath)
+        assert watcher.is_changed(filepath) is False
 
         # sleep 1 second so that mtime will be different
+        # TODO: This doesn't seem necessary; test passes without it
         time.sleep(1)
 
         with open(filepath, 'w') as f:
             f.write('')
 
-        rv = watcher.examine()
-        assert rv[0] == os.path.abspath(filepath)
+        abs_filepath = os.path.abspath(filepath)
+        assert watcher.examine() == (abs_filepath, None)
+        assert watcher.examine() == (None, None)
         assert watcher.count == 1
 
+        os.remove(filepath)
+        assert watcher.examine() == (abs_filepath, None)
+        assert watcher.examine() == (None, None)
+        assert watcher.count == 2
+
     def test_watch_glob(self):
         watcher = Watcher()
         watcher.watch(tmpdir + '/*')
@@ -82,8 +98,13 @@ class TestWatcher(unittest.TestCase):
         with open(filepath, 'w') as f:
             f.write('')
 
-        rv = watcher.examine()
-        assert rv[0] == os.path.abspath(filepath)
+        abs_filepath = os.path.abspath(filepath)
+        assert watcher.examine() == (abs_filepath, None)
+        assert watcher.examine() == (None, None)
+
+        os.remove(filepath)
+        assert watcher.examine() == (abs_filepath, None)
+        assert watcher.examine() == (None, None)
 
     def test_watch_ignore(self):
         watcher = Watcher()
@@ -94,3 +115,38 @@ class TestWatcher(unittest.TestCase):
             f.write('')
 
         assert watcher.examine() == (None, None)
+
+    def test_watch_multiple_dirs(self):
+        first_dir = os.path.join(tmpdir, 'first')
+        second_dir = os.path.join(tmpdir, 'second')
+
+        watcher = Watcher()
+
+        os.mkdir(first_dir)
+        watcher.watch(first_dir)
+        assert watcher.examine() == (None, None)
+
+        first_path = os.path.join(first_dir, 'foo')
+        with open(first_path, 'w') as f:
+            f.write('')
+        assert watcher.examine() == (first_path, None)
+        assert watcher.examine() == (None, None)
+
+        os.mkdir(second_dir)
+        watcher.watch(second_dir)
+        assert watcher.examine() == (None, None)
+
+        second_path = os.path.join(second_dir, 'bar')
+        with open(second_path, 'w') as f:
+            f.write('')
+        assert watcher.examine() == (second_path, None)
+        assert watcher.examine() == (None, None)
+
+        with open(first_path, 'a') as f:
+            f.write('foo')
+        assert watcher.examine() == (first_path, None)
+        assert watcher.examine() == (None, None)
+
+        os.remove(second_path)
+        assert watcher.examine() == (second_path, None)
+        assert watcher.examine() == (None, None)
