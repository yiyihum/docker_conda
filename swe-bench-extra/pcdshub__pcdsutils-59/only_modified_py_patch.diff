diff --git a/pcdsutils/profile.py b/pcdsutils/profile.py
index 7916aaf..d2e80e2 100644
--- a/pcdsutils/profile.py
+++ b/pcdsutils/profile.py
@@ -8,9 +8,10 @@ import logging
 import pkgutil
 import warnings
 from contextlib import contextmanager
-from inspect import isclass, isfunction
+from inspect import getmembers, isclass, isfunction, ismethod
 from types import ModuleType
-from typing import Any, Callable, Dict, Iterable, List, Optional, Tuple
+from typing import (Any, Callable, Dict, Iterable, Iterator, List, Optional,
+                    Tuple)
 
 logger = logging.getLogger(__name__)
 
@@ -54,7 +55,7 @@ def profiler_context(
     use_global_profiler: bool = False,
     output_now: bool = True,
     min_threshold: float = 0,
-) -> LineProfiler:
+) -> Iterator[LineProfiler]:
     """
     Context manager for profiling a fixed span of an application.
 
@@ -397,7 +398,7 @@ def get_native_methods(
     native_methods = set()
     if seen is None:
         seen = set()
-    for obj in module_or_cls.__dict__.values():
+    for _, obj in getmembers(module_or_cls):
         try:
             if obj in seen:
                 continue
@@ -413,7 +414,7 @@ def get_native_methods(
         if isclass(obj):
             inner_methods = get_native_methods(obj, module, seen=seen)
             native_methods.update(inner_methods)
-        elif isfunction(obj):
+        elif isfunction(obj) or ismethod(obj):
             native_methods.add(obj)
     return native_methods
 

