diff --git a/tests/data/isis_octothorpe.txt b/tests/data/isis_octothorpe.txt
new file mode 100644
index 0000000..02a470e
--- /dev/null
+++ b/tests/data/isis_octothorpe.txt
@@ -0,0 +1,23 @@
+Group = Radiometry
+    # Bitweight Correction Parameters
+    BitweightCorrectionPerformed = "No: Table converted"
+    BitweightFile                = "Not applicable: No bitweight correction"
+
+    # Bias Subtraction Parameters
+    BiasSubtractionPerformed     = Yes
+    BiasSubtractionMethod        = "Overclock fit"
+    NumberOfOverclocks           = 2
+
+    # Dark Current Subtraction Parameters
+    DarkSubtractionPerformed     = Yes
+    DarkParameterFile            = /usgs/cpkgs/isis3/data/cassini/calibration-
+                                   /darkcurrent/nac_median_dark_parameters042-
+                                   28.full.cub
+    BiasDistortionTable          = /usgs/cpkgs/isis3/data/cassini/calibration-
+                                   /darkcurrent/nac_bias_distortion.tab
+
+    # Linearity Correction Parameters
+    LinearityCorrectionPerformed = Yes
+    LinearityCorrectionTable     = /usgs/cpkgs/isis3/data/cassini/calibration-
+                                   /linearize/NAC2.lut
+End_Group
diff --git a/tests/test_pvl.py b/tests/test_pvl.py
index 86bea35..ec496a1 100755
--- a/tests/test_pvl.py
+++ b/tests/test_pvl.py
@@ -811,11 +811,16 @@ def test_delimiters():
 
 
 def test_isis_output():
-    label = pvl.load(os.path.join(DATA_DIR, "isis_output.txt"))
-    assert label["Results"]["TotalPixels"] == 2048000
+    # Should test that both the ISISGrammar and OmniGrammar can deal with these:
+    for g in (pvl.grammar.OmniGrammar(), pvl.grammar.ISISGrammar()):
+        label = pvl.load(os.path.join(DATA_DIR, "isis_output.txt"), grammar=g)
+        assert label["Results"]["TotalPixels"] == 2048000
 
-    naif = pvl.load(os.path.join(DATA_DIR, "isis_naif.txt"))
-    assert naif["NaifKeywords"]["INS-143400_LIGHTTIME_CORRECTION"] == "LT+S"
+        naif = pvl.load(os.path.join(DATA_DIR, "isis_naif.txt"), grammar=g)
+        assert naif["NaifKeywords"]["INS-143400_LIGHTTIME_CORRECTION"] == "LT+S"
+
+        aleish = pvl.load(os.path.join(DATA_DIR, "isis_octothorpe.txt"), grammar=g)
+        assert aleish["Radiometry"]["NumberOfOverclocks"] == 2
 
 
 def test_cube_label():
