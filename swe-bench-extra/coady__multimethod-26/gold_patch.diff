diff --git a/README.md b/README.md
index 4da3048..461c589 100644
--- a/README.md
+++ b/README.md
@@ -140,6 +140,7 @@ dev
 * Ignore default and keyword arguments
 * Resolved ambiguous `Union` types
 * Fixed an issue with name collision when defining a multimethod
+* Resolved dispatch errors when annotating parameters with meta-types such as `type`
 
 1.4
 
diff --git a/multimethod/__init__.py b/multimethod/__init__.py
index 22ffff3..63cb6a1 100644
--- a/multimethod/__init__.py
+++ b/multimethod/__init__.py
@@ -99,7 +99,7 @@ def distance(cls, subclass: type) -> int:
     """Return estimated distance between classes for tie-breaking."""
     if getattr(cls, '__origin__', None) is typing.Union:
         return min(distance(arg, subclass) for arg in cls.__args__)
-    mro = subclass.mro()
+    mro = type.mro(subclass)
     return mro.index(cls if cls in mro else object)
 
 
