diff --git a/pyquery/pyquery.py b/pyquery/pyquery.py
index e549f0e..13afbff 100644
--- a/pyquery/pyquery.py
+++ b/pyquery/pyquery.py
@@ -8,6 +8,7 @@ from urllib.parse import urljoin
 from .openers import url_opener
 from .text import extract_text
 from copy import deepcopy
+from html import escape
 from lxml import etree
 import lxml.html
 import inspect
@@ -149,14 +150,6 @@ class PyQuery(list):
         self._base_url = None
         self.parser = kwargs.pop('parser', None)
 
-        if (len(args) >= 1 and
-                isinstance(args[0], str) and
-                args[0].split('://', 1)[0] in ('http', 'https')):
-            kwargs['url'] = args[0]
-            if len(args) >= 2:
-                kwargs['data'] = args[1]
-            args = []
-
         if 'parent' in kwargs:
             self._parent = kwargs.pop('parent')
         else:
@@ -1085,9 +1078,9 @@ class PyQuery(list):
                 return None
             tag = self[0]
             children = tag.getchildren()
+            html = escape(tag.text or '', quote=False)
             if not children:
-                return tag.text or ''
-            html = tag.text or ''
+                return html
             if 'encoding' not in kwargs:
                 kwargs['encoding'] = str
             html += u''.join([etree.tostring(e, **kwargs)
@@ -1456,7 +1449,7 @@ class PyQuery(list):
              >>> d('strong').remove()
              [<strong>]
              >>> print(d)
-             <div>Maybe <em>she</em> does   know</div>
+             <div>Maybe <em>she</em> does  know</div>
         """
         if expr is no_default:
             for tag in self:
@@ -1467,11 +1460,11 @@ class PyQuery(list):
                         if prev is None:
                             if not parent.text:
                                 parent.text = ''
-                            parent.text += ' ' + tag.tail
+                            parent.text += tag.tail
                         else:
                             if not prev.tail:
                                 prev.tail = ''
-                            prev.tail += ' ' + tag.tail
+                            prev.tail += tag.tail
                     parent.remove(tag)
         else:
             results = self._copy(expr, self)

