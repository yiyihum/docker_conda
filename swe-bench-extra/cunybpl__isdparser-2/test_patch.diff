diff --git a/tests/conftest.py b/tests/conftest.py
index 5fb53a3..b61f1fc 100644
--- a/tests/conftest.py
+++ b/tests/conftest.py
@@ -2,8 +2,12 @@ import pytest
 
 
 @pytest.fixture
-def isd_record_string(): 
-    return """0130010230999992020010100004+69067+018533FM-12+007999999V0200501N001019999999N999999999-00291-00381099661
-    ADDAA199999919MA1999999098701MD1810211+9999OD139900601999REMSYN06401023 16/// /0501 11029 21038 39870 49966 58021 6//// 333 91106="""
+def isd_record_strings_list(): 
+    return ["""0130010230999992020010100004+69067+018533FM-12+007999999V0200501N001019999999N999999999-00291-00381099661
+    ADDAA199999919MA1999999098701MD1810211+9999OD139900601999REMSYN06401023 16/// /0501 11029 21038 39870 49966 58021 6//// 333 91106=""",
+    """0130010230999992020020100004+69067+018533FM-12+007999999V0200501N001019999999N999999999-00291-00381099661
+    ADDAA199999919MA1999999098701MD1810211+9999OD139900601999REMSYN06401023 16/// /0501 11029 21038 39870 49966 58021 6//// 333 91106=""",
+    """0130010230999992020030100004+69067+018533FM-12+007999999V0200501N001019999999N999999999-00291-00381099661
+    ADDAA199999919MA1999999098701MD1810211+9999OD139900601999REMSYN06401023 16/// /0501 11029 21038 39870 49966 58021 6//// 333 91106="""]
 
 
diff --git a/tests/test_record.py b/tests/test_record.py
index 9ac717e..84b3f0d 100644
--- a/tests/test_record.py
+++ b/tests/test_record.py
@@ -5,6 +5,7 @@ tc = unittest.TestCase()
 
 from isdparser.measures import Measure, Section
 from isdparser.record import ISDRecord, ISDRecordFactory
+import copy
 
 def test_isdrecord(mocker): 
 
@@ -48,11 +49,12 @@ def test_isdrecordfactory_static_methods():
 
 
 
-def test_isdrecordfactory_on_record_string(isd_record_string):
+def test_isdrecordfactory_on_record_string(isd_record_strings_list):
     
-    result = ISDRecordFactory().create(isd_record_string)
 
-    expected = {
+    result = [ISDRecordFactory().create(line) for line in isd_record_strings_list]
+
+    exp0 = {
         'datestamp': datetime.datetime(2020, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), 
         'identifier': '010230-99999', 
         'sections': [
@@ -97,4 +99,17 @@ def test_isdrecordfactory_on_record_string(isd_record_string):
         ]
     }
 
-    tc.assertDictEqual(expected, result.schema())
\ No newline at end of file
+    exp1 = copy.deepcopy(exp0)
+    exp1['datestamp'] = datetime.datetime(2020, 2, 1, 0, 0, tzinfo=datetime.timezone.utc)
+    exp1['sections'][0]['measures'][2]['value'] = '20200201'
+
+    exp2 = copy.deepcopy(exp0)
+    exp2['datestamp'] = datetime.datetime(2020, 3, 1, 0, 0, tzinfo=datetime.timezone.utc)
+    exp2['sections'][0]['measures'][2]['value'] = '20200301'
+
+    expected = [exp0, exp1, exp2]
+
+    for res in result:
+        datestamp = res.schema()['datestamp']
+        exp = list(filter(lambda x: x['datestamp'] == datestamp, expected))[0]
+        tc.assertDictEqual(exp, res.schema())
\ No newline at end of file
