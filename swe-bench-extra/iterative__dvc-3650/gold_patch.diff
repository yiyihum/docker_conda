diff --git a/dvc/repo/diff.py b/dvc/repo/diff.py
--- a/dvc/repo/diff.py
+++ b/dvc/repo/diff.py
@@ -1,8 +1,6 @@
 import os
 
-from dvc.exceptions import DvcException
 from dvc.repo import locked
-from dvc.scm.git import Git
 from dvc.scm.tree import is_working_tree
 
 
@@ -15,8 +13,6 @@ def diff(self, a_rev="HEAD", b_rev=None):
     the concept of `index`, but it keeps the same interface, thus,
     `dvc diff` would be the same as `dvc diff HEAD`.
     """
-    if type(self.scm) is not Git:
-        raise DvcException("only supported for Git repositories")
 
     def _paths_checksums():
         """
diff --git a/dvc/scm/__init__.py b/dvc/scm/__init__.py
--- a/dvc/scm/__init__.py
+++ b/dvc/scm/__init__.py
@@ -1,13 +1,14 @@
 """Manages source control systems (e.g. Git)."""
 
-from dvc.scm.base import Base
+from dvc.scm.base import Base, NoSCMError
 from dvc.scm.git import Git
 
 
 # Syntactic sugar to signal that this is an actual implementation for a DVC
 # project under no SCM control.
 class NoSCM(Base):
-    pass
+    def __getattr__(self, name):
+        raise NoSCMError
 
 
 def SCM(
diff --git a/dvc/scm/base.py b/dvc/scm/base.py
--- a/dvc/scm/base.py
+++ b/dvc/scm/base.py
@@ -24,6 +24,16 @@ class RevError(SCMError):
     pass
 
 
+class NoSCMError(SCMError):
+    def __init__(self):
+        msg = (
+            "Only supported for Git repositories. If you're "
+            "seeing this error in a Git repo, try updating the DVC "
+            "configuration with `dvc config core.no_scm false`."
+        )
+        super().__init__(msg)
+
+
 class Base(object):
     """Base class for source control management driver implementations."""
 
