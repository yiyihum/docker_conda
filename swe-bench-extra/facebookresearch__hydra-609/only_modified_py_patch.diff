diff --git a/hydra/main.py b/hydra/main.py
index 1c244ad593..b5c0bd3279 100644
--- a/hydra/main.py
+++ b/hydra/main.py
@@ -1,6 +1,8 @@
 # Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved
 import functools
-from typing import Callable, Optional
+from typing import Any, Callable, Optional
+
+from omegaconf import DictConfig
 
 from ._internal.utils import get_args_parser, run_hydra
 from .types import TaskFunction
@@ -10,7 +12,7 @@ def main(
     config_path: Optional[str] = None,
     config_name: Optional[str] = None,
     strict: Optional[bool] = None,
-) -> Callable[[TaskFunction], Callable[[], None]]:
+) -> Callable[[TaskFunction], Any]:
     """
     :param config_path: the config path, a directory relative to the declaring python file.
     :param config_name: the name of the config (usually the file name without the .yaml extension)
@@ -20,14 +22,20 @@ def main(
 
     def main_decorator(task_function: TaskFunction) -> Callable[[], None]:
         @functools.wraps(task_function)
-        def decorated_main() -> None:
-            run_hydra(
-                args_parser=get_args_parser(),
-                task_function=task_function,
-                config_path=config_path,
-                config_name=config_name,
-                strict=strict,
-            )
+        def decorated_main(cfg_passthrough: Optional[DictConfig] = None) -> Any:
+            if cfg_passthrough is not None:
+                return task_function(cfg_passthrough)
+            else:
+                args = get_args_parser()
+                # no return value from run_hydra() as it may sometime actually run the task_function
+                # multiple times (--multirun)
+                run_hydra(
+                    args_parser=args,
+                    task_function=task_function,
+                    config_path=config_path,
+                    config_name=config_name,
+                    strict=strict,
+                )
 
         return decorated_main
 
