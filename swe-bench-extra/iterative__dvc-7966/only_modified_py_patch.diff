diff --git a/dvc/repo/diff.py b/dvc/repo/diff.py
--- a/dvc/repo/diff.py
+++ b/dvc/repo/diff.py
@@ -5,6 +5,7 @@
 
 from dvc.exceptions import PathMissingError
 from dvc.repo import locked
+from dvc.utils.collections import ensure_list
 
 logger = logging.getLogger(__name__)
 
@@ -25,6 +26,8 @@ def diff(self, a_rev="HEAD", b_rev=None, targets=None):
     from dvc.fs.dvc import DvcFileSystem
 
     dvcfs = DvcFileSystem(repo=self)
+    targets = ensure_list(targets)
+    targets = [dvcfs.from_os_path(target) for target in targets]
 
     b_rev = b_rev if b_rev else "workspace"
     results = {}
@@ -36,7 +39,7 @@ def diff(self, a_rev="HEAD", b_rev=None, targets=None):
             continue
 
         targets_paths = None
-        if targets is not None:
+        if targets:
             # convert targets to paths, and capture any missing targets
             targets_paths, missing_targets[rev] = _targets_to_paths(
                 dvcfs, targets
@@ -44,7 +47,7 @@ def diff(self, a_rev="HEAD", b_rev=None, targets=None):
 
         results[rev] = _paths_checksums(self, targets_paths)
 
-    if targets is not None:
+    if targets:
         # check for overlapping missing targets between a_rev and b_rev
         for target in set(missing_targets[a_rev]) & set(
             missing_targets[b_rev]
diff --git a/dvc/repo/metrics/show.py b/dvc/repo/metrics/show.py
--- a/dvc/repo/metrics/show.py
+++ b/dvc/repo/metrics/show.py
@@ -11,6 +11,7 @@
 from dvc.repo.live import summary_fs_path
 from dvc.scm import NoSCMError
 from dvc.utils import error_handler, errored_revisions, onerror_collect
+from dvc.utils.collections import ensure_list
 from dvc.utils.serialize import load_yaml
 
 logger = logging.getLogger(__name__)
@@ -113,6 +114,9 @@ def show(
     if onerror is None:
         onerror = onerror_collect
 
+    targets = ensure_list(targets)
+    targets = [repo.dvcfs.from_os_path(target) for target in targets]
+
     res = {}
     for rev in repo.brancher(
         revs=revs,
diff --git a/dvc/repo/params/show.py b/dvc/repo/params/show.py
--- a/dvc/repo/params/show.py
+++ b/dvc/repo/params/show.py
@@ -21,6 +21,7 @@
 from dvc.stage import PipelineStage
 from dvc.ui import ui
 from dvc.utils import error_handler, errored_revisions, onerror_collect
+from dvc.utils.collections import ensure_list
 from dvc.utils.serialize import LOADERS
 
 if TYPE_CHECKING:
@@ -131,6 +132,9 @@ def show(
         onerror = onerror_collect
     res = {}
 
+    targets = ensure_list(targets)
+    targets = [repo.dvcfs.from_os_path(target) for target in targets]
+
     for branch in repo.brancher(revs=revs):
         params = error_handler(_gather_params)(
             repo=repo,
diff --git a/dvc/repo/plots/__init__.py b/dvc/repo/plots/__init__.py
--- a/dvc/repo/plots/__init__.py
+++ b/dvc/repo/plots/__init__.py
@@ -112,6 +112,8 @@ def collect(
         from dvc.utils.collections import ensure_list
 
         targets = ensure_list(targets)
+        targets = [self.repo.dvcfs.from_os_path(target) for target in targets]
+
         for rev in self.repo.brancher(revs=revs):
             # .brancher() adds unwanted workspace
             if revs is not None and rev not in revs:

