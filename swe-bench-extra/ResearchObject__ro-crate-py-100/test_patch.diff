diff --git a/test/test_read.py b/test/test_read.py
index ac173f1..b2fffe1 100644
--- a/test/test_read.py
+++ b/test/test_read.py
@@ -368,3 +368,65 @@ def test_generic_data_entity(tmpdir):
     crate = ROCrate(out_crate_dir)
 
     check_rc()
+
+
+def test_root_conformsto(tmpdir):
+    # actually not a valid workflow ro-crate, but here it does not matter
+    metadata = {
+        "@context": "https://w3id.org/ro/crate/1.1/context",
+        "@graph": [
+            {
+                "@id": "ro-crate-metadata.json",
+                "@type": "CreativeWork",
+                "about": {"@id": "./"},
+                "conformsTo": [
+                    {"@id": "https://w3id.org/ro/crate/1.1"},
+                    {"@id": "https://about.workflowhub.eu/Workflow-RO-Crate/"}
+                ]
+            },
+            {
+                "@id": "./",
+                "@type": "Dataset",
+            },
+        ]
+    }
+    crate_dir = tmpdir / "test_root_conformsto_crate"
+    crate_dir.mkdir()
+    with open(crate_dir / "ro-crate-metadata.json", "wt") as f:
+        json.dump(metadata, f, indent=4)
+    crate = ROCrate(crate_dir)
+    assert crate.metadata["conformsTo"] == [
+        "https://w3id.org/ro/crate/1.1",
+        "https://about.workflowhub.eu/Workflow-RO-Crate/"
+    ]
+
+
+def test_multi_type_context_entity(tmpdir):
+    id_, type_ = "#xyz", ["Project", "Organization"]
+    metadata = {
+        "@context": "https://w3id.org/ro/crate/1.1/context",
+        "@graph": [
+            {
+                "@id": "ro-crate-metadata.json",
+                "@type": "CreativeWork",
+                "about": {"@id": "./"},
+                "conformsTo": {"@id": "https://w3id.org/ro/crate/1.1"}
+            },
+            {
+                "@id": "./",
+                "@type": "Dataset",
+            },
+            {
+                "@id": id_,
+                "@type": type_,
+            }
+        ]
+    }
+    crate_dir = tmpdir / "test_multi_type_context_entity_crate"
+    crate_dir.mkdir()
+    with open(crate_dir / "ro-crate-metadata.json", "wt") as f:
+        json.dump(metadata, f, indent=4)
+    crate = ROCrate(crate_dir)
+    entity = crate.dereference(id_)
+    assert entity in crate.contextual_entities
+    assert set(entity.type) == set(type_)
diff --git a/test/test_utils.py b/test/test_utils.py
index e230d0f..ba220b9 100644
--- a/test/test_utils.py
+++ b/test/test_utils.py
@@ -15,7 +15,9 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-from rocrate.utils import subclasses
+import pytest
+
+from rocrate.utils import subclasses, get_norm_value
 
 
 class Pet:
@@ -38,3 +40,15 @@ def test_subclasses():
     pet_subclasses = list(subclasses(Pet))
     assert set(pet_subclasses) == {Cat, Dog, Beagle}
     assert pet_subclasses.index(Beagle) < pet_subclasses.index(Dog)
+
+
+def test_get_norm_value():
+    for value in {"@id": "foo"}, "foo", ["foo"], [{"@id": "foo"}]:
+        entity = {"@id": "#xyz", "name": value}
+        assert get_norm_value(entity, "name") == ["foo"]
+    for value in [{"@id": "foo"}, "bar"], ["foo", {"@id": "bar"}]:
+        entity = {"@id": "#xyz", "name": value}
+        assert get_norm_value(entity, "name") == ["foo", "bar"]
+    assert get_norm_value({"@id": "#xyz"}, "name") == []
+    with pytest.raises(ValueError):
+        get_norm_value({"@id": "#xyz", "name": [["foo"]]}, "name")
