diff --git a/.travis.yml b/.travis.yml
index 96731bd..1a637a5 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -3,54 +3,27 @@ language: python
 sudo: false
 
 cache:
-  # Apparently if you override the install command that silently disables the
-  # cache: pip support. This is less than ideal and I've opened up
-  # travis-ci/travis-ci#3239 to hopefully get that addressed. For now I'll
-  # manually add the pip cache directory to the build cache.
   directories:
     - ~/.cache/pip
 
 env:
   global:
-    # These two environment variables could be set by Travis itself, or Travis
-    # could configure itself in /etc/, ~/, or inside of the virtual
-    # environments. In any case if these two values get configured then end
-    # users only need to enable the pip cache and manually run pip wheel before
-    # running pip install.
     - PIP_WHEEL_DIR=$HOME/.cache/pip/wheels
     - PIP_FIND_LINKS=file://$HOME/.cache/pip/wheels
 
 python:
-  - "2.7"
   - "3.6"
-
-addons:
-  apt:
-    packages:
-    - libgdal1h
-    - gdal-bin
-    - libgdal-dev
-    - libatlas-dev
-    - libatlas-base-dev
-    - liblapack-dev
-    - gfortran
-    - libgmp-dev
-    - libmpfr-dev
+  - "3.7"
 
 before_install:
   - pip install -U pip
-  - pip install wheel
+  - pip install -r requirements.txt
 
 install:
-  - "pip wheel -r requirements.txt"
-  # Actually install our dependencies now, this will pull from the directory
-  # that the first command placed the Wheels into.
-  - "pip install --no-binary rasterio -r requirements.txt"
-  - "pip install coveralls"
-  - "pip install -e .[test]"
+  - pip install -e .[test]
 
 script:
-  - py.test --cov untiler --cov-report term-missing
+  - python -m pytest --cov untiler --cov-report term-missing
 
 after_success:
-  - coveralls
+  - coveralls
\ No newline at end of file
diff --git a/requirements.txt b/requirements.txt
index d5a62da..7b32ce5 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,3 +1,3 @@
-rasterio==1.0a8
+rasterio==1.1.2
 mercantile
 mbutil
diff --git a/untiler/scripts/tile_utils.py b/untiler/scripts/tile_utils.py
index 3620675..486f1ea 100644
--- a/untiler/scripts/tile_utils.py
+++ b/untiler/scripts/tile_utils.py
@@ -148,7 +148,7 @@ def parse_template(template):
         if len(separator) != 2 or separator[0] != separator[1]:
             raise ValueError('Too many / not matching separators!')
     
-        return valPattern.sub('\d+', template), valPattern.sub('%s', template), separator[0]
+        return valPattern.sub(r"\\d+", template), valPattern.sub("%s", template), separator[0]
     else:
         raise ValueError('Invalid template "%s"' % (template))
 
