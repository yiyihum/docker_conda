diff --git a/examples/plot_unicode_everywhere.py b/examples/plot_unicode_everywhere.py
index 26158c5..a739c6c 100644
--- a/examples/plot_unicode_everywhere.py
+++ b/examples/plot_unicode_everywhere.py
@@ -25,6 +25,7 @@ s = np.random.rand(*x.shape) * 800 + 500
 plt.scatter(x, y, s, marker=r'$\oint$')
 x = np.random.randn(60) * 7 - 4
 y = np.random.randn(60) * 3 - 2
+s = s[:x.size]
 plt.scatter(x, y, s, alpha=0.5, c='g', marker=r'$\clubsuit$')
 plt.xlabel('⇒')
 plt.ylabel('⇒')
diff --git a/sphinx_gallery/gen_gallery.py b/sphinx_gallery/gen_gallery.py
index 1a4ab02..42cc3d3 100644
--- a/sphinx_gallery/gen_gallery.py
+++ b/sphinx_gallery/gen_gallery.py
@@ -14,6 +14,7 @@ from __future__ import division, print_function, absolute_import
 import codecs
 import copy
 from datetime import timedelta, datetime
+from importlib import import_module
 import re
 import os
 from xml.sax.saxutils import quoteattr, escape
@@ -145,10 +146,19 @@ def _complete_gallery_conf(sphinx_gallery_conf, src_dir, plot_gallery,
     scrapers = list(scrapers)
     for si, scraper in enumerate(scrapers):
         if isinstance(scraper, basestring):
-            if scraper not in _scraper_dict:
-                raise ValueError('Unknown image scraper named %r' % (scraper,))
-            scrapers[si] = _scraper_dict[scraper]
-        elif not callable(scraper):
+            if scraper in _scraper_dict:
+                scraper = _scraper_dict[scraper]
+            else:
+                orig_scraper = scraper
+                try:
+                    scraper = import_module(scraper)
+                    scraper = getattr(scraper, '_get_sg_image_scraper')
+                    scraper = scraper()
+                except Exception as exp:
+                    raise ValueError('Unknown image scraper %r, got:\n%s'
+                                     % (orig_scraper, exp))
+            scrapers[si] = scraper
+        if not callable(scraper):
             raise ValueError('Scraper %r was not callable' % (scraper,))
     gallery_conf['image_scrapers'] = tuple(scrapers)
     del scrapers
diff --git a/sphinx_gallery/gen_rst.py b/sphinx_gallery/gen_rst.py
index 80160dd..1493b21 100644
--- a/sphinx_gallery/gen_rst.py
+++ b/sphinx_gallery/gen_rst.py
@@ -396,7 +396,10 @@ def _memory_usage(func, gallery_conf):
         assert callable(func)
         mem, out = memory_usage(func, max_usage=True, retval=True,
                                 multiprocess=True)
-        mem = mem[0]
+        try:
+            mem = mem[0]  # old MP always returned a list
+        except TypeError:  # 'float' object is not subscriptable
+            pass
     else:
         out = func()
         mem = 0
diff --git a/sphinx_gallery/scrapers.py b/sphinx_gallery/scrapers.py
index b0840b3..d43147b 100644
--- a/sphinx_gallery/scrapers.py
+++ b/sphinx_gallery/scrapers.py
@@ -6,6 +6,9 @@ Scrapers for embedding images
 =============================
 
 Collect images that have been produced by code blocks.
+
+The only scrapers we support are Matplotlib and Mayavi, others should
+live in modules that will support them (e.g., PyVista, Plotly).
 """
 
 import os

