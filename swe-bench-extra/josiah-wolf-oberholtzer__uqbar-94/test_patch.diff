diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
index 2e84441..d4079fa 100644
--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ -20,11 +20,11 @@ jobs:
     name: Build docs
     runs-on: ubuntu-latest
     steps:
-    - uses: actions/checkout@v3
+    - uses: actions/checkout@v4
     - name: Set up Python
-      uses: actions/setup-python@v4
+      uses: actions/setup-python@v5
       with:
-        python-version: "3.11"
+        python-version: "3.12"
         cache: pip
         cache-dependency-path: "**/pyproject.toml"
     - name: Install Uqbar
@@ -38,11 +38,11 @@ jobs:
     name: Lint
     runs-on: ubuntu-latest
     steps:
-    - uses: actions/checkout@v3
+    - uses: actions/checkout@v4
     - name: Set up Python
-      uses: actions/setup-python@v4
+      uses: actions/setup-python@v5
       with:
-        python-version: "3.11"
+        python-version: "3.12"
         cache: pip
         cache-dependency-path: "**/pyproject.toml"
     - name: Install Uqbar
@@ -61,16 +61,16 @@ jobs:
       fail-fast: false
       matrix:
         os: [ubuntu-latest]
-        python-version: ["3.8", "3.9", "3.10", "3.11"]
+        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
         include:
         - os: macos-latest
-          python-version: "3.10"
+          python-version: "3.11"
         - os: windows-latest
           python-version: "3.11"
     steps:
-    - uses: actions/checkout@v3
+    - uses: actions/checkout@v4
     - name: Set up Python ${{ matrix.python-version }}
-      uses: actions/setup-python@v4
+      uses: actions/setup-python@v5
       with:
         python-version: ${{ matrix.python-version }}
         cache: pip
diff --git a/tests/conftest.py b/tests/conftest.py
index c4414e1..f9974d7 100644
--- a/tests/conftest.py
+++ b/tests/conftest.py
@@ -1,9 +1,8 @@
-import os
-import pathlib
 import shutil
+import sys
+from pathlib import Path
 
 import pytest
-from sphinx.testing.path import path
 
 pytest_plugins = "sphinx.testing.fixtures"
 
@@ -15,16 +14,20 @@ collect_ignore = ["roots"]
 def remove_sphinx_projects(sphinx_test_tempdir):
     # Even upon exception, remove any directory from temp area
     # which looks like a Sphinx project. This ONLY runs once.
-    roots_path = pathlib.Path(sphinx_test_tempdir)
-    for d in roots_path.iterdir():
-        if d.is_dir():
-            if pathlib.Path(d, "_build").exists():
+    roots_path = Path(sphinx_test_tempdir)
+    for path in roots_path.iterdir():
+        if path.is_dir():
+            if (Path(path) / "_build").exists():
                 # This directory is a Sphinx project, remove it
-                shutil.rmtree(str(d))
-    yield
+                shutil.rmtree(path)
 
 
 @pytest.fixture()
 def rootdir(remove_sphinx_projects):
-    roots = path(os.path.dirname(__file__) or ".").abspath() / "roots"
-    yield roots
+    root_path = Path(__file__).parent / "roots"
+    if sys.version_info > (3, 8):
+        from sphinx.testing.path import path
+
+        yield path(str(root_path))
+    else:
+        yield root_path
diff --git a/tests/test_io_find_executable.py b/tests/test_io_find_executable.py
index a915807..030af81 100644
--- a/tests/test_io_find_executable.py
+++ b/tests/test_io_find_executable.py
@@ -1,12 +1,17 @@
 import platform
 import sys
+from pathlib import Path
 
 import uqbar.io
 
 
 def test_find_executable():
+    print(f"{sys.executable=}")
     file_name = "python"
     if platform.system() == "Windows":
         file_name = "python.exe"
     found = uqbar.io.find_executable(file_name)
-    assert any(sys.executable.startswith(_) for _ in found)
+    sys_executable = str(Path(sys.executable).resolve())
+    print(f"{sys_executable=}")
+    print(f"{found=}")
+    assert sys_executable in found
diff --git a/tests/test_sphinx_book.py b/tests/test_sphinx_book.py
index 1659576..89458f5 100644
--- a/tests/test_sphinx_book.py
+++ b/tests/test_sphinx_book.py
@@ -1,4 +1,3 @@
-import os
 import pathlib
 import shutil
 import sys
@@ -576,15 +575,13 @@ def test_sphinx_book_text_broken_strict(app, status, warning, rm_dirs):
         )
     )
     assert normalize(ansi_escape(warning.getvalue())) == normalize(
-        """
-        {srcdir}index.rst:15: WARNING:
+        f"""
+        {app.srcdir / "index.rst"}:15: WARNING:
             <literal_block xml:space="preserve">>>> print(this_name_does_not_exist)</literal_block>
             Traceback (most recent call last):
               File "<stdin>", line 1, in <module>
             NameError: name 'this_name_does_not_exist' is not defined
-        """.format(
-            srcdir=app.srcdir + os.path.sep
-        )
+        """
     )
 
 
