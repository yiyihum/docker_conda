diff --git a/sphinx_gallery/tests/test_backreferences.py b/sphinx_gallery/tests/test_backreferences.py
index 4aa8e44..ce5fe07 100644
--- a/sphinx_gallery/tests/test_backreferences.py
+++ b/sphinx_gallery/tests/test_backreferences.py
@@ -21,7 +21,7 @@ REFERENCE = r"""
 .. only:: html
 
   .. image:: /fake_dir/images/thumb/sphx_glr_test_file_thumb.png
-    :alt: test title
+    :alt:
 
   :ref:`sphx_glr_fake_dir_test_file.py`
 
diff --git a/sphinx_gallery/tests/test_full.py b/sphinx_gallery/tests/test_full.py
index 7c4f9fa..a90defc 100644
--- a/sphinx_gallery/tests/test_full.py
+++ b/sphinx_gallery/tests/test_full.py
@@ -866,19 +866,19 @@ def test_alt_text_thumbnail(sphinx_app):
     generated_examples_index = op.join(out_dir, 'auto_examples', 'index.html')
     with codecs.open(generated_examples_index, 'r', 'utf-8') as fid:
         html = fid.read()
-    assert 'alt="&quot;SVG&quot;:-`graphics_`"' in html
+    assert 'alt=""' in html
     # check backreferences thumbnail, html
     backref_html = op.join(out_dir, 'gen_modules',
                            'sphinx_gallery.backreferences.html')
     with codecs.open(backref_html, 'r', 'utf-8') as fid:
         html = fid.read()
-    assert 'alt="Link to other packages"' in html
+    assert 'alt=""' in html
     # check gallery index thumbnail, rst
     generated_examples_index = op.join(src_dir, 'auto_examples',
                                        'index.rst')
     with codecs.open(generated_examples_index, 'r', 'utf-8') as fid:
         rst = fid.read()
-    assert ':alt: Trivial module to provide a value for plot_numpy_matplotlib.py' in rst  # noqa: E501
+    assert ':alt:' in rst
 
 
 def test_backreference_labels(sphinx_app):
diff --git a/sphinx_gallery/tests/test_gen_rst.py b/sphinx_gallery/tests/test_gen_rst.py
index 46622e4..158cb14 100644
--- a/sphinx_gallery/tests/test_gen_rst.py
+++ b/sphinx_gallery/tests/test_gen_rst.py
@@ -295,7 +295,7 @@ def test_extract_intro_and_title():
     # Title with punctuation (gh-517)
     intro, title = sg.extract_intro_and_title('<string>',
                                               '    ------------\n"-`Header"-with:; `punct` mark\'s\n----------------')  # noqa: E501
-    assert title == '"-`Header"-with:; `punct` mark\'s'
+    assert title == '"-`Header"-with:; punct mark\'s'
 
     # Long intro paragraph gets shortened
     intro_paragraph = '\n'.join(['this is one line' for _ in range(10)])
