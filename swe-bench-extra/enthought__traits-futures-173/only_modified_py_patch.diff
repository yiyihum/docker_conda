diff --git a/examples/slow_squares.py b/examples/slow_squares.py
index 985ef70..44e0e59 100644
--- a/examples/slow_squares.py
+++ b/examples/slow_squares.py
@@ -11,7 +11,7 @@
 import random
 import time
 
-from traits.api import Button, Instance, List, Property, Range
+from traits.api import Button, Dict, Instance, List, Property, Range, Str
 from traits_futures.api import (
     CallFuture,
     CANCELLED,
@@ -27,12 +27,12 @@ from traitsui.api import (
     Handler,
     HGroup,
     Item,
+    TabularAdapter,
     TabularEditor,
     UItem,
     VGroup,
     View,
 )
-from traitsui.tabular_adapter import TabularAdapter
 
 
 def slow_square(n, timeout=5.0):
@@ -59,17 +59,19 @@ class JobTabularAdapter(TabularAdapter):
     ]
 
     #: Row colors for the table.
-    colors = {
-        CANCELLED: (255, 0, 0),
-        CANCELLING: (255, 128, 0),
-        EXECUTING: (128, 128, 255),
-        FAILED: (255, 192, 255),
-        COMPLETED: (128, 255, 128),
-        WAITING: (255, 255, 255),
-    }
+    colors = Dict(
+        {
+            CANCELLED: (255, 0, 0),
+            CANCELLING: (255, 128, 0),
+            EXECUTING: (128, 128, 255),
+            FAILED: (255, 192, 255),
+            COMPLETED: (128, 255, 128),
+            WAITING: (255, 255, 255),
+        }
+    )
 
     #: Text to be displayed for the state column.
-    state_text = Property
+    state_text = Property(Str())
 
     def _get_bg_color(self):
         return self.colors[self.item.state]
diff --git a/traits_futures/api.py b/traits_futures/api.py
index e602d12..f5ec6ea 100644
--- a/traits_futures/api.py
+++ b/traits_futures/api.py
@@ -66,6 +66,7 @@ Parallelism contexts
 --------------------
 
 - :class:`~.IParallelContext`
+- :class:`~.MultiprocessingContext`
 - :class:`~.MultithreadingContext`
 
 """
@@ -88,6 +89,7 @@ from traits_futures.future_states import (
 from traits_futures.i_future import IFuture
 from traits_futures.i_parallel_context import IParallelContext
 from traits_futures.i_task_specification import ITaskSpecification
+from traits_futures.multiprocessing_context import MultiprocessingContext
 from traits_futures.multithreading_context import MultithreadingContext
 from traits_futures.traits_executor import (
     ExecutorState,
@@ -127,5 +129,6 @@ __all__ = [
     "ITaskSpecification",
     # Contexts
     "IParallelContext",
+    "MultiprocessingContext",
     "MultithreadingContext",
 ]

