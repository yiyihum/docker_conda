diff --git a/dvc/istextfile.py b/dvc/istextfile.py
--- a/dvc/istextfile.py
+++ b/dvc/istextfile.py
@@ -5,6 +5,7 @@
 
 
 TEXT_CHARS = bytes(range(32, 127)) + b"\n\r\t\f\b"
+DEFAULT_CHUNK_SIZE = 512
 
 
 def istextblock(block):
@@ -22,7 +23,7 @@ def istextblock(block):
     return float(len(nontext)) / len(block) <= 0.30
 
 
-def istextfile(fname, fs, blocksize=512):
+def istextfile(fname, fs, blocksize=DEFAULT_CHUNK_SIZE):
     """Uses heuristics to guess whether the given file is text or binary,
     by reading a single block of bytes from the file.
     If more than 30% of the chars in the block are non-text, or there
diff --git a/dvc/utils/stream.py b/dvc/utils/stream.py
--- a/dvc/utils/stream.py
+++ b/dvc/utils/stream.py
@@ -4,7 +4,7 @@
 from funcy import cached_property
 
 from dvc.hash_info import HashInfo
-from dvc.istextfile import istextblock
+from dvc.istextfile import DEFAULT_CHUNK_SIZE, istextblock
 from dvc.utils import dos2unix
 
 
@@ -89,7 +89,7 @@ def _reader(self):
     def read(self, n=-1):
         chunk = self._reader(n)
         if self.is_text_file is None:
-            self.is_text_file = istextblock(chunk)
+            self.is_text_file = istextblock(chunk[:DEFAULT_CHUNK_SIZE])
 
         if self.is_text_file:
             data = dos2unix(chunk)
