diff --git a/tests/unit/utils/test_stream.py b/tests/unit/utils/test_stream.py
--- a/tests/unit/utils/test_stream.py
+++ b/tests/unit/utils/test_stream.py
@@ -1,4 +1,7 @@
+import pytest
+
 from dvc.fs.local import LocalFileSystem
+from dvc.istextfile import DEFAULT_CHUNK_SIZE, istextfile
 from dvc.utils import file_md5
 from dvc.utils.stream import HashedStreamReader
 
@@ -46,3 +49,26 @@ def test_hashed_stream_reader_as_chunks(tmp_dir):
     hex_digest = file_md5(foo, LocalFileSystem())
     assert not stream_reader.is_text_file
     assert hex_digest == stream_reader.hash_info.value
+
+
+@pytest.mark.parametrize(
+    "contents",
+    [b"x" * DEFAULT_CHUNK_SIZE + b"\x00", b"clean", b"not clean \x00"],
+)
+def test_hashed_stream_reader_compatibility(tmp_dir, contents):
+    # Always read more than the DEFAULT_CHUNK_SIZE (512 bytes).
+    # This imitates the read actions performed by upload_fobj.
+    chunk_size = DEFAULT_CHUNK_SIZE * 2
+
+    tmp_dir.gen("data", contents)
+    data = tmp_dir / "data"
+
+    with open(data, "rb") as fobj:
+        stream_reader = HashedStreamReader(fobj)
+        stream_reader.read(chunk_size)
+
+    local_fs = LocalFileSystem()
+    hex_digest = file_md5(data, local_fs)
+
+    assert stream_reader.is_text_file is istextfile(data, local_fs)
+    assert stream_reader.hash_info.value == hex_digest
