diff --git a/shopify/base.py b/shopify/base.py
index 65349e6..d14401e 100644
--- a/shopify/base.py
+++ b/shopify/base.py
@@ -210,5 +210,5 @@ class ShopifyResource(ActiveResource, mixins.Countable):
         """Checks the resulting collection for pagination metadata."""
         collection = super(ShopifyResource, cls).find(id_=id_, from_=from_, **kwargs)
         if isinstance(collection, Collection) and "headers" in collection.metadata:
-            return PaginatedCollection(collection, metadata={"resource_class": cls})
+            return PaginatedCollection(collection, metadata={"resource_class": cls}, **kwargs)
         return collection
diff --git a/shopify/collection.py b/shopify/collection.py
index a604b1a..b254218 100644
--- a/shopify/collection.py
+++ b/shopify/collection.py
@@ -38,14 +38,18 @@ class PaginatedCollection(Collection):
         self._next = None
         self._previous = None
         self._current_iter = None
-        self._no_iter_next = kwargs.pop("no_iter_next", False)
+        self._no_iter_next = kwargs.pop("no_iter_next", True)
 
     def __parse_pagination(self):
-        if "headers" not in self.metadata or "Link" not in self.metadata["headers"]:
+        if "headers" not in self.metadata:
             return {}
-        values = self.metadata["headers"]["Link"].split(", ")
+
+        values = self.metadata["headers"].get("Link", self.metadata["headers"].get("link", None))
+        if values is None:
+            return {}
+
         result = {}
-        for value in values:
+        for value in values.split(", "):
             link, rel = value.split("; ")
             result[rel.split('"')[1]] = link[1:-1]
         return result

