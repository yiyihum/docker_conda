diff --git a/lbuild/main.py b/lbuild/main.py
index 7593491..95016c1 100644
--- a/lbuild/main.py
+++ b/lbuild/main.py
@@ -24,7 +24,7 @@ from lbuild.format import format_option_short_description
 
 from lbuild.api import Builder
 
-__version__ = '1.4.3'
+__version__ = '1.4.4'
 
 
 class InitAction:
diff --git a/lbuild/node.py b/lbuild/node.py
index ae95df9..030ca97 100644
--- a/lbuild/node.py
+++ b/lbuild/node.py
@@ -308,7 +308,7 @@ class BaseNode(anytree.Node):
             except LbuildException as b:
                 if not ignore_failure:
                     raise LbuildException("Cannot resolve dependencies!\n" + str(b))
-                print("ignoring", dependency_name)
+                LOGGER.debug("ignoring", dependency_name)
         self._dependencies = list(dependencies)
         self._dependencies_resolved = not ignore_failure
         for child in self.children:
diff --git a/lbuild/parser.py b/lbuild/parser.py
index 7c9fb19..dbc69d0 100644
--- a/lbuild/parser.py
+++ b/lbuild/parser.py
@@ -220,7 +220,10 @@ class Parser(BaseNode):
     def find_any(self, queries, types=None):
         nodes = set()
         for query in utils.listify(queries):
-            nodes |= set(self._resolve_partial(query, set()))
+            result = self._resolve_partial(query, None)
+            if result is None:
+                raise LbuildException("Cannot resolve '{}'".format(query))
+            nodes |= set(result)
         if types:
             types = utils.listify(types)
             nodes = [n for n in nodes if any(n.type == t for t in types)]

