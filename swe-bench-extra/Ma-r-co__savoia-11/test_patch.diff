diff --git a/tests/datafeed/datafeed_test.py b/tests/datafeed/datafeed_test.py
index 083bb66..847de37 100644
--- a/tests/datafeed/datafeed_test.py
+++ b/tests/datafeed/datafeed_test.py
@@ -54,18 +54,13 @@ def test_open_convert_csv_files_for_day(
     frame including all the ticks of a specified date.
     """
     ticker, df = setupDataFeeder
-    expected_frame = pd.io.parsers.read_csv(
+    expected_frame = open(
         os.path.join(df.csv_dir, 'expected_frame_%s.csv' % (date)),
-        header=0,
-        index_col=0,
-        parse_dates=["Time"],
-        dayfirst=True,
-        names=("Time", "Ask", "Bid", "AskVolume", "BidVolume", "Pair")
+        'r'
     )
     actual_frame = df._open_convert_csv_files_for_day(date)
-    for (a0, a1), (e0, e1) in zip(actual_frame, expected_frame.iterrows()):
-        assert a0 == e0
-        pd.testing.assert_series_equal(a1, e1)
+    for a0, e0 in zip(actual_frame, expected_frame):
+        assert a0 == tuple(e0[:-1].split(','))
 
 
 def test_update_csv_for_day(setupDataFeeder: Tuple[Ticker, DataFeeder]) -> None:
@@ -75,18 +70,12 @@ def test_update_csv_for_day(setupDataFeeder: Tuple[Ticker, DataFeeder]) -> None:
     ticker, df = setupDataFeeder
     assert df._update_csv_for_day() is True
     
-    expected_frame = pd.io.parsers.read_csv(
+    expected_frame = open(
         os.path.join(df.csv_dir, 'expected_frame_%s.csv' % (20140102)),
-        header=0,
-        index_col=0,
-        parse_dates=["Time"],
-        dayfirst=True,
-        names=("Time", "Ask", "Bid", "AskVolume", "BidVolume", "Pair")
+        'r'
     )
-    for (a0, a1), (e0, e1) in zip(df.cur_date_pairs,
-                                  expected_frame.iterrows()):
-        assert a0 == e0
-        pd.testing.assert_series_equal(a1, e1)
+    for a0, e0 in zip(df.cur_date_pairs, expected_frame):
+        assert a0 == tuple(e0[:-1].split(','))
 
     assert df._update_csv_for_day() is False
 
@@ -117,4 +106,4 @@ def test_run(setupDataFeeder: Tuple[Ticker, DataFeeder]) -> None:
     ticker, df = setupDataFeeder
     df.run()
     assert df.continue_backtest is False
-    assert df.feed_q.qsize() == 10
+    assert df.feed_q.qsize() == 11
diff --git a/tests/datafeed/expected_frame_20140101.csv b/tests/datafeed/expected_frame_20140101.csv
index 3cdb2e6..38e794a 100644
--- a/tests/datafeed/expected_frame_20140101.csv
+++ b/tests/datafeed/expected_frame_20140101.csv
@@ -1,6 +1,5 @@
-Time,Ask,Bid,AskVolume,BidVolume,Pair
-01.01.2014 00:02:24.967,1.50054,1.49854,2.46,2.2,GBPUSD
-01.01.2014 00:03:24.967,120.005,119.985,2.46,2.2,USDJPY
-01.01.2014 00:04:42.625,1.49979,1.49779,1.12,2.73,GBPUSD
-01.01.2014 00:06:42.625,119.998,119.978,1.12,2.73,USDJPY
-01.01.2014 00:07:18.417,1.50256,1.50056,1.04,2.94,GBPUSD
\ No newline at end of file
+01.01.2014 00:02:24.967,1.50054,1.49854,GBPUSD
+01.01.2014 00:03:24.967,120.005,119.985,USDJPY
+01.01.2014 00:04:42.625,1.49979,1.49779,GBPUSD
+01.01.2014 00:06:42.625,119.998,119.978,USDJPY
+01.01.2014 00:07:18.417,1.50256,1.50056,GBPUSD
diff --git a/tests/datafeed/expected_frame_20140101_old.csv b/tests/datafeed/expected_frame_20140101_old.csv
new file mode 100644
index 0000000..3cdb2e6
--- /dev/null
+++ b/tests/datafeed/expected_frame_20140101_old.csv
@@ -0,0 +1,6 @@
+Time,Ask,Bid,AskVolume,BidVolume,Pair
+01.01.2014 00:02:24.967,1.50054,1.49854,2.46,2.2,GBPUSD
+01.01.2014 00:03:24.967,120.005,119.985,2.46,2.2,USDJPY
+01.01.2014 00:04:42.625,1.49979,1.49779,1.12,2.73,GBPUSD
+01.01.2014 00:06:42.625,119.998,119.978,1.12,2.73,USDJPY
+01.01.2014 00:07:18.417,1.50256,1.50056,1.04,2.94,GBPUSD
\ No newline at end of file
diff --git a/tests/datafeed/expected_frame_20140102.csv b/tests/datafeed/expected_frame_20140102.csv
index 68e3163..3743930 100644
--- a/tests/datafeed/expected_frame_20140102.csv
+++ b/tests/datafeed/expected_frame_20140102.csv
@@ -1,6 +1,5 @@
-Time,Ask,Bid,AskVolume,BidVolume,Pair
-02.01.2014 00:02:24.967,1.50054,1.49854,2.46,2.2,GBPUSD
-02.01.2014 00:03:24.967,120.005,119.985,2.46,2.2,USDJPY
-02.01.2014 00:04:42.625,1.49979,1.49779,1.12,2.73,GBPUSD
-02.01.2014 00:06:42.625,119.998,119.978,1.12,2.73,USDJPY
-02.01.2014 00:07:18.417,1.50256,1.50056,1.04,2.94,GBPUSD
\ No newline at end of file
+02.01.2014 00:02:24.967,1.50054,1.49854,GBPUSD
+02.01.2014 00:03:24.967,120.005,119.985,USDJPY
+02.01.2014 00:04:42.625,1.49979,1.49779,GBPUSD
+02.01.2014 00:06:42.625,119.998,119.978,USDJPY
+02.01.2014 00:07:18.417,1.50256,1.50056,GBPUSD
diff --git a/tests/datafeed/expected_frame_20140102_old.csv b/tests/datafeed/expected_frame_20140102_old.csv
new file mode 100644
index 0000000..68e3163
--- /dev/null
+++ b/tests/datafeed/expected_frame_20140102_old.csv
@@ -0,0 +1,6 @@
+Time,Ask,Bid,AskVolume,BidVolume,Pair
+02.01.2014 00:02:24.967,1.50054,1.49854,2.46,2.2,GBPUSD
+02.01.2014 00:03:24.967,120.005,119.985,2.46,2.2,USDJPY
+02.01.2014 00:04:42.625,1.49979,1.49779,1.12,2.73,GBPUSD
+02.01.2014 00:06:42.625,119.998,119.978,1.12,2.73,USDJPY
+02.01.2014 00:07:18.417,1.50256,1.50056,1.04,2.94,GBPUSD
\ No newline at end of file
diff --git a/tests/engine/engine_test.py b/tests/engine/engine_test.py
index 9011228..a74e11e 100644
--- a/tests/engine/engine_test.py
+++ b/tests/engine/engine_test.py
@@ -7,53 +7,60 @@ import logging.config
 import os
 import json
 
+import pytest
 
-def setup_logging() -> None:
-    """Setup logging configuration"""
-    path = os.path.join('/Users/makoto/Pywork/savoia/src/savoia/config',
-        'logging.json')
-    if os.path.exists(path):
-        with open(path, 'rt') as f:
-            config = json.load(f)
-            logging.config.dictConfig(config)
-    else:
-        raise FileNotFoundError('Not exist : %s' % path)
-
-
-datafeed: datafeed_params = {
-    'module_name': 'HistoricCSVDataFeeder',
-    'params': {
-        'csv_dir': CSV_DATA_DIR,
+
+@pytest.mark.skip()
+def test_engine_run() -> None:
+    def setup_logging() -> None:
+        """Setup logging configuration"""
+        path = os.path.join('/Users/makoto/Pywork/savoia/src/savoia/config',
+            'logging.json')
+        if os.path.exists(path):
+            with open(path, 'rt') as f:
+                config = json.load(f)
+                logging.config.dictConfig(config)
+        else:
+            raise FileNotFoundError('Not exist : %s' % path)
+
+    datafeed: datafeed_params = {
+        'module_name': 'HistoricCSVDataFeeder',
+        'params': {
+            'csv_dir': CSV_DATA_DIR,
+        }
+    }
+
+    execution: execution_params = {
+        'module_name': 'SimulatedExecution',
+        'params': {
+            'heartbeat': 0
+        }
+    }
+
+    strategy: strategy_params = {
+        'module_name': 'DummyStrategy',
+        'params': {}
     }
-}
 
-execution: execution_params = {
-    'module_name': 'SimulatedExecution',
-    'params': {
-        'heartbeat': 0
+    engine: engine_params = {
+        'pairs': ['GBPUSD', 'USDJPY'],
+        'home_currency': 'JPY',
+        'equity': Decimal(10 ** 6),
+        'isBacktest': True,
+        'max_iters': 10 ** 7,
+        'heart_beat': 0
     }
-}
-
-strategy: strategy_params = {
-    'module_name': 'DummyStrategy',
-    'params': {}
-}
-
-engine: engine_params = {
-    'pairs': ['GBPUSD', 'USDJPY'],
-    'home_currency': 'JPY',
-    'equity': Decimal(10 ** 6),
-    'isBacktest': True,
-    'max_iters': 10 ** 7,
-    'heart_beat': 0
-}
-
-eg = Engine(
-    engine=engine,
-    datafeed=datafeed,
-    execution=execution,
-    strategy=strategy
-)
-
-setup_logging()
-eg.run()
+
+    eg = Engine(
+        engine=engine,
+        datafeed=datafeed,
+        execution=execution,
+        strategy=strategy
+    )
+
+    setup_logging()
+    eg.run()
+
+
+if __name__ == '__main__':
+    test_engine_run()
diff --git a/tests/portfolio/portfolio_test.py b/tests/portfolio/portfolio_test.py
index 05939df..12f1982 100644
--- a/tests/portfolio/portfolio_test.py
+++ b/tests/portfolio/portfolio_test.py
@@ -64,7 +64,7 @@ def test_create_equity_file(port: Portfolio) -> None:
 
     out_file.close()
     with open(filepath, "r") as f:
-        assert f.read() == "Timestamp,Balance,GBPUSD,USDJPY\n"
+        assert f.read() == "Timestamp,Equity,GBPUSD,USDJPY\n"
 
 
 # ================================================================
