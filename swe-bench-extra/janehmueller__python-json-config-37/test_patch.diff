diff --git a/tests/config_builder_test.py b/tests/config_builder_test.py
index 0997bd8..56fac8a 100644
--- a/tests/config_builder_test.py
+++ b/tests/config_builder_test.py
@@ -151,16 +151,18 @@ class ConfigBuilderTest(TestCase):
         builder.parse_config(self.path)
 
     def test_merge_env_variable(self):
-        builder = ConfigBuilder()
         prefix = "PYTHONJSONCONFIG"
         variables = {f"{prefix}_TESTVALUE1": "bla", f"{prefix}_TESTVALUE2": "1"}
         for key, value in variables.items():
             os.environ[key] = value
-        builder.merge_with_env_variables(prefix)
-        for key, value in variables.items():
-            del os.environ[key]
 
+        builder = ConfigBuilder()
+        builder.merge_with_env_variables(prefix)
         config = builder.parse_config({"testvalue1": "blub", "testvalue3": 5})
+
         self.assertEqual(config.testvalue1, "bla")
         self.assertEqual(config.testvalue2, "1")
         self.assertEqual(config.testvalue3, 5)
+
+        for key, value in variables.items():
+            del os.environ[key]
diff --git a/tests/config_node/test_crud.py b/tests/config_node/test_crud.py
index 7dc8f02..cf61183 100644
--- a/tests/config_node/test_crud.py
+++ b/tests/config_node/test_crud.py
@@ -1,3 +1,4 @@
+import os
 import warnings
 from unittest import TestCase
 
@@ -117,3 +118,19 @@ class ConfigNodeCrudTest(TestCase):
             self.assertIsNone(config.key2.nokey)
         with self.assertRaises(AttributeError):
             self.assertIsNone(config.key2.nokey2)
+
+    def test_merge_env_variable(self):
+        prefix = "PYTHONJSONCONFIG"
+        variables = {f"{prefix}_TESTVALUE1": "bla", f"{prefix}_TESTVALUE2": "1"}
+        for key, value in variables.items():
+            os.environ[key] = value
+
+        config = ConfigNode({"testvalue1": "blub", "testvalue3": 5})
+        config.merge_with_env_variables(prefix)
+
+        self.assertEqual(config.testvalue1, "bla")
+        self.assertEqual(config.testvalue2, "1")
+        self.assertEqual(config.testvalue3, 5)
+
+        for key, value in variables.items():
+            del os.environ[key]
