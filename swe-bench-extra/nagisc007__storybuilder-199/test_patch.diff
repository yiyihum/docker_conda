diff --git a/tests/test_tools.py b/tests/test_tools.py
index 0c003c1..bbbcc7c 100644
--- a/tests/test_tools.py
+++ b/tests/test_tools.py
@@ -340,23 +340,17 @@ class PrivateMethodsTest(unittest.TestCase):
 
 
     def test_story_converted_as_description_in_group(self):
-        self.assertEqual(tools._story_converted_as_description_in_group(self.story, self.story.group_type, 1, False),
-                ["# Taro and Hanako\n",
-                    " a cute girl come in. ",
-                    ' "Nice to meet you" ',
-                    ' "I\'m not fine" '])
-
-    def test_story_converted_as_description_in_group_with_combi(self):
-        ma = Master('test')
         data = [
-                (ma.story(self.taro.talk().d("test"), self.hanako.talk().d("apple")),
+                (self.ma.story("Taro and Hanako", self.taro.talk().d("test"), self.hanako.talk().d("apple"), lang=LangType.ENG),
+                    GroupType.STORY,
+                    ["# Taro and Hanako\n", " test. ", " apple. "]),
+                (self.ma.story(self.taro.talk().d("test"), self.hanako.talk().d("apple")),
                     GroupType.COMBI,
-                    "　test。apple。"),
-                (ma.story(self.taro.talk().d("test"), self.hanako.talk().d("apple"), lang=LangType.ENG),
+                    ["　test。apple。"]),
+                (self.ma.story(self.taro.talk().d("test"), self.hanako.talk().d("apple"), lang=LangType.ENG),
                     GroupType.COMBI,
-                    " test. apple. "),
+                    [" test. apple. "]),
                 ]
-
         for v, gtype, expected in data:
             with self.subTest(v=v, gtype=gtype, expected=expected):
                 self.assertEqual(tools._story_converted_as_description_in_group(
