diff --git a/tests/protocols/test_http.py b/tests/protocols/test_http.py
index c1cd9dc..f1b3ca1 100644
--- a/tests/protocols/test_http.py
+++ b/tests/protocols/test_http.py
@@ -240,6 +240,35 @@ def test_chunked_encoding(protocol_cls):
     assert not protocol.transport.is_closing()
 
 
+@pytest.mark.parametrize("protocol_cls", [HttpToolsProtocol, H11Protocol])
+def test_chunked_encoding_empty_body(protocol_cls):
+    class App():
+        def __init__(self, scope):
+            assert scope['type'] == 'http'
+            self.scope = scope
+
+        async def __call__(self, receive, send):
+            await send({
+                'type': 'http.response.start',
+                'status': 200,
+                'headers': [
+                    [b'content-type', b'text/plain'],
+                ],
+            })
+            await send({
+                'type': 'http.response.body',
+                'body': b'',
+            })
+
+    protocol = get_connected_protocol(App, protocol_cls)
+    protocol.data_received(SIMPLE_GET_REQUEST)
+    protocol.loop.run_one()
+    assert b"HTTP/1.1 200 OK" in protocol.transport.buffer
+    print(protocol.transport.buffer)
+    assert protocol.transport.buffer.count(b'0\r\n\r\n') == 1
+    assert not protocol.transport.is_closing()
+
+
 @pytest.mark.parametrize("protocol_cls", [HttpToolsProtocol, H11Protocol])
 def test_pipelined_requests(protocol_cls):
     def app(scope):
