diff --git a/tests/func/test_diff.py b/tests/func/test_diff.py
--- a/tests/func/test_diff.py
+++ b/tests/func/test_diff.py
@@ -209,3 +209,8 @@ def test_diff_dirty(tmp_dir, scm, dvc):
             }
         ],
     }
+
+
+def test_no_changes(tmp_dir, scm, dvc):
+    tmp_dir.dvc_gen("file", "first", commit="add a file")
+    assert dvc.diff() == {}
diff --git a/tests/unit/command/test_diff.py b/tests/unit/command/test_diff.py
--- a/tests/unit/command/test_diff.py
+++ b/tests/unit/command/test_diff.py
@@ -1,5 +1,6 @@
 import collections
 import os
+import logging
 
 from dvc.cli import parse_args
 
@@ -86,3 +87,26 @@ def test_show_json_and_hash(mocker, caplog):
     assert '"added": [{"path": "file", "hash": "00000000"}]' in caplog.text
     assert '"deleted": []' in caplog.text
     assert '"modified": []' in caplog.text
+
+
+def test_no_changes(mocker, caplog):
+    args = parse_args(["diff", "--show-json"])
+    cmd = args.func(args)
+    mocker.patch("dvc.repo.Repo.diff", return_value={})
+
+    def info():
+        return [
+            msg
+            for name, level, msg in caplog.record_tuples
+            if name.startswith("dvc") and level == logging.INFO
+        ]
+
+    assert 0 == cmd.run()
+    assert ["{}"] == info()
+
+    caplog.clear()
+
+    args = parse_args(["diff"])
+    cmd = args.func(args)
+    assert 0 == cmd.run()
+    assert not info()
diff --git a/tests/unit/test_plot.py b/tests/unit/test_plot.py
--- a/tests/unit/test_plot.py
+++ b/tests/unit/test_plot.py
@@ -1,3 +1,5 @@
+from collections import OrderedDict
+
 import pytest
 
 from dvc.repo.plot.data import _apply_path, _lists, _find_data
@@ -26,7 +28,7 @@ def test_parse_json(path, expected_result):
         ({}, []),
         ({"x": ["a", "b", "c"]}, [["a", "b", "c"]]),
         (
-            {"x": {"y": ["a", "b"]}, "z": {"w": ["c", "d"]}},
+            OrderedDict([("x", {"y": ["a", "b"]}), ("z", {"w": ["c", "d"]})]),
             [["a", "b"], ["c", "d"]],
         ),
     ],
