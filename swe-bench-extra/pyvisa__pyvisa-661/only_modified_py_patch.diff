diff --git a/pyvisa/constants.py b/pyvisa/constants.py
index da320a4..ecfeea0 100644
--- a/pyvisa/constants.py
+++ b/pyvisa/constants.py
@@ -18,7 +18,7 @@ import sys
 
 from typing_extensions import Literal
 
-is_64bits = sys.maxsize > 2 ** 32
+is_64bits = sys.maxsize > 2**32
 
 
 def _to_int(x: int) -> int:
diff --git a/pyvisa/highlevel.py b/pyvisa/highlevel.py
index af43216..720517e 100644
--- a/pyvisa/highlevel.py
+++ b/pyvisa/highlevel.py
@@ -3268,7 +3268,6 @@ class ResourceManager(object):
             Subclass of Resource matching the resource.
 
         """
-
         if resource_pyclass is None:
             info = self.resource_info(resource_name, extended=True)
 
@@ -3286,27 +3285,31 @@ class ResourceManager(object):
                     "There is no class defined for %r. Using Resource",
                     (info.interface_type, info.resource_class),
                 )
-
-        res = resource_pyclass(self, resource_name)
-        for key in kwargs.keys():
-            try:
-                getattr(res, key)
-                present = True
-            except AttributeError:
-                present = False
-            except errors.InvalidSession:
-                present = True
-
-            if not present:
-                raise ValueError(
-                    "%r is not a valid attribute for type %s"
-                    % (key, res.__class__.__name__)
-                )
-
-        res.open(access_mode, open_timeout)
-
-        for key, value in kwargs.items():
-            setattr(res, key, value)
+        if hasattr(self.visalib, "open_resource"):
+            res = self.visalib.open_resource(  # type: ignore
+                resource_name, access_mode, open_timeout, resource_pyclass, **kwargs
+            )
+        else:
+            res = resource_pyclass(self, resource_name)
+            for key in kwargs.keys():
+                try:
+                    getattr(res, key)
+                    present = True
+                except AttributeError:
+                    present = False
+                except errors.InvalidSession:
+                    present = True
+
+                if not present:
+                    raise ValueError(
+                        "%r is not a valid attribute for type %s"
+                        % (key, res.__class__.__name__)
+                    )
+
+            res.open(access_mode, open_timeout)
+
+            for key, value in kwargs.items():
+                setattr(res, key, value)
 
         self._created_resources.add(res)
 
diff --git a/pyvisa/shell.py b/pyvisa/shell.py
index 4712921..3e0d6d4 100644
--- a/pyvisa/shell.py
+++ b/pyvisa/shell.py
@@ -328,7 +328,7 @@ class VisaShell(cmd.Cmd):
 
         if not args:
             try:
-                charmap = {u"\r": "CR", u"\n": "LF", u"\r\n": "CRLF", u"\0": "NUL"}
+                charmap = {"\r": "CR", "\n": "LF", "\r\n": "CRLF", "\0": "NUL"}
                 chr = self.current.read_termination
                 if chr in charmap:
                     chr = charmap[chr]
@@ -349,10 +349,10 @@ class VisaShell(cmd.Cmd):
             )
         else:
             charmap = {
-                "CR": u"\r",
-                "LF": u"\n",
-                "CRLF": u"\r\n",
-                "NUL": u"\0",
+                "CR": "\r",
+                "LF": "\n",
+                "CRLF": "\r\n",
+                "NUL": "\0",
                 "None": None,
             }
             chr = args[0]

