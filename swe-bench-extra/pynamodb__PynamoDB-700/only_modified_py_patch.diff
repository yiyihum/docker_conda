diff --git a/pynamodb/connection/table.py b/pynamodb/connection/table.py
index 9b6d5c4..a804136 100644
--- a/pynamodb/connection/table.py
+++ b/pynamodb/connection/table.py
@@ -22,7 +22,8 @@ class TableConnection(object):
                  max_pool_connections=None,
                  extra_headers=None,
                  aws_access_key_id=None,
-                 aws_secret_access_key=None):
+                 aws_secret_access_key=None,
+                 aws_session_token=None):
         self._hash_keyname = None
         self._range_keyname = None
         self.table_name = table_name
@@ -37,7 +38,8 @@ class TableConnection(object):
 
         if aws_access_key_id and aws_secret_access_key:
             self.connection.session.set_credentials(aws_access_key_id,
-                                                    aws_secret_access_key)
+                                                    aws_secret_access_key,
+                                                    aws_session_token)
 
     def get_meta_table(self, refresh=False):
         """
diff --git a/pynamodb/models.py b/pynamodb/models.py
index 1481127..fe7a485 100644
--- a/pynamodb/models.py
+++ b/pynamodb/models.py
@@ -208,6 +208,8 @@ class MetaModel(AttributeContainerMeta):
                         setattr(attr_obj, 'aws_access_key_id', None)
                     if not hasattr(attr_obj, 'aws_secret_access_key'):
                         setattr(attr_obj, 'aws_secret_access_key', None)
+                    if not hasattr(attr_obj, 'aws_session_token'):
+                        setattr(attr_obj, 'aws_session_token', None)
                 elif isinstance(attr_obj, Index):
                     attr_obj.Meta.model = cls
                     if not hasattr(attr_obj.Meta, "index_name"):
@@ -1042,7 +1044,8 @@ class Model(AttributeContainer):
                                               max_pool_connections=cls.Meta.max_pool_connections,
                                               extra_headers=cls.Meta.extra_headers,
                                               aws_access_key_id=cls.Meta.aws_access_key_id,
-                                              aws_secret_access_key=cls.Meta.aws_secret_access_key)
+                                              aws_secret_access_key=cls.Meta.aws_secret_access_key,
+                                              aws_session_token=cls.Meta.aws_session_token)
         return cls._connection
 
     def _deserialize(self, attrs):

