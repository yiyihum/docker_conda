diff --git a/h_transport_materials/properties_group.py b/h_transport_materials/properties_group.py
index ccc4b5f..1099a1b 100644
--- a/h_transport_materials/properties_group.py
+++ b/h_transport_materials/properties_group.py
@@ -92,9 +92,15 @@ class PropertiesGroup(list):
             default_range (tuple, optional): temperature range taken if
                 a Property doesn't have range. Defaults to (300, 1200).
 
+        Raises:
+            ValueError: When called on a mixed units group
+
         Returns:
             ArrheniusProperty: the mean arrhenius property
         """
+        if self.units == "mixed units":
+            raise ValueError("Can't compute mean on mixed units groups")
+
         # initialise data points
         data_T = np.array([])
         data_y = np.array([])
diff --git a/h_transport_materials/property.py b/h_transport_materials/property.py
index c2d7cee..b9994e2 100644
--- a/h_transport_materials/property.py
+++ b/h_transport_materials/property.py
@@ -184,6 +184,15 @@ class ArrheniusProperty(Property):
 
     @property
     def units(self):
+        # check if data_y is set
+        if hasattr(self, "data_y"):
+            if self.data_y is not None:
+                return self.data_y.units
+        # check if pre_exp is set
+        if hasattr(self, "pre_exp"):
+            return self.pre_exp.units
+
+        # return dimensionless by default
         return ureg.dimensionless
 
     @property

