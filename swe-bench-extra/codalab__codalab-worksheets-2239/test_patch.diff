diff --git a/tests/files/ignore_test/__MACOSX/ignored.txt b/tests/files/ignore_test/__MACOSX/ignored.txt
new file mode 100644
index 00000000..ea10ec85
--- /dev/null
+++ b/tests/files/ignore_test/__MACOSX/ignored.txt
@@ -0,0 +1,1 @@
+ignored
diff --git a/tests/files/ignore_test/dir/__MACOSX/ignored.txt b/tests/files/ignore_test/dir/__MACOSX/ignored.txt
new file mode 100644
index 00000000..ea10ec85
--- /dev/null
+++ b/tests/files/ignore_test/dir/__MACOSX/ignored.txt
@@ -0,0 +1,1 @@
+ignored
diff --git a/tests/worker/file_util_test.py b/tests/worker/file_util_test.py
index 5b9817e4..8f539ee4 100644
--- a/tests/worker/file_util_test.py
+++ b/tests/worker/file_util_test.py
@@ -80,3 +80,17 @@ class FileUtilTest(unittest.TestCase):
         self.assertNotIn('ignored_dir', output_dir_entries)
         self.assertTrue(os.path.exists(os.path.join(output_dir, 'dir', 'not_ignored2.txt')))
         self.assertFalse(os.path.exists(os.path.join(output_dir, 'dir', 'ignored2.txt')))
+
+    def test_tar_always_ignore(self):
+        dir = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'files/ignore_test')
+        temp_dir = tempfile.mkdtemp()
+        self.addCleanup(lambda: remove_path(temp_dir))
+        output_dir = os.path.join(temp_dir, 'output')
+
+        un_tar_directory(tar_gzip_directory(dir), output_dir, 'gz')
+        output_dir_entries = os.listdir(output_dir)
+        self.assertNotIn('._ignored', output_dir_entries)
+        self.assertIn('dir', output_dir_entries)
+        self.assertNotIn('__MACOSX', output_dir_entries)
+        self.assertFalse(os.path.exists(os.path.join(output_dir, 'dir', '__MACOSX')))
+        self.assertFalse(os.path.exists(os.path.join(output_dir, 'dir', '._ignored2')))
