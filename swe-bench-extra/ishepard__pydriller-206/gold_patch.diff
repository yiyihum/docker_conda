diff --git a/pydriller/git.py b/pydriller/git.py
index 3beaf5a..4359222 100644
--- a/pydriller/git.py
+++ b/pydriller/git.py
@@ -297,19 +297,23 @@ class Git:
                line.startswith('"""') or \
                line.startswith("*")
 
-    def get_commits_modified_file(self, filepath: str) -> List[str]:
+    def get_commits_modified_file(self, filepath: str, include_deleted_files=False) -> List[str]:
         """
         Given a filepath, returns all the commits that modified this file
         (following renames).
 
         :param str filepath: path to the file
+        :param bool include_deleted_files: if True, include commits that modifies a deleted file
         :return: the list of commits' hash
         """
         path = str(Path(filepath))
 
         commits = []
         try:
-            commits = self.repo.git.log("--follow", "--format=%H", path).split('\n')
+            if include_deleted_files:
+                commits = self.repo.git.log("--follow", "--format=%H", "--", path).split('\n')
+            else:
+                commits = self.repo.git.log("--follow", "--format=%H", path).split('\n')
         except GitCommandError:
             logger.debug(f"Could not find information of file {path}")
 
diff --git a/pydriller/repository.py b/pydriller/repository.py
index 9433985..d6079d4 100644
--- a/pydriller/repository.py
+++ b/pydriller/repository.py
@@ -56,6 +56,7 @@ class Repository:
                  only_commits: List[str] = None,
                  only_releases: bool = False,
                  filepath: str = None,
+                 include_deleted_files: bool = False,
                  histogram_diff: bool = False,
                  skip_whitespaces: bool = False,
                  clone_repo_to: str = None,
@@ -97,6 +98,7 @@ class Repository:
         :param bool skip_whitespaces: add the "-w" option when asking for the diff
         :param bool clone_repo_to: if the repo under analysis is remote, clone the repo to the specified directory
         :param str filepath: only commits that modified this file will be analyzed
+        :param bool include_deleted_files: include commits modifying a deleted file (useful when analyzing a deleted `filepath`)
         :param str order: order of commits. It can be one of: 'date-order',
             'author-date-order', 'topo-order', or 'reverse'. Default is reverse.
         """
@@ -130,6 +132,7 @@ class Repository:
             "only_releases": only_releases,
             "skip_whitespaces": skip_whitespaces,
             "filepath": filepath,
+            "include_deleted_files": include_deleted_files,
             "filepath_commits": None,
             "tagged_commits": None,
             "histogram": histogram_diff,
@@ -215,7 +218,11 @@ class Repository:
                 # git rev-list since it doesn't have the option --follow, necessary to follow
                 # the renames. Hence, we manually call git log instead
                 if self._conf.get('filepath') is not None:
-                    self._conf.set_value('filepath_commits', git.get_commits_modified_file(self._conf.get('filepath')))
+                    self._conf.set_value(
+                        'filepath_commits',
+                        git.get_commits_modified_file(self._conf.get('filepath'),
+                                                      self._conf.get('include_deleted_files'))
+                    )
 
                 # Gets only the commits that are tagged
                 if self._conf.get('only_releases'):
