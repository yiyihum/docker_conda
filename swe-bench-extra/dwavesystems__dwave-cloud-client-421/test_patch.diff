diff --git a/tests/test_cli.py b/tests/test_cli.py
index 162456b..887f6e1 100644
--- a/tests/test_cli.py
+++ b/tests/test_cli.py
@@ -348,6 +348,19 @@ class TestCli(unittest.TestCase):
 
         self.assertEqual(result.exit_code, 0)
 
+    def test_platform(self):
+        runner = CliRunner()
+        result = runner.invoke(cli, ['--platform'])
+
+        # verify exit code and stdout printout
+        self.assertEqual(result.exit_code, 0)
+
+        from dwave.cloud.package_info import __packagename__, __version__
+        self.assertNotIn(__packagename__, result.output)
+        required = ['python', 'machine', 'system', 'platform']
+        for key in required:
+            self.assertIn(key, result.output)
+
 
 if __name__ == '__main__':
     unittest.main()
diff --git a/tests/test_utils.py b/tests/test_utils.py
index 1ea5bda..2ec424f 100644
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -22,7 +22,8 @@ from datetime import datetime
 from dwave.cloud.utils import (
     uniform_iterator, uniform_get, strip_head, strip_tail,
     active_qubits, generate_random_ising_problem,
-    default_text_input, utcnow, cached, retried, parse_loglevel)
+    default_text_input, utcnow, cached, retried, parse_loglevel,
+    user_agent)
 
 
 class TestSimpleUtils(unittest.TestCase):
@@ -138,6 +139,14 @@ class TestSimpleUtils(unittest.TestCase):
         self.assertEqual(parse_loglevel(str(logging.INFO)), logging.INFO)
         self.assertEqual(parse_loglevel('  %d  ' % logging.INFO), logging.INFO)
 
+    def test_user_agent(self):
+        from dwave.cloud.package_info import __packagename__, __version__
+        ua = user_agent(__packagename__, __version__)
+
+        required = [__packagename__, 'python', 'machine', 'system', 'platform']
+        for key in required:
+            self.assertIn(key, ua)
+
 
 class TestCachedDecorator(unittest.TestCase):
 
