diff --git a/tests/unit/remote/test_base.py b/tests/unit/remote/test_base.py
--- a/tests/unit/remote/test_base.py
+++ b/tests/unit/remote/test_base.py
@@ -5,7 +5,7 @@
 
 from dvc.cache.base import CloudCache
 from dvc.path_info import PathInfo
-from dvc.tree.base import BaseTree, RemoteCmdError, RemoteMissingDepsError
+from dvc.tree.base import BaseTree, RemoteCmdError
 
 
 class _CallableOrNone:
@@ -18,13 +18,6 @@ def __eq__(self, other):
 CallableOrNone = _CallableOrNone()
 
 
-def test_missing_deps(dvc):
-    requires = {"missing": "missing"}
-    with mock.patch.object(BaseTree, "REQUIRES", requires):
-        with pytest.raises(RemoteMissingDepsError):
-            BaseTree(dvc, {})
-
-
 def test_cmd_error(dvc):
     config = {}
 
diff --git a/tests/unit/tree/test_base.py b/tests/unit/tree/test_base.py
new file mode 100644
--- /dev/null
+++ b/tests/unit/tree/test_base.py
@@ -0,0 +1,19 @@
+import pytest
+
+from dvc.tree.base import BaseTree, RemoteMissingDepsError
+
+
+@pytest.mark.parametrize(
+    "pkg, msg",
+    [
+        (None, "Please report this bug to"),
+        ("pip", "pip install"),
+        ("conda", "conda install"),
+    ],
+)
+def test_missing_deps(pkg, msg, mocker):
+    requires = {"missing": "missing"}
+    mocker.patch.object(BaseTree, "REQUIRES", requires)
+    mocker.patch("dvc.utils.pkg.PKG", pkg)
+    with pytest.raises(RemoteMissingDepsError, match=msg):
+        BaseTree(None, {})
