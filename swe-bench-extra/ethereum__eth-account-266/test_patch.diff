diff --git a/tests/core/test_accounts.py b/tests/core/test_accounts.py
index df0b2a6..2ee3d6f 100644
--- a/tests/core/test_accounts.py
+++ b/tests/core/test_accounts.py
@@ -716,7 +716,13 @@ def test_eth_account_sign_transaction(
     assert signed.r == signed["r"] == r
     assert signed.s == signed["s"] == s
     assert signed.v == signed["v"] == v
-    assert signed.rawTransaction == signed["rawTransaction"] == expected_raw_tx
+    with pytest.warns(
+        DeprecationWarning,
+        match="rawTransaction on SignedTransaction is deprecated in favor "
+        "of raw_transaction",
+    ):
+        assert signed.rawTransaction == signed["rawTransaction"] == expected_raw_tx
+    assert signed.raw_transaction == signed["raw_transaction"] == expected_raw_tx
     assert signed.hash == signed["hash"] == tx_hash
 
     account = acct.from_key(private_key)
@@ -743,7 +749,7 @@ def test_eth_account_sign_transaction_from_eth_test(acct, transaction):
 
     # confirm that signed transaction can be recovered to the sender
     expected_sender = acct.from_key(key).address
-    assert acct.recover_transaction(signed.rawTransaction) == expected_sender
+    assert acct.recover_transaction(signed.raw_transaction) == expected_sender
 
 
 @pytest.mark.parametrize(
diff --git a/tests/core/test_blob_transactions.py b/tests/core/test_blob_transactions.py
index 844e86a..4db789f 100644
--- a/tests/core/test_blob_transactions.py
+++ b/tests/core/test_blob_transactions.py
@@ -98,7 +98,7 @@ def test_sign_blob_transaction_with_zero_blob_and_compare_with_tx_from_bytes():
         signed_tx_from_file = to_bytes(hexstr=signed_tx_file.read().strip("\n"))
 
     signed_tx = TEST_ACCT.sign_transaction(BLOB_TX_DICT, blobs=[ZERO_BLOB])
-    assert signed_tx.rawTransaction == HexBytes(signed_tx_from_file)
+    assert signed_tx.raw_transaction == HexBytes(signed_tx_from_file)
 
     # test `from_bytes()` creates `blob_data`
     tx_from_bytes = BlobTransaction.from_bytes(HexBytes(signed_tx_from_file))
@@ -150,7 +150,7 @@ def test_blob_transaction_calculation_with_nonzero_blob():
         blob_data_1_signed = to_bytes(hexstr=blob_data_1_signed_file.read().strip("\n"))
 
     signed = TEST_ACCT.sign_transaction(tx.dictionary, blobs=[blob_data_1])
-    assert blob_data_1_signed == signed.rawTransaction
+    assert blob_data_1_signed == signed.raw_transaction
 
 
 def test_high_and_low_blob_count_limit_validation():
