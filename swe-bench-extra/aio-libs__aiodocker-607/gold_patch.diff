diff --git a/CHANGES/536.bugfix b/CHANGES/536.bugfix
new file mode 100644
index 0000000..b11338a
--- /dev/null
+++ b/CHANGES/536.bugfix
@@ -0,0 +1,1 @@
+Use ssl_context passsed to Docker constructor for creating underlying connection to docker engine.
diff --git a/CHANGES/608.bugfix b/CHANGES/608.bugfix
new file mode 100644
index 0000000..0020f4f
--- /dev/null
+++ b/CHANGES/608.bugfix
@@ -0,0 +1,1 @@
+Fix an error when attach/exec when container stops before close connection to it.
diff --git a/aiodocker/docker.py b/aiodocker/docker.py
index 99c3040..7c5c2ef 100644
--- a/aiodocker/docker.py
+++ b/aiodocker/docker.py
@@ -109,8 +109,9 @@ class Docker:
             WIN_PRE_LEN = len(WIN_PRE)
             if _rx_tcp_schemes.search(docker_host):
                 if os.environ.get("DOCKER_TLS_VERIFY", "0") == "1":
-                    ssl_context = self._docker_machine_ssl_context()
-                    docker_host = _rx_tcp_schemes.sub("https://", docker_host)
+                    if ssl_context is None:
+                        ssl_context = self._docker_machine_ssl_context()
+                        docker_host = _rx_tcp_schemes.sub("https://", docker_host)
                 else:
                     ssl_context = None
                 connector = aiohttp.TCPConnector(ssl=ssl_context)
diff --git a/aiodocker/stream.py b/aiodocker/stream.py
index d1365dd..0ee8da3 100644
--- a/aiodocker/stream.py
+++ b/aiodocker/stream.py
@@ -115,7 +115,7 @@ class Stream:
             return
         self._closed = True
         transport = self._resp.connection.transport
-        if transport.can_write_eof():
+        if transport and transport.can_write_eof():
             transport.write_eof()
         self._resp.close()
 
