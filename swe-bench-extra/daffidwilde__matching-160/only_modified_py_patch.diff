diff --git a/src/matching/__init__.py b/src/matching/__init__.py
index 953918d..44499ba 100644
--- a/src/matching/__init__.py
+++ b/src/matching/__init__.py
@@ -11,7 +11,7 @@ from .base import BaseGame, BaseMatching, BasePlayer
 from .matchings import MultipleMatching, SingleMatching
 from .players import Hospital, Player, Project, Supervisor
 
-__version__ = "1.4.1"
+__version__ = "1.4.2"
 
 __all__ = [
     "BaseGame",
diff --git a/src/matching/base.py b/src/matching/base.py
index 629c690..c2fe788 100644
--- a/src/matching/base.py
+++ b/src/matching/base.py
@@ -47,9 +47,7 @@ class BasePlayer:
         """Forget another player by removing them from the player's preference
         list."""
 
-        prefs = self.prefs[:]
-        prefs.remove(other)
-        self.prefs = prefs
+        self.prefs = [p for p in self.prefs if p != other]
 
     def unmatched_message(self):
         """Message to say the player is not matched."""
@@ -134,10 +132,9 @@ class BaseGame(metaclass=abc.ABCMeta):
         preference lists, removing their memory from the game.
         """
 
-        party = vars(self)[player_party][:]
-        party.remove(player)
-        vars(self)[player_party].remove(player)
-        for other in vars(self)[other_party]:
+        party = getattr(self, player_party)[:]
+        setattr(self, player_party, [p for p in party if p != player])
+        for other in getattr(self, other_party):
             if player in other.prefs:
                 other._forget(player)
 
diff --git a/src/matching/games/student_allocation.py b/src/matching/games/student_allocation.py
index 8d9c4d2..0f576d0 100644
--- a/src/matching/games/student_allocation.py
+++ b/src/matching/games/student_allocation.py
@@ -89,10 +89,7 @@ class StudentAllocation(HospitalResident):
         if player_party == "supervisors":
             self.supervisors.remove(player)
             for project in player.projects:
-                try:
-                    super()._remove_player(project, "projects", "students")
-                except ValueError:
-                    pass
+                super()._remove_player(project, "projects", "students")
 
         else:
             super()._remove_player(player, player_party, other_party)
