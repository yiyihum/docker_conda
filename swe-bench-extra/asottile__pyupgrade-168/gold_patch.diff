diff --git a/pyupgrade.py b/pyupgrade.py
index 7313835..5a25ec8 100644
--- a/pyupgrade.py
+++ b/pyupgrade.py
@@ -1023,6 +1023,7 @@ class FindPy3Plus(ast.NodeVisitor):
         self._class_info_stack = []
         self._in_comp = 0
         self.super_calls = {}
+        self._in_async_def = False
         self.yield_from_fors = set()
 
     def _is_six(self, node, names):
@@ -1101,7 +1102,17 @@ class FindPy3Plus(ast.NodeVisitor):
         else:
             self.generic_visit(node)
 
-    visit_FunctionDef = visit_Lambda = _visit_func
+    def _visit_sync_func(self, node):
+        self._in_async_def, orig = False, self._in_async_def
+        self._visit_func(node)
+        self._in_async_def = orig
+
+    visit_FunctionDef = visit_Lambda = _visit_sync_func
+
+    def visit_AsyncFunctionDef(self, node):  # pragma: no cover (py35+)
+        self._in_async_def, orig = True, self._in_async_def
+        self._visit_func(node)
+        self._in_async_def = orig
 
     def _visit_comp(self, node):
         self._in_comp += 1
@@ -1235,6 +1246,7 @@ class FindPy3Plus(ast.NodeVisitor):
 
     def visit_For(self, node):  # type: (ast.For) -> None
         if (
+            not self._in_async_def and
             len(node.body) == 1 and
             isinstance(node.body[0], ast.Expr) and
             isinstance(node.body[0].value, ast.Yield) and
