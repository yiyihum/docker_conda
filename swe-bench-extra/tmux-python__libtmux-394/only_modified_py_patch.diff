diff --git a/docs/conf.py b/docs/conf.py
index 7264b73..cb7f649 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -10,7 +10,7 @@ import libtmux  # NOQA
 from libtmux import test  # NOQA
 
 # Get the project root dir, which is the parent dir of this
-cwd = Path.cwd()
+cwd = Path(__file__).parent
 project_root = cwd.parent
 
 sys.path.insert(0, str(project_root))
@@ -18,7 +18,7 @@ sys.path.insert(0, str(cwd / "_ext"))
 
 # package data
 about: Dict[str, str] = {}
-with open("../libtmux/__about__.py") as fp:
+with open(project_root / "libtmux" / "__about__.py") as fp:
     exec(fp.read(), about)
 
 extensions = [
diff --git a/libtmux/pane.py b/libtmux/pane.py
index 2e93dda..191dade 100644
--- a/libtmux/pane.py
+++ b/libtmux/pane.py
@@ -36,6 +36,20 @@ class Pane(TmuxMappingObject):
     ----------
     window : :class:`Window`
 
+    Examples
+    --------
+    >>> pane
+    Pane(%1 Window(@1 ...:..., Session($1 ...)))
+
+    >>> pane in window.panes
+    True
+
+    >>> pane.window
+    Window(@1 ...:..., Session($1 ...))
+
+    >>> pane.session
+    Session($1 ...)
+
     Notes
     -----
 
@@ -119,8 +133,7 @@ class Pane(TmuxMappingObject):
         suppress_history: t.Optional[bool] = True,
         literal: t.Optional[bool] = False,
     ) -> None:
-        """
-        ``$ tmux send-keys`` to the pane.
+        r"""``$ tmux send-keys`` to the pane.
 
         A leading space character is added to cmd to avoid polluting the
         user's history.
@@ -135,6 +148,22 @@ class Pane(TmuxMappingObject):
             Don't add these keys to the shell history, default True.
         literal : bool, optional
             Send keys literally, default True.
+
+        Examples
+        --------
+        >>> pane = window.split_window(shell='sh')
+        >>> pane.capture_pane()
+        ['$']
+
+        >>> pane.send_keys('echo "Hello world"', suppress_history=False, enter=True)
+
+        >>> pane.capture_pane()
+        ['$ echo "Hello world"', 'Hello world', '$']
+
+        >>> print('\n'.join(pane.capture_pane()))  # doctest: +NORMALIZE_WHITESPACE
+        $ echo "Hello world"
+        Hello world
+        $
         """
         prefix = " " if suppress_history else ""
 
diff --git a/libtmux/server.py b/libtmux/server.py
index b31a3d0..beaa82a 100644
--- a/libtmux/server.py
+++ b/libtmux/server.py
@@ -47,6 +47,23 @@ class Server(TmuxRelationalObject["Session", "SessionDict"], EnvironmentMixin):
     config_file : str, optional
     colors : str, optional
 
+    Examples
+    --------
+    >>> server
+    <libtmux.server.Server object at ...>
+
+    >>> server.sessions
+    [Session($1 ...)]
+
+    >>> server.sessions[0].windows
+    [Window(@1 ...:..., Session($1 ...)]
+
+    >>> server.sessions[0].attached_window
+    Window(@1 ...:..., Session($1 ...)
+
+    >>> server.sessions[0].attached_pane
+    Pane(%1 Window(@1 ...:..., Session($1 ...)))
+
     References
     ----------
     .. [server_manual] CLIENTS AND SESSIONS. openbsd manpage for TMUX(1)
diff --git a/libtmux/session.py b/libtmux/session.py
index 1133c99..e2d1b61 100644
--- a/libtmux/session.py
+++ b/libtmux/session.py
@@ -43,6 +43,20 @@ class Session(
     ----------
     server : :class:`Server`
 
+    Examples
+    --------
+    >>> session
+    Session($1 ...)
+
+    >>> session.windows
+    [Window(@1 ...:..., Session($1 ...)]
+
+    >>> session.attached_window
+    Window(@1 ...:..., Session($1 ...)
+
+    >>> session.attached_pane
+    Pane(%1 Window(@1 ...:..., Session($1 ...)))
+
     References
     ----------
     .. [session_manual] tmux session. openbsd manpage for TMUX(1).
diff --git a/libtmux/window.py b/libtmux/window.py
index addfae7..d38b829 100644
--- a/libtmux/window.py
+++ b/libtmux/window.py
@@ -39,6 +39,32 @@ class Window(TmuxMappingObject, TmuxRelationalObject["Pane", "PaneDict"]):
     ----------
     session : :class:`Session`
 
+    Examples
+    --------
+    >>> window = session.new_window('My project')
+
+    >>> window
+    Window(@... ...:My project, Session($... ...))
+
+    Windows have panes:
+
+    >>> window.panes
+    [Pane(...)]
+
+    >>> window.attached_pane
+    Pane(...)
+
+    Relations moving up:
+
+    >>> window.session
+    Session(...)
+
+    >>> window == session.attached_window
+    True
+
+    >>> window in session.windows
+    True
+
     References
     ----------
     .. [window_manual] tmux window. openbsd manpage for TMUX(1).
@@ -296,6 +322,17 @@ class Window(TmuxMappingObject, TmuxRelationalObject["Pane", "PaneDict"]):
         ----------
         new_name : str
             name of the window
+
+        Examples
+        --------
+
+        >>> window = session.attached_window
+
+        >>> window.rename_window('My project')
+        Window(@1 ...:My project, Session($1 ...))
+
+        >>> window.rename_window('New name')
+        Window(@1 ...:New name, Session($1 ...))
         """
 
         import shlex
