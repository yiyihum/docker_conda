diff --git a/tests/test_client_misc.py b/tests/test_client_misc.py
index 2da74fd..0390414 100644
--- a/tests/test_client_misc.py
+++ b/tests/test_client_misc.py
@@ -21,7 +21,6 @@ from total_connect_client.zone import ZoneStatus
 
 from total_connect_client.exceptions import (
     BadResultCodeError,
-    PartialResponseError,
     TotalConnectError,
 )
 
@@ -77,5 +76,4 @@ class TestTotalConnectClient(unittest.TestCase):
                 self.location.get_zone_details()
             # third response is SUCCESS but with empty ZoneStatus
             # ...which we've seen before in the wild
-            with pytest.raises(PartialResponseError):
-                self.location.get_zone_details()
+            self.location.get_zone_details()
diff --git a/tests/test_location.py b/tests/test_location.py
index 2986b60..a977afa 100644
--- a/tests/test_location.py
+++ b/tests/test_location.py
@@ -106,20 +106,23 @@ class TestTotalConnectLocation(unittest.TestCase):
 
     def tests_set_zone_details(self):
         """Test set_zone_details with normal data passed in."""
-        self.location_normal._update_zone_details(RESPONSE_GET_ZONE_DETAILS_SUCCESS)
+        location = TotalConnectLocation(LOCATION_INFO_BASIC_NORMAL, None)
+        location._update_zone_details(RESPONSE_GET_ZONE_DETAILS_SUCCESS)
+        assert len(location.zones) == 1
 
-        # "Zones" is None
+        location = TotalConnectLocation(LOCATION_INFO_BASIC_NORMAL, None)
+        # "Zones" is None, as seen in #112 and #205
         response = deepcopy(RESPONSE_GET_ZONE_DETAILS_SUCCESS)
         response["ZoneStatus"]["Zones"] = None
-        with pytest.raises(PartialResponseError):
-            self.location_normal._update_zone_details(response)
+        location._update_zone_details(response)
+        assert len(location.zones) == 0
 
         # "ZoneStatusInfoWithPartitionId" is None
+        location = TotalConnectLocation(LOCATION_INFO_BASIC_NORMAL, None)
         response = deepcopy(RESPONSE_GET_ZONE_DETAILS_SUCCESS)
         response["ZoneStatus"]["Zones"] = {"ZoneStatusInfoWithPartitionId": None}
-        # now test with "ZoneInfo" is none
-        with pytest.raises(PartialResponseError):
-            self.location_normal._update_zone_details(response)
+        location._update_zone_details(response)
+        assert len(location.zones) == 0
 
     def tests_auto_bypass_low_battery(self):
         """Test auto bypass of low battery zones."""
