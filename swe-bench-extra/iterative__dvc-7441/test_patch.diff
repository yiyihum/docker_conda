diff --git a/tests/unit/command/test_experiments.py b/tests/unit/command/test_experiments.py
--- a/tests/unit/command/test_experiments.py
+++ b/tests/unit/command/test_experiments.py
@@ -22,7 +22,7 @@
 from tests.utils import ANY
 from tests.utils.asserts import called_once_with_subset
 
-from .test_repro import default_arguments as repro_arguments
+from .test_repro import common_arguments as repro_arguments
 
 
 def test_experiments_apply(dvc, scm, mocker):
diff --git a/tests/unit/command/test_repro.py b/tests/unit/command/test_repro.py
--- a/tests/unit/command/test_repro.py
+++ b/tests/unit/command/test_repro.py
@@ -1,22 +1,24 @@
 from dvc.cli import parse_args
 from dvc.commands.repro import CmdRepro
 
-default_arguments = {
+common_arguments = {
     "all_pipelines": False,
     "downstream": False,
     "dry": False,
     "force": False,
-    "run_cache": True,
     "interactive": False,
-    "no_commit": False,
     "pipeline": False,
     "single_item": False,
     "recursive": False,
     "force_downstream": False,
     "pull": False,
-    "glob": False,
     "targets": [],
 }
+repro_arguments = {
+    "run_cache": True,
+    "no_commit": False,
+    "glob": False,
+}
 
 
 def test_default_arguments(dvc, mocker):
@@ -24,14 +26,17 @@ def test_default_arguments(dvc, mocker):
     mocker.patch.object(cmd.repo, "reproduce")
     cmd.run()
     # pylint: disable=no-member
-    cmd.repo.reproduce.assert_called_with(**default_arguments)
+    cmd.repo.reproduce.assert_called_with(
+        **common_arguments, **repro_arguments
+    )
 
 
 def test_downstream(dvc, mocker):
     cmd = CmdRepro(parse_args(["repro", "--downstream"]))
     mocker.patch.object(cmd.repo, "reproduce")
     cmd.run()
-    arguments = default_arguments.copy()
+    arguments = common_arguments.copy()
+    arguments.update(repro_arguments)
     arguments.update({"downstream": True})
     # pylint: disable=no-member
     cmd.repo.reproduce.assert_called_with(**arguments)
