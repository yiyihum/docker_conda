diff --git a/commitizen/commands/check.py b/commitizen/commands/check.py
index fb79e805..eed3ffbb 100644
--- a/commitizen/commands/check.py
+++ b/commitizen/commands/check.py
@@ -82,20 +82,18 @@ class Check:
         out.success("Commit validation: successful!")
 
     def _get_commits(self):
+        msg = None
         # Get commit message from file (--commit-msg-file)
         if self.commit_msg_file is not None:
             # Enter this branch if commit_msg_file is "".
             with open(self.commit_msg_file, "r", encoding="utf-8") as commit_file:
                 msg = commit_file.read()
-            msg = self._filter_comments(msg)
-            msg = msg.lstrip("\n")
-            commit_title = msg.split("\n")[0]
-            commit_body = "\n".join(msg.split("\n")[1:])
-            return [git.GitCommit(rev="", title=commit_title, body=commit_body)]
+        # Get commit message from command line (--message)
         elif self.commit_msg is not None:
-            # Enter this branch if commit_msg is "".
-            self.commit_msg = self._filter_comments(self.commit_msg)
-            return [git.GitCommit(rev="", title="", body=self.commit_msg)]
+            msg = self.commit_msg
+        if msg is not None:
+            msg = self._filter_comments(msg)
+            return [git.GitCommit(rev="", title="", body=msg)]
 
         # Get commit messages from git log (--rev-range)
         return git.get_commits(end=self.rev_range)
diff --git a/commitizen/cz/conventional_commits/conventional_commits.py b/commitizen/cz/conventional_commits/conventional_commits.py
index 285f2c14..7989a171 100644
--- a/commitizen/cz/conventional_commits/conventional_commits.py
+++ b/commitizen/cz/conventional_commits/conventional_commits.py
@@ -191,8 +191,11 @@ class ConventionalCommitsCz(BaseCommitizen):
 
     def schema_pattern(self) -> str:
         PATTERN = (
-            r"(build|ci|docs|feat|fix|perf|refactor|style|test|chore|revert|bump)"
-            r"(\(\S+\))?!?:(\s.*)"
+            r"(?s)"  # To explictly make . match new line
+            r"(build|ci|docs|feat|fix|perf|refactor|style|test|chore|revert|bump)"  # type
+            r"(\(\S+\))?!?:"  # scope
+            r"( [^\n\r]+)"  # subject
+            r"((\n\n.*)|(\s*))?$"
         )
         return PATTERN
 
