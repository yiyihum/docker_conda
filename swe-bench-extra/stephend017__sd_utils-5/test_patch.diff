diff --git a/tests/plugins/__init__.py b/tests/plugins/__init__.py
index 6d5fcb4..b5792c1 100644
--- a/tests/plugins/__init__.py
+++ b/tests/plugins/__init__.py
@@ -1,7 +1,6 @@
-from sd_utils.plugins.plugin_base import PluginBase
 from sd_utils.plugins.plugin_collector import collect_plugins
 from sd_utils.plugins.plugin_manager import PluginManager
 
 mypluginmanager = PluginManager()
 
-collect_plugins(__file__, __name__, PluginBase)
+__all__ = collect_plugins(__file__, __name__)
diff --git a/tests/plugins/my_other_plugin.py b/tests/plugins/my_other_plugin.py
index bb73b4d..2f2542a 100644
--- a/tests/plugins/my_other_plugin.py
+++ b/tests/plugins/my_other_plugin.py
@@ -13,7 +13,7 @@ class MyOtherPlugin(PluginBase):
         """
         self.operations = []
 
-    def on_register(self):
+    def on_register(self, data: Any = None):
         """
         runs when this plugin is registered with
         the plugin manager
diff --git a/tests/plugins/my_plugin.py b/tests/plugins/my_plugin.py
index 23bf7a1..cc75323 100644
--- a/tests/plugins/my_plugin.py
+++ b/tests/plugins/my_plugin.py
@@ -12,8 +12,9 @@ class MyPlugin(PluginBase):
         """
         """
         self.operations = []
+        self.data = []
 
-    def on_register(self):
+    def on_register(self, data: Any = None):
         """
         runs when this plugin is registered with
         the plugin manager
@@ -26,9 +27,12 @@ class MyPlugin(PluginBase):
         any plugin.
         """
         self.operations.append("searched")
+        self.data.append(data)
 
     def on_find(self, data: Any = None):
         """
         runs when the manager specifically queries this plugin
         """
         self.operations.append("found")
+        self.data.append(data)
+        return data
diff --git a/tests/plugins/test_plugins.py b/tests/plugins/test_plugins.py
index 3f7a6c7..4f75aa5 100644
--- a/tests/plugins/test_plugins.py
+++ b/tests/plugins/test_plugins.py
@@ -22,8 +22,7 @@ def test_search_and_find():
     assert "searched" in mypluginmanager._plugins["myplugin"].plugin.operations
     assert "found" in mypluginmanager._plugins["myplugin"].plugin.operations
 
-    mypluginmanager._plugins["myplugin"].plugin.operations.remove("searched")
-    mypluginmanager._plugins["myplugin"].plugin.operations.remove("found")
+    mypluginmanager._plugins["myplugin"].plugin.operations.clear()
 
 
 def test_plugin_doesnt_exist():
@@ -34,7 +33,7 @@ def test_plugin_doesnt_exist():
     with pytest.raises(ValueError):
         mypluginmanager.run("notmyplugin")
 
-    mypluginmanager._plugins["myplugin"].plugin.operations.remove("searched")
+    mypluginmanager._plugins["myplugin"].plugin.operations.clear()
 
 
 def test_search_only():
@@ -49,4 +48,46 @@ def test_search_only():
         "found" not in mypluginmanager._plugins["myplugin"].plugin.operations
     )
 
-    mypluginmanager._plugins["myplugin"].plugin.operations.remove("searched")
+    mypluginmanager._plugins["myplugin"].plugin.operations.clear()
+
+
+def test_get_on_search_params():
+    """
+    Tests that get_on_search params properly takes in
+    the correct arguments
+    """
+
+    mydata = {"data": "value"}
+    mypluginmanager.run("myplugin", mydata)
+
+    assert mydata in mypluginmanager._plugins["myplugin"].plugin.data
+
+    mypluginmanager._plugins["myplugin"].plugin.data.clear()
+
+
+def test_get_on_find_params():
+    """
+    Tests that get_on_search params properly takes in
+    the correct arguments
+    """
+
+    mydata = {"data": "value"}
+    mypluginmanager.run("myplugin", on_find_params=mydata)
+
+    assert mydata in mypluginmanager._plugins["myplugin"].plugin.data
+
+    mypluginmanager._plugins["myplugin"].plugin.data.clear()
+
+
+def test_on_find_return_value():
+    """
+    Tests that get_on_search params properly takes in
+    the correct arguments
+    """
+
+    mydata = {"data": "value"}
+    response = mypluginmanager.run("myplugin", on_find_params=mydata)
+
+    assert response == mydata
+
+    mypluginmanager._plugins["myplugin"].plugin.data.clear()
