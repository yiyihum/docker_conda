diff --git a/tests/test_schemata.py b/tests/test_schemata.py
new file mode 100644
index 0000000..91d6f11
--- /dev/null
+++ b/tests/test_schemata.py
@@ -0,0 +1,14 @@
+from pathlib import Path
+
+from valohai_yaml.validation import SCHEMATA_DIRECTORY
+
+
+def test_schemata_has_no_underscores():
+    for yaml_path in Path(SCHEMATA_DIRECTORY).rglob("*.yaml"):
+        with yaml_path.open("r", encoding="utf-8") as f:
+            for lineno, line in enumerate(f, 1):
+                clean_line = line.partition("#")[0].strip()
+                if clean_line.endswith(":") and "_" in clean_line:
+                    raise AssertionError(
+                        f"Underscore in YAML key in {yaml_path!r}:{lineno}: {line!r}",
+                    )
diff --git a/tests/test_task.py b/tests/test_task.py
index 42acaf4..7595524 100644
--- a/tests/test_task.py
+++ b/tests/test_task.py
@@ -1,4 +1,5 @@
 from valohai_yaml.objs import Config, Task
+from valohai_yaml.objs.task import TaskType
 from valohai_yaml.objs.variant_parameter import VariantParameterStyle
 
 
@@ -11,3 +12,12 @@ def test_tasks_parameters(task_config: Config):
         if len(task.parameters) > 0:
             assert task.parameters[0].name == "A"
             assert isinstance(task.parameters[0].style, VariantParameterStyle)
+
+
+def test_task_additional_fields(task_config: Config):
+    task = task_config.tasks["task 4 logspace"]
+    assert task.execution_batch_size == 42
+    assert task.execution_count == 420
+    assert task.optimization_target_metric == "goodness"
+    assert task.optimization_target_value == 7.2
+    assert task.type == TaskType.RANDOM_SEARCH
