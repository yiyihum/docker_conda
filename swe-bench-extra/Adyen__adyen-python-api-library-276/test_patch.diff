diff --git a/test/ConfigurationTest.py b/test/BalancePlatformTest.py
similarity index 87%
rename from test/ConfigurationTest.py
rename to test/BalancePlatformTest.py
index 3bbb9f0..fe29b68 100644
--- a/test/ConfigurationTest.py
+++ b/test/BalancePlatformTest.py
@@ -1,5 +1,6 @@
-import Adyen
 import unittest
+
+import Adyen
 from Adyen import settings
 
 try:
@@ -8,7 +9,7 @@ except ImportError:
     from .BaseTest import BaseTest
 
 
-class TestManagement(unittest.TestCase):
+class TestBalancePlatform(unittest.TestCase):
     adyen = Adyen.Adyen()
 
     client = adyen.client
@@ -117,3 +118,22 @@ class TestManagement(unittest.TestCase):
             json=None,
             xapikey="YourXapikey"
         )
+
+    def test_update_network_token(self):
+        request = {
+            "status": "closed"
+        }
+        self.adyen.client = self.test.create_client_from_file(202, request)
+
+        result = self.adyen.balancePlatform.network_tokens_api.update_network_token(request, 'TK123ABC')
+
+        self.assertEqual(202, result.status_code)
+        self.assertEqual({}, result.message)
+        self.assertEqual("", result.raw_response)
+        self.adyen.client.http_client.request.assert_called_once_with(
+            'PATCH',
+            f'{self.balance_platform_url}/networkTokens/TK123ABC',
+            headers={'adyen-library-name': 'adyen-python-api-library', 'adyen-library-version': settings.LIB_VERSION},
+            json=request,
+            xapikey="YourXapikey"
+        )
diff --git a/test/BaseTest.py b/test/BaseTest.py
index 08a97bc..c910acb 100644
--- a/test/BaseTest.py
+++ b/test/BaseTest.py
@@ -7,7 +7,7 @@ import json
 from Adyen import httpclient
 
 
-class BaseTest():
+class BaseTest:
     def __init__(self, adyen):
         self.ady = adyen
 
diff --git a/test/ManagementTest.py b/test/ManagementTest.py
index a5914b1..7e34681 100644
--- a/test/ManagementTest.py
+++ b/test/ManagementTest.py
@@ -19,18 +19,19 @@ class TestManagement(unittest.TestCase):
 
     def test_get_company_account(self):
         request = None
-        id = "YOUR_COMPANY_ACCOUNT"
+        company_id = "YOUR_COMPANY_ACCOUNT"
         self.adyen.client = self.test.create_client_from_file(200, request,
                                                               "test/mocks/"
                                                               "management/"
                                                               "get_company_account"
                                                               ".json")
 
-        result = self.adyen.management.account_company_level_api.get_company_account(companyId=id)
-        self.assertEqual(id, result.message['id'])
+        result = self.adyen.management.account_company_level_api.get_company_account(companyId=company_id)
+
+        self.assertEqual(company_id, result.message['id'])
         self.adyen.client.http_client.request.assert_called_once_with(
             'GET',
-            f'{self.management_url}/companies/{id}',
+            f'{self.management_url}/companies/{company_id}',
             headers={'adyen-library-name': 'adyen-python-api-library', 'adyen-library-version': settings.LIB_VERSION},
             json=None,
             xapikey="YourXapikey"
@@ -43,23 +44,29 @@ class TestManagement(unittest.TestCase):
                                                               "management/"
                                                               "post_me_allowed"
                                                               "_origins.json")
+
         result = self.adyen.management.my_api_credential_api.add_allowed_origin(request)
-        originId = result.message['id']
+
         self.assertEqual("YOUR_DOMAIN", result.message['domain'])
+
+    def test_no_content(self):
         self.adyen.client = self.test.create_client_from_file(204, {},
                                                               "test/mocks/"
                                                               "management/"
                                                               "no_content.json")
-        result = self.adyen.management.my_api_credential_api.remove_allowed_origin(originId)
+        origin_id = 'YOUR_DOMAIN_ID'
+
+        self.adyen.management.my_api_credential_api.remove_allowed_origin(origin_id)
+
         self.adyen.client.http_client.request.assert_called_once_with(
             'DELETE',
-            f'{self.management_url}/me/allowedOrigins/{originId}',
+            f'{self.management_url}/me/allowedOrigins/{origin_id}',
             headers={'adyen-library-name': 'adyen-python-api-library', 'adyen-library-version': settings.LIB_VERSION},
             json=None,
             xapikey="YourXapikey"
         )
 
-    def test_update_a_store(self):
+    def test_update_store(self):
         request = {
             "address": {
                 "line1": "1776 West Pinewood Avenue",
@@ -73,19 +80,34 @@ class TestManagement(unittest.TestCase):
                                                               "management/"
                                                               "update_a_store"
                                                               ".json")
-        storeId = "YOUR_STORE_ID"
-        merchantId = "YOUR_MERCHANT_ACCOUNT_ID"
-        result = self.adyen.management.account_store_level_api.update_store(request, merchantId, storeId)
+        store_id = "YOUR_STORE_ID"
+        merchant_id = "YOUR_MERCHANT_ACCOUNT_ID"
+
+        result = self.adyen.management.account_store_level_api.update_store(request, merchant_id, store_id)
+
         self.adyen.client.http_client.request.assert_called_once_with(
             'PATCH',
-            f'{self.management_url}/merchants/{merchantId}/stores/{storeId}',
+            f'{self.management_url}/merchants/{merchant_id}/stores/{store_id}',
             headers={'adyen-library-name': 'adyen-python-api-library', 'adyen-library-version': settings.LIB_VERSION},
             json=request,
             xapikey="YourXapikey"
         )
-        self.assertEqual(storeId, result.message['id'])
+        self.assertEqual(store_id, result.message['id'])
         self.assertEqual("1776 West Pinewood Avenue", result.message['address']['line1'])
 
+    def test_reassign_terminal(self):
+        request = {
+            'storeId': 'ST123ABC',
+            'inventory': False,
+        }
+        self.adyen.client = self.test.create_client_from_file(200, request)
+
+        result = self.adyen.management.terminals_terminal_level_api.reassign_terminal(request, 'AMS1-2345')
+
+        self.assertEqual(200, result.status_code)
+        self.assertEqual({}, result.message)
+        self.assertEqual("", result.raw_response)
+
     def test_create_a_user(self):
         request = {
             "name": {
@@ -108,12 +130,14 @@ class TestManagement(unittest.TestCase):
                                                               "management/"
                                                               "create_a_user"
                                                               ".json")
-        companyId = "YOUR_COMPANY_ACCOUNT"
-        result = self.adyen.management.users_company_level_api.create_new_user(request, companyId)
+        company_id = "YOUR_COMPANY_ACCOUNT"
+
+        result = self.adyen.management.users_company_level_api.create_new_user(request, company_id)
+
         self.assertEqual(request['name']['firstName'], result.message['name']['firstName'])
         self.adyen.client.http_client.request.assert_called_once_with(
             'POST',
-            f'{self.management_url}/companies/{companyId}/users',
+            f'{self.management_url}/companies/{company_id}/users',
             json=request,
             headers={'adyen-library-name': 'adyen-python-api-library', 'adyen-library-version': settings.LIB_VERSION},
             xapikey="YourXapikey"
@@ -127,13 +151,15 @@ class TestManagement(unittest.TestCase):
                                                               "get_list_of"
                                                               "_android_apps"
                                                               ".json")
-        companyId = "YOUR_COMPANY_ACCOUNT"
-        result = self.adyen.management.android_files_company_level_api.list_android_apps(companyId)
+        company_id = "YOUR_COMPANY_ACCOUNT"
+
+        result = self.adyen.management.android_files_company_level_api.list_android_apps(company_id)
+
         self.assertEqual("ANDA422LZ223223K5F694GCCF732K8", result.message['androidApps'][0]['id'])
 
-    def test_query_paramaters(self):
+    def test_query_parameters(self):
         request = {}
-        companyId = "YOUR_COMPANY_ACCOUNT"
+        company_id = "YOUR_COMPANY_ACCOUNT"
         query_parameters = {
             'pageNumber': 1,
             'pageSize': 10
@@ -143,11 +169,13 @@ class TestManagement(unittest.TestCase):
                                                               "test/mocks/"
                                                               "management/"
                                                               "get_list_of_merchant_accounts.json")
-        result = self.adyen.management.account_company_level_api. \
-            list_merchant_accounts(companyId, query_parameters=query_parameters)
+
+        self.adyen.management.account_company_level_api. \
+            list_merchant_accounts(company_id, query_parameters=query_parameters)
+
         self.adyen.client.http_client.request.assert_called_once_with(
             'GET',
-            f'{self.management_url}/companies/{companyId}/merchants?pageNumber=1&pageSize=10',
+            f'{self.management_url}/companies/{company_id}/merchants?pageNumber=1&pageSize=10',
             headers={'adyen-library-name': 'adyen-python-api-library', 'adyen-library-version': settings.LIB_VERSION},
             json=None,
             xapikey="YourXapikey"
