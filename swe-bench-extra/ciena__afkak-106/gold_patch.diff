diff --git a/CHANGES.md b/CHANGES.md
index 767780c..b7dc291 100644
--- a/CHANGES.md
+++ b/CHANGES.md
@@ -1,12 +1,14 @@
 Version Next
 ==============
 
-* **Feature:**  The repr of the `afkak.Consumer` class has been cleaned up to make log messages that include it less noisy.
+- **Feature:** `afkak.KafkaClient` now accepts a sequence ``(host, port)`` tuples as its ``hosts`` argument and when passed to the ``update_cluster_hosts()`` method.
+  This permits passing IPv6 addresses and fixes [#41](https://github.com/ciena/afkak/issues/41).
+
+* **Feature:**  The string representation of `afkak.Consumer` instances has been cleaned up to make log messages that include it less noisy.
    It now looks like ``<Consumer topicname/0 running>`` where ``0`` is the partition number.
 
 * **Feature:** Additional contextual information has been added to several of `afkak.Consumer` debug log messages.
 
-
 Version 19.8.0
 ==============
 
diff --git a/README.md b/README.md
index 31213a0..8d9f8b9 100644
--- a/README.md
+++ b/README.md
@@ -1,6 +1,7 @@
 # <img src="docs/_static/afkak.png" width="23" height="36" alt=""> Afkak: Twisted Python Kafka Client
 
 <a href="https://pypi.org/projects/afkak"><img src="https://img.shields.io/pypi/v/afkak.svg" alt="PyPI"></a>
+<a href="https://calver.org/"><img src="https://img.shields.io/badge/calver-YY.MM.MICRO-22bfda.svg" alt="calver: YY.MM.MICRO"></a>
 <a href="./LICENSE"><img src="https://img.shields.io/pypi/l/afkak.svg" alt="Apache 2.0"></a>
 <a href="https://afkak.readthedocs.io/en/latest/"><img src="https://readthedocs.org/projects/pip/badge/" alt="Documentation"></a>
 <!--
diff --git a/afkak/client.py b/afkak/client.py
index f90eaf8..7c48102 100644
--- a/afkak/client.py
+++ b/afkak/client.py
@@ -1258,8 +1258,14 @@ def _normalize_hosts(hosts):
     [('127.0.0.2', 2909), ('host', 9092)]
 
     :param hosts:
-        A list or comma-separated string of hostnames which may also include
-        port numbers. All of the following are valid::
+        One of:
+
+        - A comma-separated string of hostnames
+        - A sequence of strings of the form ``host`` or ``host:port``
+        - A sequence of two-tuples of the form ``('host', port)``
+
+        Types are aggressively coerced for the sake of backwards compatibility,
+        so all of the following are valid::
 
             b'host'
             u'host'
@@ -1268,6 +1274,7 @@ def _normalize_hosts(hosts):
             b'host:1234 , host:2345 '
             [u'host1', b'host2']
             [b'host:1234', b'host:2345']
+            [(b'host', 1234), (u'host', '234')]
 
         Hostnames must be ASCII (IDN is not supported). The default Kafka port
         of 9092 is implied when no port is given.
@@ -1282,9 +1289,13 @@ def _normalize_hosts(hosts):
 
     result = set()
     for host_port in hosts:
-        # FIXME This won't handle IPv6 addresses
-        res = nativeString(host_port).split(':')
-        host = res[0].strip()
-        port = int(res[1].strip()) if len(res) > 1 else DefaultKafkaPort
+        if isinstance(host_port, (bytes, _unicode)):
+            res = nativeString(host_port).split(':')
+            host = res[0].strip()
+            port = int(res[1].strip()) if len(res) > 1 else DefaultKafkaPort
+        else:
+            host, port = host_port
+            host = nativeString(host)
+            port = int(port)
         result.add((host, port))
     return sorted(result)
