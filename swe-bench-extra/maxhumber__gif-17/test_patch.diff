diff --git a/tests/test_gif.py b/tests/test_gif.py
index 87f0ebe..5d260a7 100644
--- a/tests/test_gif.py
+++ b/tests/test_gif.py
@@ -1,3 +1,4 @@
+import os
 import pytest
 from matplotlib import pyplot as plt
 from PIL import Image
@@ -22,30 +23,35 @@ def plot(x, y):
     plt.scatter(x, y)
 
 
-@pytest.fixture(scope="session")
-def default_file(tmpdir_factory):
+def make_gif(tmpdir_factory, filename, dpi=None, **kwargs):
+    if dpi is not None:
+        gif.options.matplotlib["dpi"] = 300
     frames = [plot([0, 5], [0, 5]), plot([0, 10], [0, 10])]
-    path = str(tmpdir_factory.mktemp("matplotlib").join("default.gif"))
-    gif.save(frames, path)
+    if dpi is not None:
+        gif.options.reset()
+    path = str(tmpdir_factory.mktemp("matplotlib").join(filename))
+    gif.save(frames, path, **kwargs)
     return path
 
 
+@pytest.fixture(scope="session")
+def default_file(tmpdir_factory):
+    return make_gif(tmpdir_factory, "default.gif")
+
+
+@pytest.fixture(scope="session")
+def optimized_file(tmpdir_factory):
+    return make_gif(tmpdir_factory, "optimized.gif", optimize=True)
+
+
 @pytest.fixture(scope="session")
 def hd_file(tmpdir_factory):
-    gif.options.matplotlib["dpi"] = 300
-    frames = [plot([0, 5], [0, 5]), plot([0, 10], [0, 10])]
-    gif.options.reset()
-    path = str(tmpdir_factory.mktemp("matplotlib").join("hd.gif"))
-    gif.save(frames, path)
-    return path
+    return make_gif(tmpdir_factory, "hd.gif", dpi=300)
 
 
 @pytest.fixture(scope="session")
 def long_file(tmpdir_factory):
-    frames = [plot([0, 5], [0, 5]), plot([0, 10], [0, 10])]
-    path = str(tmpdir_factory.mktemp("matplotlib").join("long.gif"))
-    gif.save(frames, path, duration=2500)
-    return path
+    return make_gif(tmpdir_factory, "long.gif", duration=2500)
 
 
 def test_frame():
@@ -59,6 +65,12 @@ def test_default_save(default_file):
     assert milliseconds(img) == 200
 
 
+def test_optimization(default_file, optimized_file):
+    default_size = os.stat(default_file).st_size
+    optimized_size = os.stat(optimized_file).st_size
+    assert optimized_size < default_size * 0.9
+
+
 def test_dpi_save(hd_file):
     img = Image.open(hd_file)
     assert img.format == "GIF"
