diff --git a/tests/unit/test_policy.py b/tests/unit/test_policy.py
index 8a512e0..c926929 100644
--- a/tests/unit/test_policy.py
+++ b/tests/unit/test_policy.py
@@ -3,7 +3,7 @@ from unittest.mock import patch
 import pytest
 
 from auditwheel.policy import get_arch_name, get_policy_name, \
-    get_priority_by_name, get_replace_platforms
+    get_priority_by_name, get_replace_platforms, _validate_pep600_compliance
 
 
 @patch("auditwheel.policy._platform_module.machine")
@@ -43,6 +43,59 @@ def test_replacement_platform(name, expected):
     assert get_replace_platforms(name) == expected
 
 
+def test_pep600_compliance():
+    _validate_pep600_compliance([{
+        "name": "manylinux1", "priority": 100, "symbol_versions": {
+            "i686": {"CXXABI": ["1.3"]},
+        },
+        "lib_whitelist": ["libgcc_s.so.1"]
+    }, {
+        "name": "manylinux2010", "priority": 90, "symbol_versions": {
+            "i686": {"CXXABI": ["1.3", "1.3.1"]},
+        },
+        "lib_whitelist": ["libgcc_s.so.1", "libstdc++.so.6"],
+    }])
+
+    _validate_pep600_compliance([{
+        "name": "manylinux1", "priority": 100, "symbol_versions": {
+            "i686": {"CXXABI": ["1.3"]},
+            "x86_64": {"CXXABI": ["1.3"]},
+        },
+        "lib_whitelist": ["libgcc_s.so.1"]
+    }, {
+        "name": "manylinux2010", "priority": 90, "symbol_versions": {
+            "i686": {"CXXABI": ["1.3", "1.3.1"]},
+        },
+        "lib_whitelist": ["libgcc_s.so.1", "libstdc++.so.6"],
+    }])
+
+    with pytest.raises(ValueError, match="manylinux2010_i686.*CXXABI.*1.3.2"):
+        _validate_pep600_compliance([{
+            "name": "manylinux1", "priority": 100, "symbol_versions": {
+                "i686": {"CXXABI": ["1.3", "1.3.2"]},
+            },
+            "lib_whitelist": ["libgcc_s.so.1"]
+        }, {
+            "name": "manylinux2010", "priority": 90, "symbol_versions": {
+                "i686": {"CXXABI": ["1.3", "1.3.1"]},
+            },
+            "lib_whitelist": ["libgcc_s.so.1", "libstdc++.so.6"],
+        }])
+
+    with pytest.raises(ValueError, match="manylinux2010.*libstdc\+\+\.so\.6"):
+        _validate_pep600_compliance([{
+            "name": "manylinux1", "priority": 100, "symbol_versions": {
+                "i686": {"CXXABI": ["1.3"]},
+            },
+            "lib_whitelist": ["libgcc_s.so.1", "libstdc++.so.6"]
+        }, {
+            "name": "manylinux2010", "priority": 90, "symbol_versions": {
+                "i686": {"CXXABI": ["1.3", "1.3.1"]},
+            },
+            "lib_whitelist": ["libgcc_s.so.1"],
+        }])
+
+
 class TestPolicyAccess:
 
     def test_get_by_priority(self):
