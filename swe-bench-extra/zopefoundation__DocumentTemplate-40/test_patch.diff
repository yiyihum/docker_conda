diff --git a/src/DocumentTemplate/tests/test_DocumentTemplate.py b/src/DocumentTemplate/tests/test_DocumentTemplate.py
index 585f522..a58fc5f 100644
--- a/src/DocumentTemplate/tests/test_DocumentTemplate.py
+++ b/src/DocumentTemplate/tests/test_DocumentTemplate.py
@@ -1,4 +1,18 @@
 import unittest
+import Acquisition
+
+
+class Item(Acquisition.Implicit):
+    """Class modelling the here necessary parts of OFS.SimpleItem."""
+
+    def __init__(self, id):
+        self.id = id
+
+    def __repr__(self):
+        return '<Item id={0.id!r}>'.format(self)
+
+    def method1(self):
+        pass
 
 
 class InstanceDictTests(unittest.TestCase):
@@ -12,22 +26,23 @@ class InstanceDictTests(unittest.TestCase):
         # https://github.com/zopefoundation/Zope/issues/292
 
         from DocumentTemplate.DT_Util import InstanceDict
-        import Acquisition
-
-        class Item(Acquisition.Implicit):
-            """Class modelling the here necessary parts of OFS.SimpleItem."""
-
-            def __init__(self, id):
-                self.id = id
-
-            def __repr__(self):
-                return '<Item id={0.id!r}>'.format(self)
-
-            def method1(self):
-                pass
 
         inst = Item('a').__of__(Item('b'))
         i_dict = InstanceDict(inst, {}, getattr)
 
         for element in Acquisition.aq_chain(i_dict['method1'].__self__):
             self.assertNotIsInstance(element, InstanceDict)
+
+    def test_getitem_2(self):
+        # It does not break the acquisition chain of stored objects.
+
+        from DocumentTemplate.DT_Util import InstanceDict
+
+        main = Item('main')
+        main.sub = Item('sub')
+        side = Item('side')
+        side.here = Item('here')
+
+        path = side.here.__of__(main)
+        i_dict = InstanceDict(path, {}, getattr)
+        self.assertEqual(main.sub, i_dict['sub'])
