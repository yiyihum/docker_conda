diff --git a/changelog.txt b/changelog.txt
index 5845ceaf..753203ee 100644
--- a/changelog.txt
+++ b/changelog.txt
@@ -20,6 +20,7 @@ next
 ----
 
  - Add command line options ``--sp`` and ``--doc`` for ``signac find`` that allow users to display key-value pairs of the state point and document in combination with the job id (#97, #146).
+ - Fix: Searches for whole numbers will match all numerically matching integers regardless of whether they are stored as decimals or whole numbers (#169).
 
 
 [1.0.0] -- 2019-02-28
diff --git a/contributors.txt b/contributors.txt
index 2428d45d..3d92714b 100644
--- a/contributors.txt
+++ b/contributors.txt
@@ -7,3 +7,4 @@ Bradley Dice
 Tim Moore
 Pengji Zhou
 Eric Harper
+Kelly Wang
diff --git a/signac/contrib/collection.py b/signac/contrib/collection.py
index ab733539..23df2fde 100644
--- a/signac/contrib/collection.py
+++ b/signac/contrib/collection.py
@@ -12,13 +12,14 @@
 # on files on the local file system instead of a MongoDB database.
 #
 # [1]: https://github.com/mongodb/mongo-python-driver
-import sys
+import argparse
 import io
-import re
 import logging
-import argparse
 import operator
+import re
+import sys
 from itertools import islice
+from numbers import Number
 
 from ..core import json
 from ..common import six
@@ -30,7 +31,6 @@ else:
     from collections.abc import Mapping
 
 if six.PY2 or (six.PY3 and sys.version_info.minor < 5):
-
     def isclose(a, b, rel_tol=1e-9, abs_tol=0.0):
         return abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)
 else:
@@ -620,7 +620,21 @@ class Collection(object):
                 raise KeyError("Unknown expression-operator '{}'.".format(op))
         else:
             index = self.index(key, build=True)
-            return index.get(value, set())
+            # Check to see if 'value' is a floating point type but an
+            # integer value (e.g., 4.0), and search for both the int and float
+            # values. This allows the user to find statepoints that have
+            # integer-valued keys that are stored as floating point types.
+            # Note that this both cases: 1) user searches for an int and hopes
+            # to find values that are stored as integer-valued floats and 2) user
+            # searches for a integer-valued float and hopes to find ints.
+            # This way, both `signac find x 4.0` and `signac find x 4` would
+            # return jobs where `sp.x` is stored as either 4.0 or 4.
+            if isinstance(value, Number) and float(value).is_integer():
+                result_float = index.get(_float(value), set())
+                result_int = index.get(int(value), set())
+                return result_int.union(result_float)
+            else:
+                return index.get(value, set())
 
     def _find_result(self, expr):
         if not len(expr):
