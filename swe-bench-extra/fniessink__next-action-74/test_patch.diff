diff --git a/tests/unittests/arguments/test_config.py b/tests/unittests/arguments/test_config.py
index e5bae6c..775e336 100644
--- a/tests/unittests/arguments/test_config.py
+++ b/tests/unittests/arguments/test_config.py
@@ -88,6 +88,16 @@ class ConfigFileTest(unittest.TestCase):
         parse_arguments()
         self.assertEqual([], mock_file_open.call_args_list)
 
+    @patch.object(sys, "argv", ["next-action", "--write-config-file"])
+    @patch.object(config, "open", mock_open(read_data=""))
+    @patch.object(sys.stdout, "write")
+    def test_write_config(self, mock_stdout_write):
+        """ Test that a config file can be written to stdout. """
+        self.assertRaises(SystemExit, parse_arguments)
+        expected = "# Configuration file for Next-action. Edit the settings below as you like.\n"
+        expected += "file: ~/todo.txt\nnumber: 1\n"
+        self.assertEqual([call(expected)], mock_stdout_write.call_args_list)
+
 
 class FilenameTest(unittest.TestCase):
     """ Unit tests for the config file parameter. """
diff --git a/tests/unittests/test_cli.py b/tests/unittests/test_cli.py
index 754fe21..0eca016 100644
--- a/tests/unittests/test_cli.py
+++ b/tests/unittests/test_cli.py
@@ -77,6 +77,7 @@ optional arguments:
   -c <config.cfg>, --config-file <config.cfg>
                         filename of configuration file to read (default: ~/.next-action.cfg)
   -C, --no-config-file  don't read the configuration file
+  --write-config-file   generate a sample configuration file and exit
   -f <todo.txt>, --file <todo.txt>
                         filename of todo.txt file to read; can be '-' to read from standard input; argument can be
                         repeated to read tasks from multiple todo.txt files (default: ~/todo.txt)
