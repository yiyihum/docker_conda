diff --git a/mikeio/pfs.py b/mikeio/pfs.py
index 10d80fce..e8812520 100644
--- a/mikeio/pfs.py
+++ b/mikeio/pfs.py
@@ -203,8 +203,11 @@ def parse_yaml_preserving_duplicates(src, unique_keywords=True):
                         data[key] = []
                     data[key].append(val)
                 else:
-                    warnings.warn(f"Keyword {key} defined multiple times. Value: {val}")
-                    data[key] = val
+                    warnings.warn(
+                        f"Keyword {key} defined multiple times (first will be used). Value: {val}"
+                    )
+                    if key not in data:
+                        data[key] = val
             else:
                 data[key] = val
         return data
@@ -243,7 +246,7 @@ class Pfs:
     """
 
     def __init__(self, input, encoding="cp1252", names=None, unique_keywords=True):
-        if isinstance(input, (str, Path)):
+        if isinstance(input, (str, Path)) or hasattr(input, "read"):
             if names is not None:
                 raise ValueError("names cannot be given as argument if input is a file")
             sections, names = self._read_pfs_file(input, encoding, unique_keywords)
@@ -404,8 +407,11 @@ class Pfs:
 
     def _pfs2yaml(self, filename, encoding=None) -> str:
 
-        with (open(filename, encoding=encoding)) as f:
-            pfsstring = f.read()
+        if hasattr(filename, "read"):  # To read in memory strings StringIO
+            pfsstring = filename.read()
+        else:
+            with (open(filename, encoding=encoding)) as f:
+                pfsstring = f.read()
 
         lines = pfsstring.split("\n")
 
@@ -453,7 +459,9 @@ class Pfs:
                 key = key.strip()
                 value = s[(idx + 1) :]
 
-                if s.count("'") == 2:  # This is a quoted string and not a list
+                if (
+                    s[0] == "'" and s[-1] == "'"
+                ):  # This is a quoted string and not a list
                     s = s
                 else:
                     if "," in value:

