diff --git a/test/conftest.py b/test/conftest.py
index e79684f..9c4ed31 100644
--- a/test/conftest.py
+++ b/test/conftest.py
@@ -36,7 +36,7 @@ def pytest_runtest_makereport(item, call):
     outcome = yield
     screen_file = str(screenshot_dir / f"{slugify(item.nodeid)}.png")
     report = outcome.get_result()
-    extra = getattr(report, "extra", [])
+    extras = getattr(report, "extras", [])
     if report.when == "call":
         if report.failed:
             if "page" in item.funcargs:
@@ -44,8 +44,8 @@ def pytest_runtest_makereport(item, call):
                 make_screenshot(item, page)
         xfail = hasattr(report, "wasxfail")
         if (report.skipped and xfail) or (report.failed and not xfail):
-            extra.append(pytest_html.extras.png(re.sub("test\W*e2e\W*report\W*", "", screen_file)))
-        report.extra = extra
+            extras.append(pytest_html.extras.png(re.sub(r"test\W*e2e\W*report\W*", "", screen_file)))
+        report.extras = extras
 
 
 def make_screenshot(item, page):
diff --git a/test/integration/test_http_api.py b/test/integration/test_http_api.py
index 9b8df48..0f03f81 100644
--- a/test/integration/test_http_api.py
+++ b/test/integration/test_http_api.py
@@ -10,7 +10,7 @@ configuration.ratelimit["read"]["capacity"] = 2**64 - 1
 configuration.ratelimit["create"]["capacity"] = 2**64 - 1
 configuration.ratelimit["delete"]["capacity"] = 2**64 - 1
 
-from pinnwand import configuration, database, http, utility
+from pinnwand import configuration, database, app, utility
 
 
 class DeprecatedAPITestCase(tornado.testing.AsyncHTTPTestCase):
@@ -19,7 +19,7 @@ class DeprecatedAPITestCase(tornado.testing.AsyncHTTPTestCase):
         database.Base.metadata.create_all(database._engine)
 
     def get_app(self) -> tornado.web.Application:
-        return http.make_application()
+        return app.make_application()
 
     def test_api_new(self) -> None:
         response = self.fetch(
@@ -291,7 +291,7 @@ class APIv1TestCase(tornado.testing.AsyncHTTPTestCase):
         database.Base.metadata.create_all(database._engine)
 
     def get_app(self) -> tornado.web.Application:
-        return http.make_application()
+        return app.make_application()
 
     def test_api_new(self) -> None:
         response = self.fetch(
diff --git a/test/integration/test_http_curl.py b/test/integration/test_http_curl.py
index 08d0707..514fc08 100644
--- a/test/integration/test_http_curl.py
+++ b/test/integration/test_http_curl.py
@@ -10,7 +10,7 @@ configuration.ratelimit["read"]["capacity"] = 2**64 - 1
 configuration.ratelimit["create"]["capacity"] = 2**64 - 1
 configuration.ratelimit["delete"]["capacity"] = 2**64 - 1
 
-from pinnwand import database, http
+from pinnwand import database, app
 
 
 class CurlTestCase(tornado.testing.AsyncHTTPTestCase):
@@ -19,7 +19,7 @@ class CurlTestCase(tornado.testing.AsyncHTTPTestCase):
         database.Base.metadata.create_all(database._engine)
 
     def get_app(self) -> tornado.web.Application:
-        return http.make_application()
+        return app.make_application()
 
     def test_curl_post_no_lexer(self) -> None:
         response = self.fetch(
diff --git a/test/integration/test_http_website.py b/test/integration/test_http_website.py
index ffb2460..82cfb0e 100644
--- a/test/integration/test_http_website.py
+++ b/test/integration/test_http_website.py
@@ -9,7 +9,7 @@ configuration.ratelimit["read"]["capacity"] = 2**64 - 1
 configuration.ratelimit["create"]["capacity"] = 2**64 - 1
 configuration.ratelimit["delete"]["capacity"] = 2**64 - 1
 
-from pinnwand import database, http
+from pinnwand import database, app
 
 
 class WebsiteTestCase(tornado.testing.AsyncHTTPTestCase):
@@ -18,7 +18,7 @@ class WebsiteTestCase(tornado.testing.AsyncHTTPTestCase):
         database.Base.metadata.create_all(database._engine)
 
     def get_app(self) -> tornado.web.Application:
-        return http.make_application()
+        return app.make_application()
 
     def test_website_index(self) -> None:
         response = self.fetch(
@@ -402,7 +402,7 @@ class DeprecatedWebsiteTestCase(tornado.testing.AsyncHTTPTestCase):
         database.Base.metadata.create_all(database._engine)
 
     def get_app(self) -> tornado.web.Application:
-        return http.make_application()
+        return app.make_application()
 
     def test_website_index_post_no_lexer(self) -> None:
         response = self.fetch(
