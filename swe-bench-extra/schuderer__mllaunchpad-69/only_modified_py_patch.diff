diff --git a/mllaunchpad/wsgi.py b/mllaunchpad/wsgi.py
index f0247ab..e1284a3 100644
--- a/mllaunchpad/wsgi.py
+++ b/mllaunchpad/wsgi.py
@@ -25,24 +25,27 @@ logger = logging.getLogger(__name__)
 # necessary to wrap the preparatory code in a try:except: statement.
 try:
     conf = config.get_validated_config()
-
-    # if you change the name of the application variable, you need to
-    # specify it explicitly for gunicorn: gunicorn ... launchpad.wsgi:appname
-    application = Flask(__name__, root_path=conf["api"].get("root_path"))
-
-    ModelApi(conf, application)
 except FileNotFoundError:
     logger.error(
         "Config file could not be loaded. Starting the Flask application "
         "will fail."
     )
+    conf = None
 
-if __name__ == "__main__":
-    logger.warning(
-        "Starting Flask debug server.\nIn production, please use a WSGI server, "
-        + "e.g. 'gunicorn -w 4 -b 127.0.0.1:5000 mllaunchpad.wsgi:application'"
-    )
-    application.run(debug=True)
+    # if you change the name of the application variable, you need to
+    # specify it explicitly for gunicorn: gunicorn ... launchpad.wsgi:appname
+if conf:
+    application = Flask(__name__, root_path=conf["api"].get("root_path"))
+    ModelApi(conf, application)
+
+    if __name__ == "__main__":
+        logger.warning(
+            "Starting Flask debug server.\nIn production, please use a WSGI server, "
+            + "e.g. 'gunicorn -w 4 -b 127.0.0.1:5000 mllaunchpad.wsgi:application'"
+        )
+        # Flask apps must not be run in debug mode in production, because this allows for arbitrary code execution.
+        # We know that and advise the user that this is only for debugging, so this is not a security issue (marked nosec):
+        application.run(debug=True)  # nosec
 
 # To start an instance of production server with 4 workers:
 #  1. Set environment variables if required

