diff --git a/.gitignore b/.gitignore
index e6ff992..4a314cd 100644
--- a/.gitignore
+++ b/.gitignore
@@ -12,6 +12,7 @@ __pycache__/
 
 # Distribution / packaging
 .Python
+.env
 env/
 env3/
 venv/
@@ -25,6 +26,7 @@ lib/
 dist/
 lib64/
 parts/
+.pytest_cache/
 sdist/
 var/
 *.egg-info/
diff --git a/sap/cf_logging/formatters/json_formatter.py b/sap/cf_logging/formatters/json_formatter.py
index 9df5474..1e941d0 100644
--- a/sap/cf_logging/formatters/json_formatter.py
+++ b/sap/cf_logging/formatters/json_formatter.py
@@ -2,22 +2,26 @@
 import json
 import logging
 import sys
+from sap.cf_logging.record.simple_log_record import SimpleLogRecord
+
+def _default_serializer(obj):
+    return str(obj)
 
 if sys.version_info[0] == 3:
     def _encode(obj):
-        return json.dumps(obj)
+        return json.dumps(obj, default=_default_serializer)
 else:
     def _encode(obj):
-        return unicode(json.dumps(obj))  # pylint: disable=undefined-variable
+        return unicode(json.dumps(obj, default=_default_serializer))  # pylint: disable=undefined-variable
 
 
 class JsonFormatter(logging.Formatter):
     """
-    Formatter for non-web application log
+    Format application log in JSON format
     """
 
     def format(self, record):
-        """ Format the log record into a JSON object """
-        if hasattr(record, 'format'):
+        """ Format the known log records in JSON format """
+        if isinstance(record, SimpleLogRecord):
             return _encode(record.format())
-        return _encode(record.__dict__)
+        return super(JsonFormatter, self).format(record)
