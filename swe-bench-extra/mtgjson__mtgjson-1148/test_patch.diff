diff --git a/tests/mtgjson5/test_card_sorting.py b/tests/mtgjson5/test_card_sorting.py
index 61b02c1..39c92a3 100644
--- a/tests/mtgjson5/test_card_sorting.py
+++ b/tests/mtgjson5/test_card_sorting.py
@@ -5,30 +5,34 @@ from mtgjson5.classes.mtgjson_card import MtgjsonCardObject
 
 def test_card_sorting():
     correct_order = [
-        ("A", "1", None),
-        ("B", "2", None),
-        ("C1", "2a", "a"),
-        ("C2", "2b", "b"),
-        ("D", "3", None),
-        ("E", "10", None),
-        ("F1", "10a", "a"),
-        ("F2", "10b", "b"),
-        ("G", "11", None),
-        ("H", "20", None),
-        ("I", "", None),
+        ("0", None),
+        ("00", None),
+        ("ap0a", None),
+        ("gn0a", None),
+        ("1", None),
+        ("2", None),
+        ("2a", "a"),
+        ("2b", "b"),
+        ("3", None),
+        ("10", None),
+        ("10a", "a"),
+        ("10b", "b"),
+        ("11", None),
+        ("20", None),
+        ("", None),
     ]
 
     test_group = []
-    for name, number, side in correct_order:
+    for number, side in correct_order:
         card = MtgjsonCardObject()
-        card.name = name
         card.number = number
         card.side = side
         test_group.append(card)
 
-    random.shuffle(test_group)
-    test_group.sort()
+    for _ in range(0, 500):
+        random.shuffle(test_group)
+        test_group.sort()
 
-    test_group_order = list(map(lambda x: (x.name, x.number, x.side), test_group))
+        test_group_order = list(map(lambda x: (x.number, x.side), test_group))
 
-    assert correct_order == test_group_order
+        assert correct_order == test_group_order
