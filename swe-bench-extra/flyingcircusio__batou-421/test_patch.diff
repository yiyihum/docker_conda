diff --git a/src/batou/secrets/tests/test_manage.py b/src/batou/secrets/tests/test_manage.py
index ca9f3c73..5257b645 100644
--- a/src/batou/secrets/tests/test_manage.py
+++ b/src/batou/secrets/tests/test_manage.py
@@ -1,12 +1,14 @@
+import glob
 import os
 import shutil
+import sys
 import textwrap
 
 import pytest
 
 from batou.environment import UnknownEnvironmentError
 
-from ..manage import add_user, remove_user, summary
+from ..manage import add_user, reencrypt, remove_user, summary
 
 
 @pytest.mark.parametrize("func", (add_user, remove_user))
@@ -38,6 +40,32 @@ def test_manage__2(tmp_path, monkeypatch, capsys):
     assert "306151601E813A47" in out
 
 
+@pytest.mark.skipif(
+    sys.version_info < (3, 7),
+    reason="age is available in tests with python 3.7 only",
+)
+def test_manage__2_age(tmp_path, monkeypatch, capsys):
+    """It allows to add/remove_users in an age encrypted environment."""
+    shutil.copytree("examples/tutorial-secrets", tmp_path / "tutorial-secrets")
+    monkeypatch.chdir(tmp_path / "tutorial-secrets")
+
+    key_name = "https://github.com/ctheune.keys"
+
+    summary()
+    out, err = capsys.readouterr()
+    assert key_name in out
+
+    remove_user(key_name, "age")
+    summary()
+    out, err = capsys.readouterr()
+    assert key_name not in out
+
+    add_user(key_name, "age")
+    summary()
+    out, err = capsys.readouterr()
+    assert key_name in out
+
+
 def test_manage__summary__1(capsys, monkeypatch):
     """It prints a summary of the environments, members and secret files."""
     monkeypatch.chdir("examples/errors")
@@ -77,3 +105,34 @@ def test_manage__summary__3(capsys, monkeypatch):
     expected = "secretserror\n\t members"
     assert expected in out
     assert err == ""
+
+
+@pytest.mark.skipif(
+    sys.version_info < (3, 7),
+    reason="age is available in tests with python 3.7 only",
+)
+def test_manage__reencrypt__1(tmp_path, monkeypatch, capsys):
+    """It re-encrypts all files with the current members."""
+    shutil.copytree("examples/tutorial-secrets", tmp_path / "tutorial-secrets")
+
+    monkeypatch.chdir(tmp_path / "tutorial-secrets")
+
+    # read files environments/*/secret*
+    # and make sure all of them change
+    # when we re-encrypt
+
+    old = {}
+    for path in glob.glob("environments/*/secret*"):
+        with open(path, "rb") as f:
+            old[path] = f.read()
+
+    reencrypt("")  # empty string means all environments
+    new = {}
+    for path in glob.glob("environments/*/secret*"):
+        with open(path, "rb") as f:
+            new[path] = f.read()
+
+    for path in old:
+        assert old[path] != new[path]
+
+    assert set(old) == set(new)
